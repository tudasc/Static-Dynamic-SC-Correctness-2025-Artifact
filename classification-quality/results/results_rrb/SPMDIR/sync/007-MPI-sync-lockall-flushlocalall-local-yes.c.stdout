

--------------------------------------------------------------------------------------------------------------
Static Verification of Data Races:
--------------------------------------------------------------------------------------------------------------

results-20250730-140308/SPMDIR/sync/007-MPI-sync-lockall-flushlocalall-local-yes.c:45:33: warning: load operation/call may access the same memory as the previous operation without proper synch. (Data Race)
        printf("value is %d\n", value);
                                ^
results-20250730-140308/SPMDIR/sync/007-MPI-sync-lockall-flushlocalall-local-yes.c:45:33: note: see current operation: %22 = llvm.load %11 {alignment = 4 : i64, spmd.executedBy = array<i32: 0>, spmd.executionKind = "Static", tbaa = [#llvm.tbaa_tag<base_type = <id = "int", members = {<#llvm.tbaa_type_desc<id = "omnipotent char", members = {<#llvm.tbaa_root<id = "Simple C/C++ TBAA">, 0>}>, 0>}>, access_type = <id = "int", members = {<#llvm.tbaa_type_desc<id = "omnipotent char", members = {<#llvm.tbaa_root<id = "Simple C/C++ TBAA">, 0>}>, 0>}>, offset = 0>]} : !llvm.ptr -> i32


Previous operation:

results-20250730-140308/SPMDIR/sync/007-MPI-sync-lockall-flushlocalall-local-yes.c:43:9: warning: get operation/call
        MPI_Get(&value, 1, MPI_INT, 1, 0, 1, MPI_INT, win);
        ^
results-20250730-140308/SPMDIR/sync/007-MPI-sync-lockall-flushlocalall-local-yes.c:43:9: note: see current operation: %error_4 = "spmd.get"(%11, %c1_i64, %4, %c1_i64, %c1_i32, %win, %c0_i64, %c1_i64, %4, %c1_i64) <{isAtomic = true, isBlocking = false, usedModel = 0 : i32}> {spmd.executedBy = array<i32: 0>, spmd.executionKind = "Static"} : (!llvm.ptr, i64, !spmd.datatype, i64, i32, !spmd.win, i64, i64, !spmd.datatype, i64) -> !spmd.error


With the alias values:
Causing Access on: %11
Previous Access on: %11


On the orignal value:
Operand: %11


Defined by:
<unknown>:0: warning: alloca
<unknown>:0: note: see current operation: %11 = llvm.alloca %c1_i32 x i32 {alignment = 4 : i64, spmd.executionKind = "All"} : (i32) -> !llvm.ptr

--------------------------------------------------------------------------------------------------------------



