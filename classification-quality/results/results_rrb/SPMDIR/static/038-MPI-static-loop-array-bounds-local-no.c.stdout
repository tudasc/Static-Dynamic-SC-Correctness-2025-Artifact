

--------------------------------------------------------------------------------------------------------------
Static Verification of Data Races:
--------------------------------------------------------------------------------------------------------------

results-20250730-140308/SPMDIR/static/038-MPI-static-loop-array-bounds-local-no.c:43:21: warning: store operation/call may access the same memory as the previous operation without proper synch. (Data Race)
        arr_midp[0] = 3;
                    ^
results-20250730-140308/SPMDIR/static/038-MPI-static-loop-array-bounds-local-no.c:43:21: note: see current operation: llvm.store %1, %15 {alignment = 4 : i64, spmd.executedBy = array<i32: 0>, spmd.executionKind = "Static", tbaa = [#llvm.tbaa_tag<base_type = <id = "float", members = {<#llvm.tbaa_type_desc<id = "omnipotent char", members = {<#llvm.tbaa_root<id = "Simple C/C++ TBAA">, 0>}>, 0>}>, access_type = <id = "float", members = {<#llvm.tbaa_type_desc<id = "omnipotent char", members = {<#llvm.tbaa_root<id = "Simple C/C++ TBAA">, 0>}>, 0>}>, offset = 0>]} : f32, !llvm.ptr


Previous operation:

results-20250730-140308/SPMDIR/static/038-MPI-static-loop-array-bounds-local-no.c:42:13: warning: get operation/call
            MPI_Get(arr_base + i, 1, MPI_FLOAT, 1, 0, 1, MPI_FLOAT, win);
            ^
results-20250730-140308/SPMDIR/static/038-MPI-static-loop-array-bounds-local-no.c:42:13: note: see current operation: %error_3 = "spmd.get"(%27, %c1_i64, %6, %c1_i64, %c1_i32, %win, %c0_i64, %c1_i64, %6, %c1_i64) <{isAtomic = true, isBlocking = false, usedModel = 0 : i32}> {spmd.executedBy = array<i32: 0>, spmd.executionKind = "Static"} : (!llvm.ptr, i64, !spmd.datatype, i64, i32, !spmd.win, i64, i64, !spmd.datatype, i64) -> !spmd.error


With the alias values:
Causing Access on: %15
Previous Access on: %27


On the orignal value:
Operand: %baseAddress


Defined by:
results-20250730-140308/SPMDIR/static/038-MPI-static-loop-array-bounds-local-no.c:27:5: warning: winAlloc
    MPI_Win_allocate(ARR_SIZE * sizeof(float), sizeof(float), MPI_INFO_NULL, MPI_COMM_WORLD, &arr_base, &win);
    ^
results-20250730-140308/SPMDIR/static/038-MPI-static-loop-array-bounds-local-no.c:27:5: note: see current operation: %baseAddress, %win, %error_1 = "spmd.winAlloc"(%5, %c400_i64, %c4_i32) <{usedModel = 0 : i32}> {spmd.executionKind = "All"} : (!spmd.comm, i64, i32) -> (!llvm.ptr, !spmd.win, !spmd.error)

--------------------------------------------------------------------------------------------------------------

results-20250730-140308/SPMDIR/static/038-MPI-static-loop-array-bounds-local-no.c:42:13: warning: get operation/call may access the same memory as the previous operation without proper synch. (Data Race)
            MPI_Get(arr_base + i, 1, MPI_FLOAT, 1, 0, 1, MPI_FLOAT, win);
            ^
results-20250730-140308/SPMDIR/static/038-MPI-static-loop-array-bounds-local-no.c:42:13: note: see current operation: %error_3 = "spmd.get"(%27, %c1_i64, %6, %c1_i64, %c1_i32, %win, %c0_i64, %c1_i64, %6, %c1_i64) <{isAtomic = true, isBlocking = false, usedModel = 0 : i32}> {spmd.executedBy = array<i32: 0>, spmd.executionKind = "Static"} : (!llvm.ptr, i64, !spmd.datatype, i64, i32, !spmd.win, i64, i64, !spmd.datatype, i64) -> !spmd.error


Previous operation:

results-20250730-140308/SPMDIR/static/038-MPI-static-loop-array-bounds-local-no.c:42:13: warning: get operation/call
            MPI_Get(arr_base + i, 1, MPI_FLOAT, 1, 0, 1, MPI_FLOAT, win);
            ^
results-20250730-140308/SPMDIR/static/038-MPI-static-loop-array-bounds-local-no.c:42:13: note: see current operation: %error_3 = "spmd.get"(%27, %c1_i64, %6, %c1_i64, %c1_i32, %win, %c0_i64, %c1_i64, %6, %c1_i64) <{isAtomic = true, isBlocking = false, usedModel = 0 : i32}> {spmd.executedBy = array<i32: 0>, spmd.executionKind = "Static"} : (!llvm.ptr, i64, !spmd.datatype, i64, i32, !spmd.win, i64, i64, !spmd.datatype, i64) -> !spmd.error


With the alias values:
Causing Access on: %27
Previous Access on: %27


On the orignal value:
Operand: %baseAddress


Defined by:
results-20250730-140308/SPMDIR/static/038-MPI-static-loop-array-bounds-local-no.c:27:5: warning: winAlloc
    MPI_Win_allocate(ARR_SIZE * sizeof(float), sizeof(float), MPI_INFO_NULL, MPI_COMM_WORLD, &arr_base, &win);
    ^
results-20250730-140308/SPMDIR/static/038-MPI-static-loop-array-bounds-local-no.c:27:5: note: see current operation: %baseAddress, %win, %error_1 = "spmd.winAlloc"(%5, %c400_i64, %c4_i32) <{usedModel = 0 : i32}> {spmd.executionKind = "All"} : (!spmd.comm, i64, i32) -> (!llvm.ptr, !spmd.win, !spmd.error)

--------------------------------------------------------------------------------------------------------------



