

--------------------------------------------------------------------------------------------------------------
Static Verification of Data Races:
--------------------------------------------------------------------------------------------------------------

results-20250730-140308/SPMDIR/static/035-MPI-static-index-loop-local-no.c:44:26: warning: store operation/call may access the same memory as the previous operation without proper synch. (Data Race)
            localbuf[i-1]++;
                         ^
results-20250730-140308/SPMDIR/static/035-MPI-static-index-loop-local-no.c:44:26: note: see current operation: llvm.store %29, %27 {alignment = 4 : i64, spmd.executedBy = array<i32: 0>, spmd.executionKind = "Static", tbaa = [#llvm.tbaa_tag<base_type = <id = "int", members = {<#llvm.tbaa_type_desc<id = "omnipotent char", members = {<#llvm.tbaa_root<id = "Simple C/C++ TBAA">, 0>}>, 0>}>, access_type = <id = "int", members = {<#llvm.tbaa_type_desc<id = "omnipotent char", members = {<#llvm.tbaa_root<id = "Simple C/C++ TBAA">, 0>}>, 0>}>, offset = 0>]} : i32, !llvm.ptr


Previous operation:

results-20250730-140308/SPMDIR/static/035-MPI-static-index-loop-local-no.c:43:13: warning: put operation/call
            MPI_Put(localbuf + i, 1, MPI_INT, 1, i, 1, MPI_INT, win);
            ^
results-20250730-140308/SPMDIR/static/035-MPI-static-index-loop-local-no.c:43:13: note: see current operation: %error_4 = "spmd.put"(%24, %c1_i64, %4, %c1_i64, %c1_i32, %win, %23, %c1_i64, %4, %c1_i64) <{isAtomic = true, isBlocking = false, usedModel = 0 : i32}> {spmd.executedBy = array<i32: 0>, spmd.executionKind = "Static"} : (!llvm.ptr, i64, !spmd.datatype, i64, i32, !spmd.win, i64, i64, !spmd.datatype, i64) -> !spmd.error


With the alias values:
Causing Access on: %27
Previous Access on: %24


On the orignal value:
Operand: %10


Defined by:
<unknown>:0: warning: alloca
<unknown>:0: note: see current operation: %10 = llvm.alloca %c1_i32 x !llvm.array<10 x i32> {alignment = 16 : i64, spmd.executionKind = "All"} : (i32) -> !llvm.ptr

--------------------------------------------------------------------------------------------------------------



