

--------------------------------------------------------------------------------------------------------------
Static Verification of Data Races:
--------------------------------------------------------------------------------------------------------------

results-20250730-145557/SPMDIR/COLL/LocalConcurrency-mpi_igather-001.c:40:29: warning: store operation/call may access the same memory as the previous operation without proper synch. (Data Race)
  /*MBBERROR_BEGIN*/ buf[2] = 1; /*MBBERROR_END*/
                            ^
results-20250730-145557/SPMDIR/COLL/LocalConcurrency-mpi_igather-001.c:40:29: note: see current operation: llvm.store %c1_i32, %15 {alignment = 4 : i64, spmd.executionKind = "All", tbaa = [#llvm.tbaa_tag<base_type = <id = "int", members = {<#llvm.tbaa_type_desc<id = "omnipotent char", members = {<#llvm.tbaa_root<id = "Simple C/C++ TBAA">, 0>}>, 0>}>, access_type = <id = "int", members = {<#llvm.tbaa_type_desc<id = "omnipotent char", members = {<#llvm.tbaa_root<id = "Simple C/C++ TBAA">, 0>}>, 0>}>, offset = 0>]} : i32, !llvm.ptr


Previous operation:

results-20250730-145557/SPMDIR/COLL/LocalConcurrency-mpi_igather-001.c:38:23: warning: gather operation/call
  /*MBBERROR_BEGIN*/  MPI_Igather(buf, 10, MPI_INT, recv_buf, 10, MPI_INT, 0, MPI_COMM_WORLD,
                      ^
results-20250730-145557/SPMDIR/COLL/LocalConcurrency-mpi_igather-001.c:38:23: note: see current operation: %req, %error_1 = "spmd.gather"(%2, %11, %c10_i64, %3, %14, %c10_i64, %3, %c0_i32) <{isBlocking = false, usedModel = 0 : i32}> {spmd.executionKind = "All"} : (!spmd.comm, !llvm.ptr, i64, !spmd.datatype, !llvm.ptr, i64, !spmd.datatype, i32) -> (!spmd.req, !spmd.error)


With the alias values:
Causing Access on: %15
Previous Access on: %11


On the orignal value:
Operand: %11


Defined by:
results-20250730-145557/SPMDIR/COLL/LocalConcurrency-mpi_igather-001.c:34:21: warning: call
  int *buf = (int *)calloc(10, sizeof(int));
                    ^
results-20250730-145557/SPMDIR/COLL/LocalConcurrency-mpi_igather-001.c:34:21: note: see current operation: %11 = llvm.call @calloc(%c10_i64, %c4_i64) {memory_effects = #llvm.memory_effects<other = none, argMem = none, inaccessibleMem = readwrite>, no_unwind, spmd.executionKind = "All", will_return} : (i64, i64) -> !llvm.ptr

--------------------------------------------------------------------------------------------------------------



