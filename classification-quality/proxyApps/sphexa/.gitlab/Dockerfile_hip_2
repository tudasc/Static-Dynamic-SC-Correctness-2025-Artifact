ARG BASE_IMAGE
FROM $BASE_IMAGE

#{{{ readme
# rm -fr SPH-EXA.git ;cp -a SPH-EXA.git.ori SPH-EXA.git
# sudo docker build -f Dockerfile_2 -t deleteme:latest .
# sudo docker login -u piccinal jfrog.svc.cscs.ch
#   Error response from daemon: Get "https://jfrog.svc.cscs.ch/v2/": net/http:
#   request canceled while waiting for connection (Client.Timeout exceeded while
#   awaiting headers)
# 
#{{{ built on dom with: 
#   buildah bud --volume $PWD/SPH-EXA.git:/usr/local/games/SPH-EXA.git \
#   --format=docker -f Dockerfile_install \
#   --tag sph-exa_install:cuda_debug-gpud .
#
# CMAKE_BUILD_TYPE=Debug + GPU_DIRECT=OFF    sph-exa_install:cuda_debug-gpud
# CMAKE_BUILD_TYPE=Release + GPU_DIRECT=OFF  sph-exa_install:cuda_release-gpud
# CMAKE_BUILD_TYPE=Debug + GPU_DIRECT=ON     sph-exa_install:cuda_debug_plus_gpud
# CMAKE_BUILD_TYPE=Release + GPU_DIRECT=ON   sph-exa_install:cuda_release_plus_gpud
# buildah push sph-exa_install:cuda docker://art.cscs.ch/contbuild/testing/jg/sph-exa_install:cuda
#
# ART=docker://art.cscs.ch/contbuild/testing/jg/sph-exa_install
# buildah push localhost/sph-exa_install:cuda_release_plus_gpud $ART:cuda_release_plus_gpud    
# buildah push localhost/sph-exa_install:cuda_debug_plus_gpud   $ART:cuda_debug_plus_gpud   
# buildah push localhost/sph-exa_install:cuda_release-gpud      $ART:cuda_release-gpud     
# buildah push localhost/sph-exa_install:cuda_debug-gpud        $ART:cuda_debug-gpud
# -----------------
# mac:~/readme.containers
# FROM localhost/local:cuda
# base depends on: FROM nvidia/cuda:11.7.0-base-ubuntu20.04
#}}}
#{{{ sphexa:cuda
## debug with: 
#    buildah rm deleteme
#    buildah from --name deleteme aa3d015969d4
#    buildah run -t deleteme bash
#    buildah tag 8a2921008544 local:cuda # -> FROM localhost/local:cuda
#    buildah push localhost/local:cuda  docker://art.cscs.ch/contbuild/testing/jg/sph-exa_base:cuda
#}}}
#}}}
#{{{ readme PR
#   cd /scratch/snx3000tds/piccinal/reframe/stage/DEL/pr287
#   git clone https://github.com/unibas-dmi-hpc/SPH-EXA SPH-EXA.git
#   cd SPH-EXA.git ;gic hip-readiness;cd -
#   salloc -N1 -C'gpu&contbuild' -A`id -gn` -t0:30:0
#   ssh $SLURM_NODELIST
#   module load daint-gpu Buildah/1.26.1
#   ln -s /apps/common/UES/sandbox/jgp/hpctools.git/reframechecks/containers/Dockerfile_2
#   uncomment "COPY SPH-EXA.git" below
#   VV=sph-exa_build:pr287
#   buildah bud --format=docker --tag $VV -f Dockerfile_2 .
#   buildah images
#   buildah login -u $USER jfrog.svc.cscs.ch
#   buildah push $VV docker://jfrog.svc.cscs.ch/contbuild/testing/anfink/9590261141699040/pasc/sphexa/$VV
#   echo VV=$VV
#   logout/exit
#   #then
#   echo VV=$VV
#   mll sarus/1.5.1 # sarus/1.4.2
#   sarus pull --login jfrog.svc.cscs.ch/contbuild/testing/jg/$VV
#   or
#   sarus pull --login jfrog.svc.cscs.ch/contbuild/testing/anfink/9590261141699040/pasc/sphexa/$VV
#   sarus images
#   cd /apps/common/UES/sandbox/jgp/hpctools.git/reframechecks/containers/NEW
#   source ~/myvenv_dom/bin/activate
#   RFM_TRAP_JOB_ERRORS=1 ~/R -c reframe_ci.py \
#       -S image='jfrog.svc.cscs.ch/contbuild/testing/jg/sph-exa_build' \
#       -S build_type='pr289' -r
#   #sarus run -t jfrog.svc.cscs.ch/contbuild/testing/jg/$VV
#   # integration_mpi/exchange_halos_gpu
#}}}

ENV TZ 'Europe/Zurich'
ENV PATH "/opt/rocm/hip/bin:${PATH}"
ENV CMAKE_PREFIX_PATH "/opt/rocm/lib/cmake:/usr/local/HDF_Group/HDF5/1.13.2/share/cmake:${CMAKE_PREFIX_PATH}"
ENV CPATH "/usr/include/x86_64-linux-gnu/mpich:$CPATH"
ENV LC_ALL 'C'
ENV GGTEST_VERSION '/usr/local/games/googletest-release-1.12.1'
#    && export VV=/usr/local/games/googletest-release-1.12.1 \
# --mount type=bind,source=$PWD/SPH-EXA.git,target=/usr/local/games/SPH-EXA.git
# not needed in gitlab:
# COPY SPH-EXA.git /usr/local/games/SPH-EXA.git
# + TODO: ln -fs /sources/ SPH-EXA.git
COPY . /usr/local/games/SPH-EXA.git

#{{{ build
RUN echo \
    && echo "## cmake -B:" \
    && date \
    && ls -l /etc/alternatives/hipcc \
    && /opt/rocm/llvm/bin/clang++ --version \
    && unset GCC_X86_64 \
    && cd /usr/local/games/SPH-EXA.git \
    && ls -la . \
    && sed -i "s@GIT_REPOSITORY@SOURCE_DIR $GGTEST_VERSION/\n#@" ./domain/cmake/setup_GTest.cmake \
    && sed -i "s@GIT_REPOSITORY@SOURCE_DIR $GGTEST_VERSION/\n#@" ./cmake/setup_GTest.cmake \
    && sed -i "s@GIT_REPOSITORY@SOURCE_DIR $GGTEST_VERSION/\n#@" ./ryoanji/cmake/setup_GTest.cmake \
    && sed -i "s@GIT_TAG@#GIT_TAG @" ./domain/cmake/setup_GTest.cmake \
    && sed -i "s@GIT_TAG@#GIT_TAG @" ./cmake/setup_GTest.cmake \
    && sed -i "s@GIT_TAG@#GIT_TAG @" ./ryoanji/cmake/setup_GTest.cmake \
    && cd /usr/local/games \
    && MPICH_CXX=/opt/rocm-5.2.3/llvm/bin/clang++ \
       MPICH_CC=/opt/rocm-5.2.3/llvm/bin/clang \
       cmake -S SPH-EXA.git -B build \
       -DCMAKE_CXX_COMPILER=mpicxx -DCMAKE_C_COMPILER=mpicc \
       -DCMAKE_HIP_COMPILER=mpicxx -DCMAKE_HIP_COMPILER_FORCED=ON \
       -DCMAKE_HIP_ARCHITECTURES=gfx90a \
       -DCSTONE_WITH_GPU_AWARE_MPI=ON \
       -DBUILD_TESTING=OFF \
    && echo "## cmake --build :" \
    && MPICH_CXX=/opt/rocm-5.2.3/llvm/bin/clang++ \
       MPICH_CC=/opt/rocm-5.2.3/llvm/bin/clang \
       cmake --build build -j `grep processor /proc/cpuinfo | wc -l` -t sphexa-hip
#}}}

