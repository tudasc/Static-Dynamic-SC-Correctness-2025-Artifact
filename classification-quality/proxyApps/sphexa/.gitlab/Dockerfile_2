ARG BASE_IMAGE
FROM $BASE_IMAGE
#{{{ readme
# sarus pull --login jfrog.svc.cscs.ch/docker-ci-ext/44692846847247/base/sph-exa_base-cuda:c527c05af50cc172
# --> /scratch/snx3000tds/piccinal/.sarus/images/jfrog.svc.cscs.ch/docker-ci-ext/44692846847247/base/sph-exa_base-cuda/c527c05af50cc172.meta

# buildah login -u piccinal jfrog.svc.cscs.ch
# buildah pull jfrog.svc.cscs.ch/docker-ci-ext/44692846847247/base/sph-exa_base-cuda:c527c05af50cc172
#
# rm -fr SPH-EXA.git ;cp -a SPH-EXA.git.ori SPH-EXA.git
# sudo docker build -f Dockerfile_2 -t deleteme:latest .
# sudo docker login -u piccinal jfrog.svc.cscs.ch
#   Error response from daemon: Get "https://jfrog.svc.cscs.ch/v2/": net/http:
#   request canceled while waiting for connection (Client.Timeout exceeded while
#   awaiting headers)
# 
#{{{ built on dom with: 
#   buildah bud --volume $PWD/SPH-EXA.git:/usr/local/games/SPH-EXA.git \
#   --format=docker -f Dockerfile_install \
#   --tag sph-exa_install:cuda_debug-gpud .
#
# CMAKE_BUILD_TYPE=Debug + GPU_DIRECT=OFF    sph-exa_install:cuda_debug-gpud
# CMAKE_BUILD_TYPE=Release + GPU_DIRECT=OFF  sph-exa_install:cuda_release-gpud
# CMAKE_BUILD_TYPE=Debug + GPU_DIRECT=ON     sph-exa_install:cuda_debug_plus_gpud
# CMAKE_BUILD_TYPE=Release + GPU_DIRECT=ON   sph-exa_install:cuda_release_plus_gpud
# buildah push sph-exa_install:cuda docker://art.cscs.ch/contbuild/testing/jg/sph-exa_install:cuda
#
# ART=docker://art.cscs.ch/contbuild/testing/jg/sph-exa_install
# buildah push localhost/sph-exa_install:cuda_release_plus_gpud $ART:cuda_release_plus_gpud    
# buildah push localhost/sph-exa_install:cuda_debug_plus_gpud   $ART:cuda_debug_plus_gpud   
# buildah push localhost/sph-exa_install:cuda_release-gpud      $ART:cuda_release-gpud     
# buildah push localhost/sph-exa_install:cuda_debug-gpud        $ART:cuda_debug-gpud
# -----------------
# mac:~/readme.containers
# FROM localhost/local:cuda
# base depends on: FROM nvidia/cuda:11.7.0-base-ubuntu20.04
#}}}
#{{{ sphexa:cuda
## debug with: 
#    buildah rm deleteme
#    buildah from --name deleteme aa3d015969d4
#    buildah run -t deleteme bash
#    buildah tag 8a2921008544 local:cuda # -> FROM localhost/local:cuda
#    buildah push localhost/local:cuda  docker://art.cscs.ch/contbuild/testing/jg/sph-exa_base:cuda
#}}}
#}}}
#{{{ readme PR
#   cd /scratch/snx3000tds/piccinal/reframe/stage/DEL/pr287
#   git clone https://github.com/unibas-dmi-hpc/SPH-EXA SPH-EXA.git
#   cd SPH-EXA.git ;gic hip-readiness;cd -
#   salloc -N1 -C'gpu&contbuild' -A`id -gn` -t0:30:0
#   ssh $SLURM_NODELIST
#   module load daint-gpu Buildah/1.26.1
#   ln -s /apps/common/UES/sandbox/jgp/hpctools.git/reframechecks/containers/Dockerfile_2
#   uncomment "COPY SPH-EXA.git" below
#   VV=sph-exa_build:pr287
#   buildah bud --format=docker --tag $VV -f Dockerfile_2 .
#   buildah images
#   buildah login -u $USER jfrog.svc.cscs.ch
#   buildah push $VV docker://jfrog.svc.cscs.ch/contbuild/testing/anfink/9590261141699040/pasc/sphexa/$VV
#   echo VV=$VV
#   logout/exit
#   #then
#   echo VV=$VV
#   mll sarus/1.5.1 # sarus/1.4.2
#   sarus pull --login jfrog.svc.cscs.ch/contbuild/testing/jg/$VV
#   or
#   sarus pull --login jfrog.svc.cscs.ch/contbuild/testing/anfink/9590261141699040/pasc/sphexa/$VV
#   sarus images
#   cd /apps/common/UES/sandbox/jgp/hpctools.git/reframechecks/containers/NEW
#   source ~/myvenv_dom/bin/activate
#   RFM_TRAP_JOB_ERRORS=1 ~/R -c reframe_ci.py \
#       -S image='jfrog.svc.cscs.ch/contbuild/testing/jg/sph-exa_build' \
#       -S build_type='pr289' -r
#   #sarus run -t jfrog.svc.cscs.ch/contbuild/testing/jg/$VV
#   # integration_mpi/exchange_halos_gpu
#}}}

ENV TZ Europe/Zurich
ENV PATH="${PATH}:/usr/local/cuda/bin"
ENV CMAKE_PREFIX_PATH="/usr/local/HDF_Group/HDF5/1.13.2/share/cmake:${CMAKE_PREFIX_PATH}"
# --mount type=bind,source=$PWD/SPH-EXA.git,target=/usr/local/games/SPH-EXA.git
# not needed in gitlab:
# COPY SPH-EXA.git /usr/local/games/SPH-EXA.git
# + TODO: ln -fs /sources/ SPH-EXA.git
COPY . /usr/local/games/SPH-EXA.git

#{{{ build
RUN echo \
    && echo "## cmake -B:" \
    && date \
    && which nvcc \
    && nvcc --version \
    && cd /usr/local/games/SPH-EXA.git/ \
    && ls -la . \
    && export VV=/usr/local/games/googletest-release-1.12.1 \
    && sed -i "s@GIT_REPOSITORY@SOURCE_DIR $VV/\n#@" ./domain/cmake/setup_GTest.cmake \
    && sed -i "s@GIT_REPOSITORY@SOURCE_DIR $VV/\n#@" ./cmake/setup_GTest.cmake \
    && sed -i "s@GIT_REPOSITORY@SOURCE_DIR $VV/\n#@" ./ryoanji/cmake/setup_GTest.cmake \
    && sed -i "s@GIT_TAG@#GIT_TAG @" ./domain/cmake/setup_GTest.cmake \
    && sed -i "s@GIT_TAG@#GIT_TAG @" ./cmake/setup_GTest.cmake \
    && sed -i "s@GIT_TAG@#GIT_TAG @" ./ryoanji/cmake/setup_GTest.cmake \
    && cd /usr/local/games \
    && export CMAKE_PREFIX_PATH=/usr/local/HDF_Group/HDF5/1.13.2/cmake:$CMAKE_PREFIX_PATH \
    && cmake -S SPH-EXA.git -B build \
    -DCMAKE_CXX_COMPILER=mpicxx \
    -DCMAKE_C_COMPILER=mpicc \
    -DBUILD_TESTING=ON \
    -DBUILD_ANALYTICAL=ON \
    -DSPH_EXA_WITH_H5PART=ON \
    -DGPU_DIRECT=OFF \
    -DCMAKE_CUDA_FLAGS='-arch=sm_60' \
    -DCMAKE_BUILD_TYPE=Debug \
    && echo "## cmake --build + --install :" \
    && cmake --build build -j `grep processor /proc/cpuinfo | wc -l` \
    && cmake --install build \
    && cp SPH-EXA.git/.gitlab/rfm.py /usr/local/games/rfm.py \
    && ls /usr/local/sbin
#    -DSPH_EXA_WITH_HIP=OFF \
#     -DCMAKE_CXX_FLAGS_DEBUG="-g -w" \
#     #
#     -DGPU_DIRECT=OFF \
#     -DCMAKE_BUILD_TYPE=Debug \
#     #
#     -DGPU_DIRECT=OFF \
#     -DCMAKE_BUILD_TYPE=Release \
#     #
#     -DGPU_DIRECT=ON \
#     -DCMAKE_BUILD_TYPE=Debug \
#     #
#     -DGPU_DIRECT=ON \
#     -DCMAKE_BUILD_TYPE=Release \
#}}}

#del #{{{ test with:
#del #{{{ -> installed:
#del # -- Installing: /usr/local/sbin/coord_samples/coordinate_test
#del # -- Installing: /usr/local/sbin/integration_mpi/globaloctree
#del # -- Installing: /usr/local/sbin/integration_mpi/exchange_halos
#del # -- Installing: /usr/local/sbin/integration_mpi/box_mpi
#del # -- Installing: /usr/local/sbin/integration_mpi/exchange_focus
#del # -- Installing: /usr/local/sbin/integration_mpi/exchange_keys
#del # -- Installing: /usr/local/sbin/integration_mpi/focus_transfer
#del # -- Installing: /usr/local/sbin/integration_mpi/domain_2ranks
#del # -- Installing: /usr/local/sbin/integration_mpi/treedomain
#del # -- Installing: /usr/local/sbin/integration_mpi/exchange_general
#del # -- Installing: /usr/local/sbin/integration_mpi/exchange_domain
#del # -- Installing: /usr/local/sbin/integration_mpi/focus_tree
#del # -- Installing: /usr/local/sbin/integration_mpi/domain_nranks
#del # -- Installing: /usr/local/sbin/integration_mpi/exchange_halos_gpu
#del # -- Installing: /usr/local/sbin/performance/octree_perf
#del # -- Installing: /usr/local/sbin/performance/peers_perf
#del # -- Installing: /usr/local/sbin/performance/scan_perf
#del # -- Installing: /usr/local/sbin/performance/hilbert_perf
#del # -- Installing: /usr/local/sbin/performance/cudaNeighborsTest
#del # -- Installing: /usr/local/sbin/performance/octree_perf_gpu
#del # -- Installing: /usr/local/sbin/performance/hilbert_perf_gpu
#del # -- Installing: /usr/local/sbin/unit/component_units
#del # -- Installing: /usr/local/sbin/unit/component_units_omp
#del # -- Installing: /usr/local/sbin/unit_cuda/component_units_cuda
#del # -- Installing: /usr/local/sbin/ryoanji/ryoanji_demo/ryoanji_demo
#del # -- Installing: /usr/local/sbin/ryoanji/cpu_unit_tests/ryoanji_cpu_unit_tests
#del # -- Installing: /usr/local/sbin/ryoanji/unit_tests/ryoanji_unit_tests
#del # -- Installing: /usr/local/sbin/ryoanji/global_upsweep_cpu
#del # -- Installing: /usr/local/sbin/ryoanji/global_upsweep_gpu
#del # -- Installing: /usr/local/sbin/hydro/kernel_tests_std
#del # -- Installing: /usr/local/sbin/hydro/kernel_tests_ve
#del # -- Installing: /usr/local/bin/sphexa
#del # -- Installing: /usr/local/bin/sphexa-cuda
#del # -- Installing: /usr/local/bin/sedov_solution
#del # -- Installing: /usr/local/bin/compare_solutions.py
#del # -- Installing: /usr/local/bin/compare_noh.py
#del #}}}
#del #}}}
