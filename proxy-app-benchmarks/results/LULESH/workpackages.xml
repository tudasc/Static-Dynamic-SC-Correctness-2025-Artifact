<?xml version="1.0" encoding="UTF-8"?>
<workpackages>
  <workpackage id="0">
    <step iteration="0" cycle="0">build_cover</step>
    <parameterset>
      <parameter name="CMAKE_BUILD_TYPE" type="string" separator="," duplicate="none" mode="text">
        <value>RelWithDebInfo</value>
      </parameter>
      <parameter name="MPI_C_COMPILER" type="string" separator="," duplicate="none" mode="text">
        <value>mpicc</value>
      </parameter>
      <parameter name="MPI_CXX_COMPILER" type="string" separator="," duplicate="none" mode="text">
        <value>mpicxx</value>
      </parameter>
      <parameter name="ENABLE_TSAN" type="string" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="ENABLE_TYPEART" type="string" separator="," duplicate="none" mode="text">
        <value>OFF</value>
      </parameter>
      <parameter name="ENABLE_TESTS" type="string" separator="," duplicate="none" mode="text">
        <value>ON</value>
      </parameter>
      <parameter name="USE_BACKWARD" type="string" separator="," duplicate="none" mode="text">
        <value>ON</value>
      </parameter>
      <parameter name="cover_build_args" type="string" separator="," duplicate="none" mode="text">
        <value>-DMPI_C_COMPILER=${MPI_C_COMPILER} \
      -DMPI_CXX_COMPILER=${MPI_CXX_COMPILER} \
      -DCMAKE_Fortran_COMPILER=${MPI_Fortran_COMPILER} \
      -DCMAKE_INSTALL_PREFIX=&quot;${cover_install_folder}&quot; \
      -DENABLE_FORTRAN=${ENABLE_FORTRAN} \
      -DENABLE_TSAN=${ENABLE_TSAN} \
      -DENABLE_TYPEART=${ENABLE_TYPEART} \
      -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} \
      -DENABLE_TESTS=${ENABLE_TESTS} \
      -DGTI_DEBUG=${GTI_DEBUG} \
      -DUSE_BACKWARD=${USE_BACKWARD}</value>
        <selection>-DMPI_C_COMPILER=mpicc \
      -DMPI_CXX_COMPILER=mpicxx \
      -DCMAKE_Fortran_COMPILER=${MPI_Fortran_COMPILER} \
      -DCMAKE_INSTALL_PREFIX=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286/install&quot; \
      -DENABLE_FORTRAN=${ENABLE_FORTRAN} \
      -DENABLE_TSAN=1 \
      -DENABLE_TYPEART=OFF \
      -DCMAKE_BUILD_TYPE=RelWithDebInfo \
      -DENABLE_TESTS=ON \
      -DGTI_DEBUG=${GTI_DEBUG} \
      -DUSE_BACKWARD=ON</selection>
      </parameter>
      <parameter name="cover_git_clone_ssh" type="string" separator="," duplicate="none" mode="text">
        <value>https://github.com/tudasc/CoVer</value>
      </parameter>
      <parameter name="modulenames_defaults" type="string" separator=";" duplicate="none" mode="text">
        <value>{
            &quot;gcc&quot;: &quot;gcc&quot;,
            &quot;clang&quot;: &quot;clang&quot;,
            &quot;intelmpi&quot;: &quot;intelmpi&quot;,
            &quot;cmake&quot;: &quot;cmake&quot;
        }</value>
      </parameter>
      <parameter name="modulenames_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{
            &quot;gcc&quot;: &quot;GCC&quot;,
            &quot;clang&quot;: &quot;Clang&quot;,
            &quot;Classic-Flang&quot;: &quot;Classic-Flang&quot;,
            &quot;intel&quot;: &quot;intel&quot;,
            &quot;intelmpi&quot;: &quot;iimpi&quot;,
            &quot;gompi&quot;: &quot;gompi&quot;,
            &quot;openmpi&quot; : &quot;openmpi&quot;,
            &quot;mpich&quot; : &quot;mpich&quot;,
            &quot;cmake&quot; : &quot;CMake&quot;
        }</value>
      </parameter>
      <parameter name="modulenames" type="string" separator=";" duplicate="none" mode="python">
        <value>{key:value for (key, value) in list(${modulenames_defaults}.items()) + list(${modulenames_updated}.items())}</value>
        <selection>{'gcc': 'GCC', 'clang': 'Clang', 'intelmpi': 'iimpi', 'cmake': 'CMake', 'Classic-Flang': 'Classic-Flang', 'intel': 'intel', 'gompi': 'gompi', 'openmpi': 'openmpi', 'mpich': 'mpich'}</selection>
      </parameter>
      <parameter name="modules" type="string" separator=";" duplicate="none" mode="python">
        <value>{
              &quot;gcc&quot;:                &quot;{0[gcc]}/11.3.0&quot;.format(${modulenames}),
              &quot;gcc/8.3.0&quot;:          &quot;{0[gcc]}/8.3.0&quot;.format(${modulenames}),
              &quot;gcc/9.3.0&quot;:          &quot;{0[gcc]}/9.3.0&quot;.format(${modulenames}),
              &quot;gcc/9.4.0&quot;:          &quot;{0[gcc]}/9.4.0&quot;.format(${modulenames}),
              &quot;gcc/10.2.0&quot;:         &quot;{0[gcc]}/10.2.0&quot;.format(${modulenames}),
              &quot;gcc/10.3.0&quot;:         &quot;{0[gcc]}/10.3.0&quot;.format(${modulenames}),
              &quot;gcc/11.2.0&quot;:         &quot;{0[gcc]}/11.2.0&quot;.format(${modulenames}),
              &quot;gcc/11.3.0&quot;:         &quot;{0[gcc]}/11.3.0&quot;.format(${modulenames}),
              &quot;clang&quot;:              &quot;{0[clang]}/13.0.1&quot;.format(${modulenames}),
              &quot;clang/13.0.1&quot;:       &quot;{0[clang]}/13.0.1&quot;.format(${modulenames}),
              &quot;clang/15.0.5&quot;:       &quot;{0[clang]}/15.0.5&quot;.format(${modulenames}),
              &quot;clang/16.0.6&quot;:       &quot;{0[clang]}/16.0.6&quot;.format(${modulenames}),
              &quot;Classic-Flang&quot;:      &quot;{0[Classic-Flang]}/16.0.4-c23&quot;.format(${modulenames}),
              &quot;Classic-Flang/16.0.4-c23&quot;:  &quot;{0[Classic-Flang]}/16.0.4-c23&quot;.format(${modulenames}),
              &quot;Classic-Flang/16.0.4-c23-impi&quot;:  &quot;{0[Classic-Flang]}/16.0.4-c23-impi&quot;.format(${modulenames}),
              &quot;intel&quot;       :       &quot;{0[intel]}/2022a&quot;.format(${modulenames}),
              &quot;intel/2019b&quot; :       &quot;{0[intel]}/2019b&quot;.format(${modulenames}),
              &quot;intel/2020a&quot; :       &quot;{0[intel]}/2020a&quot;.format(${modulenames}),
              &quot;intel/2020b&quot; :       &quot;{0[intel]}/2020b&quot;.format(${modulenames}),
              &quot;intel/2021a&quot; :       &quot;{0[intel]}/2021a&quot;.format(${modulenames}),
              &quot;intel/2021b&quot; :       &quot;{0[intel]}/2021b&quot;.format(${modulenames}),
              &quot;intel/2022a&quot; :       &quot;{0[intel]}/2022a&quot;.format(${modulenames}),
              &quot;intel/2022b&quot; :       &quot;{0[intel]}/2022b&quot;.format(${modulenames}),
              &quot;intel/2023a&quot; :       &quot;{0[intel]}/2023a&quot;.format(${modulenames}),
              &quot;gompi/2020a&quot; :       &quot;{0[gompi]}/2020a&quot;.format(${modulenames}),
              &quot;gompi/2020b&quot; :       &quot;{0[gompi]}/2020b&quot;.format(${modulenames}),
              &quot;gompi/2021a&quot; :       &quot;{0[gompi]}/2021a&quot;.format(${modulenames}),
              &quot;gompi/2021b&quot; :       &quot;{0[gompi]}/2021b&quot;.format(${modulenames}),
              &quot;gompi/2022a&quot; :       &quot;{0[gompi]}/2022a&quot;.format(${modulenames}),
              &quot;gompi/2022b&quot; :       &quot;{0[gompi]}/2022b&quot;.format(${modulenames}),
              &quot;gompi/2023a&quot; :       &quot;{0[gompi]}/2023a&quot;.format(${modulenames}),
              &quot;gompi/2024a&quot; :       &quot;{0[gompi]}/2024a&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2022a&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2022b&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2023a&quot;.format(${modulenames}),
              &quot;openmpi&quot;:            &quot;{0[openmpi]}/4.1.4&quot;.format(${modulenames}),
              &quot;openmpi/4.0.3&quot;:      &quot;{0[openmpi]}/4.0.3&quot;.format(${modulenames}),
              &quot;openmpi/4.0.5&quot;:      &quot;{0[openmpi]}/4.0.5&quot;.format(${modulenames}),
              &quot;openmpi/4.1.1&quot;:      &quot;{0[openmpi]}/4.1.1&quot;.format(${modulenames}),
              &quot;openmpi/4.1.4&quot;:      &quot;{0[openmpi]}/4.1.4&quot;.format(${modulenames}),
              &quot;openmpi/4.1.5&quot;:      &quot;{0[openmpi]}/4.1.5&quot;.format(${modulenames}),
              &quot;openmpi/4.1.6&quot;:      &quot;{0[openmpi]}/4.1.6&quot;.format(${modulenames}),
              &quot;openmpi/4.1.6-ucx16&quot;:      &quot;{0[openmpi]}/4.1.6-ucx16&quot;.format(${modulenames}),
              &quot;mpich&quot;:              &quot;{0[mpich]}/4.1.2&quot;.format(${modulenames}),
              &quot;mpich/4.1.2&quot;:        &quot;{0[mpich]}/4.1.2&quot;.format(${modulenames}),
              &quot;cmake&quot;:               &quot;{0[cmake]}/3.23.1&quot;.format(${modulenames}),
              &quot;cmake/3.21.1&quot;:        &quot;{0[cmake]}/3.21.1&quot;.format(${modulenames}),
              &quot;cmake/3.22.1&quot;:        &quot;{0[cmake]}/3.22.1&quot;.format(${modulenames}),
              &quot;cmake/3.23.1&quot;:        &quot;{0[cmake]}/3.23.1&quot;.format(${modulenames}),
              &quot;cmake/3.24.3&quot;:        &quot;{0[cmake]}/3.24.3&quot;.format(${modulenames}),
              &quot;cmake/3.26.3&quot;:        &quot;{0[cmake]}/3.26.3&quot;.format(${modulenames}),
              &quot;cmake/3.29.3&quot;:        &quot;{0[cmake]}/3.29.3&quot;.format(${modulenames})    
          }</value>
        <selection>{'gcc': 'GCC/11.3.0', 'gcc/8.3.0': 'GCC/8.3.0', 'gcc/9.3.0': 'GCC/9.3.0', 'gcc/9.4.0': 'GCC/9.4.0', 'gcc/10.2.0': 'GCC/10.2.0', 'gcc/10.3.0': 'GCC/10.3.0', 'gcc/11.2.0': 'GCC/11.2.0', 'gcc/11.3.0': 'GCC/11.3.0', 'clang': 'Clang/13.0.1', 'clang/13.0.1': 'Clang/13.0.1', 'clang/15.0.5': 'Clang/15.0.5', 'clang/16.0.6': 'Clang/16.0.6', 'Classic-Flang': 'Classic-Flang/16.0.4-c23', 'Classic-Flang/16.0.4-c23': 'Classic-Flang/16.0.4-c23', 'Classic-Flang/16.0.4-c23-impi': 'Classic-Flang/16.0.4-c23-impi', 'intel': 'intel/2022a', 'intel/2019b': 'intel/2019b', 'intel/2020a': 'intel/2020a', 'intel/2020b': 'intel/2020b', 'intel/2021a': 'intel/2021a', 'intel/2021b': 'intel/2021b', 'intel/2022a': 'intel/2022a', 'intel/2022b': 'intel/2022b', 'intel/2023a': 'intel/2023a', 'gompi/2020a': 'gompi/2020a', 'gompi/2020b': 'gompi/2020b', 'gompi/2021a': 'gompi/2021a', 'gompi/2021b': 'gompi/2021b', 'gompi/2022a': 'gompi/2022a', 'gompi/2022b': 'gompi/2022b', 'gompi/2023a': 'gompi/2023a', 'gompi/2024a': 'gompi/2024a', 'intelmpi': 'iimpi/2023a', 'openmpi': 'openmpi/4.1.4', 'openmpi/4.0.3': 'openmpi/4.0.3', 'openmpi/4.0.5': 'openmpi/4.0.5', 'openmpi/4.1.1': 'openmpi/4.1.1', 'openmpi/4.1.4': 'openmpi/4.1.4', 'openmpi/4.1.5': 'openmpi/4.1.5', 'openmpi/4.1.6': 'openmpi/4.1.6', 'openmpi/4.1.6-ucx16': 'openmpi/4.1.6-ucx16', 'mpich': 'mpich/4.1.2', 'mpich/4.1.2': 'mpich/4.1.2', 'cmake': 'CMake/3.23.1', 'cmake/3.21.1': 'CMake/3.21.1', 'cmake/3.22.1': 'CMake/3.22.1', 'cmake/3.23.1': 'CMake/3.23.1', 'cmake/3.24.3': 'CMake/3.24.3', 'cmake/3.26.3': 'CMake/3.26.3', 'cmake/3.29.3': 'CMake/3.29.3'}</selection>
      </parameter>
      <parameter name="prerequisite_modules_dict" type="string" separator=";" duplicate="none" mode="python">
        <value>{
            &quot;clang/13.0.1&quot;:       [&quot;GCCcore/.11.3.0&quot;, &quot;GCC/11.3.0&quot;],
            &quot;clang/15.0.5&quot;:       [&quot;GCCcore/.11.3.0&quot;, &quot;GCC/11.3.0&quot;],
            &quot;clang/16.0.6&quot;:       [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;Classic-Flang/16.0.4-c23&quot;:  [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;Classic-Flang/16.0.4-c23-impi&quot;:  [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;intelmpi/2021.6.0&quot;:  [&quot;intel-compilers/2022.1.0&quot;],
            &quot;openmpi/4.0.3&quot;:      [&quot;GCC/9.3.0&quot;],
            &quot;openmpi/4.0.5&quot;:      [&quot;GCC/10.2.0&quot;],
            &quot;openmpi/4.1.1&quot;:      [&quot;GCC/11.2.0&quot;],
            &quot;openmpi/4.1.4&quot;:      [&quot;GCC/11.3.0&quot;],
            &quot;openmpi/4.1.5&quot;:      [&quot;GCC/12.3.0&quot;],
            &quot;openmpi/4.1.6&quot;:      [&quot;GCC/12.3.0&quot;],
            &quot;openmpi/4.1.6-ucx16&quot;:      [&quot;GCC/12.3.0&quot;],
        }</value>
        <selection>{'clang/13.0.1': ['GCCcore/.11.3.0', 'GCC/11.3.0'], 'clang/15.0.5': ['GCCcore/.11.3.0', 'GCC/11.3.0'], 'clang/16.0.6': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'Classic-Flang/16.0.4-c23': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'Classic-Flang/16.0.4-c23-impi': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'intelmpi/2021.6.0': ['intel-compilers/2022.1.0'], 'openmpi/4.0.3': ['GCC/9.3.0'], 'openmpi/4.0.5': ['GCC/10.2.0'], 'openmpi/4.1.1': ['GCC/11.2.0'], 'openmpi/4.1.4': ['GCC/11.3.0'], 'openmpi/4.1.5': ['GCC/12.3.0'], 'openmpi/4.1.6': ['GCC/12.3.0'], 'openmpi/4.1.6-ucx16': ['GCC/12.3.0']}</selection>
      </parameter>
      <parameter name="cmake_version" type="string" separator="," duplicate="none" mode="text">
        <value>3.29.3</value>
      </parameter>
      <parameter name="cmake_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;cmake/${cmake_version}&quot;) if $modules.get(&quot;cmake/${cmake_version}&quot;) else $modules.get(&quot;cmake&quot;, &quot;cmake/${cmake_version}&quot;)</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="prerequisite_toolchain_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__toolchain_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_compiler_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__compiler_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_mpi_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__mpi_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_modules" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="toolchain_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${toolchain_name}/${toolchain_version}&quot;, $modules.get(&quot;${toolchain_name}&quot;, &quot;${toolchain_name}&quot; + (&quot;/${toolchain_version}&quot; if &quot;${toolchain_version}&quot; else &quot;&quot;)))</value>
        <selection>gompi/2024a</selection>
      </parameter>
      <parameter name="compiler_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${compiler_name}/${compiler_version}&quot;, $modules.get(&quot;${compiler_name}&quot;, &quot;${compiler_name}&quot; + (&quot;/${compiler_version}&quot; if &quot;${compiler_version}&quot; else &quot;&quot;)))</value>
        <selection>LLVM/19</selection>
      </parameter>
      <parameter name="mpi_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${mpi_name}/${mpi_version}&quot;, $modules.get(&quot;${mpi_name}&quot;, &quot;${mpi_name}&quot; + (&quot;/${mpi_version}&quot; if &quot;${mpi_version}&quot; else &quot;&quot;)))</value>
        <selection>${mpi_name}/${mpi_version}</selection>
      </parameter>
      <parameter name="required_modules" type="string" separator="," duplicate="none" mode="text">
        <value>${prerequisite_modules} ${toolchain_module} ${mpi_module} ${compiler_module} ${cmake_module} ${must_prerequisite_modules}</value>
        <selection> gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}</selection>
      </parameter>
      <parameter name="use_modules" type="string" separator="," duplicate="none" mode="text">
        <value>/home/rwth1269/modules</value>
      </parameter>
      <parameter name="load_modules" type="string" separator="," duplicate="none" mode="text">
        <value>module use /home/rwth1269/modules/; module purge; for path in ${use_modules}; do module use $path; done; for modulename in ${required_modules}; do module load $modulename; done</value>
        <selection>module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done</selection>
      </parameter>
      <parameter name="__toolchain_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${toolchain_module}&quot;.lower()</value>
        <selection>gompi/2024a</selection>
      </parameter>
      <parameter name="__compiler_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${compiler_module}&quot;.lower()</value>
        <selection>llvm/19</selection>
      </parameter>
      <parameter name="__mpi_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${mpi_module}&quot;.lower()</value>
        <selection>${mpi_name}/${mpi_version}</selection>
      </parameter>
      <parameter name="export_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{
              (&quot;clang&quot;, &quot;intelmpi&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;intelmpi&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;clang&quot;, &quot;openmpi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;, &quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;clang&quot;, &quot;intel&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;intel&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;clang&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;],
              (&quot;Classic-Flang&quot;, &quot;mpich&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;openmpi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;OMPI_FC=flang&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;,&quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;Classic-Flang&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;OMPI_FC=flang&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;,&quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;LLVM&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;CC=clang&quot;, &quot;CXX=clang++&quot;, &quot;PMIX_MCA_gds=hash&quot;, &quot;OMPI_MCA_memory=^patcher&quot;],
          }</value>
      </parameter>
      <parameter name="compiler_mpi_export" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join($export_dict.get((&quot;${compiler_name}&quot;,&quot;${mpi_name}&quot;), []))</value>
        <selection/>
      </parameter>
      <parameter name="compiler_toolchain_export" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join($export_dict.get((&quot;${compiler_name}&quot;,&quot;${toolchain_name}&quot;), []))</value>
        <selection>OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher</selection>
      </parameter>
      <parameter name="required_exports" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${compiler_mpi_export} ${compiler_toolchain_export} ${openmp_export} ${parcoach_export}</value>
        <selection> OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}</selection>
      </parameter>
      <parameter name="export" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>for item in ${required_exports}; do export &quot;$item&quot;; done</value>
        <selection>for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done</selection>
      </parameter>
      <parameter name="toolchain_name" type="string" separator="," duplicate="none" mode="text">
        <value>gompi</value>
      </parameter>
      <parameter name="toolchain_version" type="string" separator="," duplicate="none" mode="text">
        <value>2024a</value>
      </parameter>
      <parameter name="compiler_name" type="string" separator="," duplicate="none" mode="text">
        <value>LLVM</value>
      </parameter>
      <parameter name="compiler_version" type="string" separator="," duplicate="none" mode="text">
        <value>19</value>
      </parameter>
      <parameter name="cover_commit" type="string" separator="," duplicate="none" mode="text">
        <value>0f7a319af74b571095d308ac9f87e5acfbc56ef1</value>
      </parameter>
      <parameter name="build_cover" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_cover_build} || [ ! -f &quot;${cover_cc_bin}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="cover_prerequisite_modules" type="string" separator=";" duplicate="none" mode="text">
        <value>Java</value>
      </parameter>
      <parameter name="cover_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/CoVer/${__cover_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286</selection>
      </parameter>
      <parameter name="cover_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${cover_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286/build</selection>
      </parameter>
      <parameter name="cover_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${cover_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286/install</selection>
      </parameter>
      <parameter name="cover_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../CoVeR</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../CoVeR</selection>
      </parameter>
      <parameter name="coverbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${cover_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286/install/bin</selection>
      </parameter>
      <parameter name="cover_cc_bin" type="string" separator="," duplicate="none" mode="text">
        <value>${coverbin_path}/clangContracts</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286/install/bin/clangContracts</selection>
      </parameter>
      <parameter name="cover_cxx_bin" type="string" separator="," duplicate="none" mode="text">
        <value>${coverbin_path}/clangContracts++</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286/install/bin/clangContracts++</selection>
      </parameter>
      <parameter name="COVER_CC" type="string" separator="," duplicate="none" mode="text">
        <value>${cover_cc_bin} --allow-multireports</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286/install/bin/clangContracts --allow-multireports</selection>
      </parameter>
      <parameter name="COVER_CXX" type="string" separator="," duplicate="none" mode="text">
        <value>${cover_cxx_bin} --allow-multireports</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286/install/bin/clangContracts++ --allow-multireports</selection>
      </parameter>
      <parameter name="cover_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${cover_cc_bin}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_cover_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__cover_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${cover_commit} ${cover_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>2da69b5d999c53f4a7c73596824a3286</selection>
      </parameter>
    </parameterset>
    <iteration_siblings>0</iteration_siblings>
    <environment/>
  </workpackage>
  <workpackage id="1">
    <step iteration="0" cycle="0">build_must</step>
    <parameterset>
      <parameter name="modulenames_defaults" type="string" separator=";" duplicate="none" mode="text">
        <value>{
            &quot;gcc&quot;: &quot;gcc&quot;,
            &quot;clang&quot;: &quot;clang&quot;,
            &quot;intelmpi&quot;: &quot;intelmpi&quot;,
            &quot;cmake&quot;: &quot;cmake&quot;
        }</value>
      </parameter>
      <parameter name="modulenames_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{
            &quot;gcc&quot;: &quot;GCC&quot;,
            &quot;clang&quot;: &quot;Clang&quot;,
            &quot;Classic-Flang&quot;: &quot;Classic-Flang&quot;,
            &quot;intel&quot;: &quot;intel&quot;,
            &quot;intelmpi&quot;: &quot;iimpi&quot;,
            &quot;gompi&quot;: &quot;gompi&quot;,
            &quot;openmpi&quot; : &quot;openmpi&quot;,
            &quot;mpich&quot; : &quot;mpich&quot;,
            &quot;cmake&quot; : &quot;CMake&quot;
        }</value>
      </parameter>
      <parameter name="modulenames" type="string" separator=";" duplicate="none" mode="python">
        <value>{key:value for (key, value) in list(${modulenames_defaults}.items()) + list(${modulenames_updated}.items())}</value>
        <selection>{'gcc': 'GCC', 'clang': 'Clang', 'intelmpi': 'iimpi', 'cmake': 'CMake', 'Classic-Flang': 'Classic-Flang', 'intel': 'intel', 'gompi': 'gompi', 'openmpi': 'openmpi', 'mpich': 'mpich'}</selection>
      </parameter>
      <parameter name="modules" type="string" separator=";" duplicate="none" mode="python">
        <value>{
              &quot;gcc&quot;:                &quot;{0[gcc]}/11.3.0&quot;.format(${modulenames}),
              &quot;gcc/8.3.0&quot;:          &quot;{0[gcc]}/8.3.0&quot;.format(${modulenames}),
              &quot;gcc/9.3.0&quot;:          &quot;{0[gcc]}/9.3.0&quot;.format(${modulenames}),
              &quot;gcc/9.4.0&quot;:          &quot;{0[gcc]}/9.4.0&quot;.format(${modulenames}),
              &quot;gcc/10.2.0&quot;:         &quot;{0[gcc]}/10.2.0&quot;.format(${modulenames}),
              &quot;gcc/10.3.0&quot;:         &quot;{0[gcc]}/10.3.0&quot;.format(${modulenames}),
              &quot;gcc/11.2.0&quot;:         &quot;{0[gcc]}/11.2.0&quot;.format(${modulenames}),
              &quot;gcc/11.3.0&quot;:         &quot;{0[gcc]}/11.3.0&quot;.format(${modulenames}),
              &quot;clang&quot;:              &quot;{0[clang]}/13.0.1&quot;.format(${modulenames}),
              &quot;clang/13.0.1&quot;:       &quot;{0[clang]}/13.0.1&quot;.format(${modulenames}),
              &quot;clang/15.0.5&quot;:       &quot;{0[clang]}/15.0.5&quot;.format(${modulenames}),
              &quot;clang/16.0.6&quot;:       &quot;{0[clang]}/16.0.6&quot;.format(${modulenames}),
              &quot;Classic-Flang&quot;:      &quot;{0[Classic-Flang]}/16.0.4-c23&quot;.format(${modulenames}),
              &quot;Classic-Flang/16.0.4-c23&quot;:  &quot;{0[Classic-Flang]}/16.0.4-c23&quot;.format(${modulenames}),
              &quot;Classic-Flang/16.0.4-c23-impi&quot;:  &quot;{0[Classic-Flang]}/16.0.4-c23-impi&quot;.format(${modulenames}),
              &quot;intel&quot;       :       &quot;{0[intel]}/2022a&quot;.format(${modulenames}),
              &quot;intel/2019b&quot; :       &quot;{0[intel]}/2019b&quot;.format(${modulenames}),
              &quot;intel/2020a&quot; :       &quot;{0[intel]}/2020a&quot;.format(${modulenames}),
              &quot;intel/2020b&quot; :       &quot;{0[intel]}/2020b&quot;.format(${modulenames}),
              &quot;intel/2021a&quot; :       &quot;{0[intel]}/2021a&quot;.format(${modulenames}),
              &quot;intel/2021b&quot; :       &quot;{0[intel]}/2021b&quot;.format(${modulenames}),
              &quot;intel/2022a&quot; :       &quot;{0[intel]}/2022a&quot;.format(${modulenames}),
              &quot;intel/2022b&quot; :       &quot;{0[intel]}/2022b&quot;.format(${modulenames}),
              &quot;intel/2023a&quot; :       &quot;{0[intel]}/2023a&quot;.format(${modulenames}),
              &quot;gompi/2020a&quot; :       &quot;{0[gompi]}/2020a&quot;.format(${modulenames}),
              &quot;gompi/2020b&quot; :       &quot;{0[gompi]}/2020b&quot;.format(${modulenames}),
              &quot;gompi/2021a&quot; :       &quot;{0[gompi]}/2021a&quot;.format(${modulenames}),
              &quot;gompi/2021b&quot; :       &quot;{0[gompi]}/2021b&quot;.format(${modulenames}),
              &quot;gompi/2022a&quot; :       &quot;{0[gompi]}/2022a&quot;.format(${modulenames}),
              &quot;gompi/2022b&quot; :       &quot;{0[gompi]}/2022b&quot;.format(${modulenames}),
              &quot;gompi/2023a&quot; :       &quot;{0[gompi]}/2023a&quot;.format(${modulenames}),
              &quot;gompi/2024a&quot; :       &quot;{0[gompi]}/2024a&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2022a&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2022b&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2023a&quot;.format(${modulenames}),
              &quot;openmpi&quot;:            &quot;{0[openmpi]}/4.1.4&quot;.format(${modulenames}),
              &quot;openmpi/4.0.3&quot;:      &quot;{0[openmpi]}/4.0.3&quot;.format(${modulenames}),
              &quot;openmpi/4.0.5&quot;:      &quot;{0[openmpi]}/4.0.5&quot;.format(${modulenames}),
              &quot;openmpi/4.1.1&quot;:      &quot;{0[openmpi]}/4.1.1&quot;.format(${modulenames}),
              &quot;openmpi/4.1.4&quot;:      &quot;{0[openmpi]}/4.1.4&quot;.format(${modulenames}),
              &quot;openmpi/4.1.5&quot;:      &quot;{0[openmpi]}/4.1.5&quot;.format(${modulenames}),
              &quot;openmpi/4.1.6&quot;:      &quot;{0[openmpi]}/4.1.6&quot;.format(${modulenames}),
              &quot;openmpi/4.1.6-ucx16&quot;:      &quot;{0[openmpi]}/4.1.6-ucx16&quot;.format(${modulenames}),
              &quot;mpich&quot;:              &quot;{0[mpich]}/4.1.2&quot;.format(${modulenames}),
              &quot;mpich/4.1.2&quot;:        &quot;{0[mpich]}/4.1.2&quot;.format(${modulenames}),
              &quot;cmake&quot;:               &quot;{0[cmake]}/3.23.1&quot;.format(${modulenames}),
              &quot;cmake/3.21.1&quot;:        &quot;{0[cmake]}/3.21.1&quot;.format(${modulenames}),
              &quot;cmake/3.22.1&quot;:        &quot;{0[cmake]}/3.22.1&quot;.format(${modulenames}),
              &quot;cmake/3.23.1&quot;:        &quot;{0[cmake]}/3.23.1&quot;.format(${modulenames}),
              &quot;cmake/3.24.3&quot;:        &quot;{0[cmake]}/3.24.3&quot;.format(${modulenames}),
              &quot;cmake/3.26.3&quot;:        &quot;{0[cmake]}/3.26.3&quot;.format(${modulenames}),
              &quot;cmake/3.29.3&quot;:        &quot;{0[cmake]}/3.29.3&quot;.format(${modulenames})    
          }</value>
        <selection>{'gcc': 'GCC/11.3.0', 'gcc/8.3.0': 'GCC/8.3.0', 'gcc/9.3.0': 'GCC/9.3.0', 'gcc/9.4.0': 'GCC/9.4.0', 'gcc/10.2.0': 'GCC/10.2.0', 'gcc/10.3.0': 'GCC/10.3.0', 'gcc/11.2.0': 'GCC/11.2.0', 'gcc/11.3.0': 'GCC/11.3.0', 'clang': 'Clang/13.0.1', 'clang/13.0.1': 'Clang/13.0.1', 'clang/15.0.5': 'Clang/15.0.5', 'clang/16.0.6': 'Clang/16.0.6', 'Classic-Flang': 'Classic-Flang/16.0.4-c23', 'Classic-Flang/16.0.4-c23': 'Classic-Flang/16.0.4-c23', 'Classic-Flang/16.0.4-c23-impi': 'Classic-Flang/16.0.4-c23-impi', 'intel': 'intel/2022a', 'intel/2019b': 'intel/2019b', 'intel/2020a': 'intel/2020a', 'intel/2020b': 'intel/2020b', 'intel/2021a': 'intel/2021a', 'intel/2021b': 'intel/2021b', 'intel/2022a': 'intel/2022a', 'intel/2022b': 'intel/2022b', 'intel/2023a': 'intel/2023a', 'gompi/2020a': 'gompi/2020a', 'gompi/2020b': 'gompi/2020b', 'gompi/2021a': 'gompi/2021a', 'gompi/2021b': 'gompi/2021b', 'gompi/2022a': 'gompi/2022a', 'gompi/2022b': 'gompi/2022b', 'gompi/2023a': 'gompi/2023a', 'gompi/2024a': 'gompi/2024a', 'intelmpi': 'iimpi/2023a', 'openmpi': 'openmpi/4.1.4', 'openmpi/4.0.3': 'openmpi/4.0.3', 'openmpi/4.0.5': 'openmpi/4.0.5', 'openmpi/4.1.1': 'openmpi/4.1.1', 'openmpi/4.1.4': 'openmpi/4.1.4', 'openmpi/4.1.5': 'openmpi/4.1.5', 'openmpi/4.1.6': 'openmpi/4.1.6', 'openmpi/4.1.6-ucx16': 'openmpi/4.1.6-ucx16', 'mpich': 'mpich/4.1.2', 'mpich/4.1.2': 'mpich/4.1.2', 'cmake': 'CMake/3.23.1', 'cmake/3.21.1': 'CMake/3.21.1', 'cmake/3.22.1': 'CMake/3.22.1', 'cmake/3.23.1': 'CMake/3.23.1', 'cmake/3.24.3': 'CMake/3.24.3', 'cmake/3.26.3': 'CMake/3.26.3', 'cmake/3.29.3': 'CMake/3.29.3'}</selection>
      </parameter>
      <parameter name="prerequisite_modules_dict" type="string" separator=";" duplicate="none" mode="python">
        <value>{
            &quot;clang/13.0.1&quot;:       [&quot;GCCcore/.11.3.0&quot;, &quot;GCC/11.3.0&quot;],
            &quot;clang/15.0.5&quot;:       [&quot;GCCcore/.11.3.0&quot;, &quot;GCC/11.3.0&quot;],
            &quot;clang/16.0.6&quot;:       [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;Classic-Flang/16.0.4-c23&quot;:  [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;Classic-Flang/16.0.4-c23-impi&quot;:  [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;intelmpi/2021.6.0&quot;:  [&quot;intel-compilers/2022.1.0&quot;],
            &quot;openmpi/4.0.3&quot;:      [&quot;GCC/9.3.0&quot;],
            &quot;openmpi/4.0.5&quot;:      [&quot;GCC/10.2.0&quot;],
            &quot;openmpi/4.1.1&quot;:      [&quot;GCC/11.2.0&quot;],
            &quot;openmpi/4.1.4&quot;:      [&quot;GCC/11.3.0&quot;],
            &quot;openmpi/4.1.5&quot;:      [&quot;GCC/12.3.0&quot;],
            &quot;openmpi/4.1.6&quot;:      [&quot;GCC/12.3.0&quot;],
            &quot;openmpi/4.1.6-ucx16&quot;:      [&quot;GCC/12.3.0&quot;],
        }</value>
        <selection>{'clang/13.0.1': ['GCCcore/.11.3.0', 'GCC/11.3.0'], 'clang/15.0.5': ['GCCcore/.11.3.0', 'GCC/11.3.0'], 'clang/16.0.6': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'Classic-Flang/16.0.4-c23': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'Classic-Flang/16.0.4-c23-impi': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'intelmpi/2021.6.0': ['intel-compilers/2022.1.0'], 'openmpi/4.0.3': ['GCC/9.3.0'], 'openmpi/4.0.5': ['GCC/10.2.0'], 'openmpi/4.1.1': ['GCC/11.2.0'], 'openmpi/4.1.4': ['GCC/11.3.0'], 'openmpi/4.1.5': ['GCC/12.3.0'], 'openmpi/4.1.6': ['GCC/12.3.0'], 'openmpi/4.1.6-ucx16': ['GCC/12.3.0']}</selection>
      </parameter>
      <parameter name="cmake_version" type="string" separator="," duplicate="none" mode="text">
        <value>3.29.3</value>
      </parameter>
      <parameter name="cmake_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;cmake/${cmake_version}&quot;) if $modules.get(&quot;cmake/${cmake_version}&quot;) else $modules.get(&quot;cmake&quot;, &quot;cmake/${cmake_version}&quot;)</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="prerequisite_toolchain_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__toolchain_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_compiler_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__compiler_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_mpi_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__mpi_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_modules" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="toolchain_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${toolchain_name}/${toolchain_version}&quot;, $modules.get(&quot;${toolchain_name}&quot;, &quot;${toolchain_name}&quot; + (&quot;/${toolchain_version}&quot; if &quot;${toolchain_version}&quot; else &quot;&quot;)))</value>
        <selection>gompi/2024a</selection>
      </parameter>
      <parameter name="compiler_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${compiler_name}/${compiler_version}&quot;, $modules.get(&quot;${compiler_name}&quot;, &quot;${compiler_name}&quot; + (&quot;/${compiler_version}&quot; if &quot;${compiler_version}&quot; else &quot;&quot;)))</value>
        <selection>LLVM/19</selection>
      </parameter>
      <parameter name="mpi_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${mpi_name}/${mpi_version}&quot;, $modules.get(&quot;${mpi_name}&quot;, &quot;${mpi_name}&quot; + (&quot;/${mpi_version}&quot; if &quot;${mpi_version}&quot; else &quot;&quot;)))</value>
        <selection>${mpi_name}/${mpi_version}</selection>
      </parameter>
      <parameter name="required_modules" type="string" separator="," duplicate="none" mode="text">
        <value>${prerequisite_modules} ${toolchain_module} ${mpi_module} ${compiler_module} ${cmake_module} ${must_prerequisite_modules}</value>
        <selection> gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}</selection>
      </parameter>
      <parameter name="use_modules" type="string" separator="," duplicate="none" mode="text">
        <value>/home/rwth1269/modules</value>
      </parameter>
      <parameter name="load_modules" type="string" separator="," duplicate="none" mode="text">
        <value>module use /home/rwth1269/modules/; module purge; for path in ${use_modules}; do module use $path; done; for modulename in ${required_modules}; do module load $modulename; done</value>
        <selection>module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done</selection>
      </parameter>
      <parameter name="__toolchain_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${toolchain_module}&quot;.lower()</value>
        <selection>gompi/2024a</selection>
      </parameter>
      <parameter name="__compiler_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${compiler_module}&quot;.lower()</value>
        <selection>llvm/19</selection>
      </parameter>
      <parameter name="__mpi_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${mpi_module}&quot;.lower()</value>
        <selection>${mpi_name}/${mpi_version}</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="export_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{
              (&quot;clang&quot;, &quot;intelmpi&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;intelmpi&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;clang&quot;, &quot;openmpi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;, &quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;clang&quot;, &quot;intel&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;intel&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;clang&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;],
              (&quot;Classic-Flang&quot;, &quot;mpich&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;openmpi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;OMPI_FC=flang&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;,&quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;Classic-Flang&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;OMPI_FC=flang&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;,&quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;LLVM&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;CC=clang&quot;, &quot;CXX=clang++&quot;, &quot;PMIX_MCA_gds=hash&quot;, &quot;OMPI_MCA_memory=^patcher&quot;],
          }</value>
      </parameter>
      <parameter name="compiler_mpi_export" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join($export_dict.get((&quot;${compiler_name}&quot;,&quot;${mpi_name}&quot;), []))</value>
        <selection/>
      </parameter>
      <parameter name="compiler_toolchain_export" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join($export_dict.get((&quot;${compiler_name}&quot;,&quot;${toolchain_name}&quot;), []))</value>
        <selection>OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher</selection>
      </parameter>
      <parameter name="required_exports" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${compiler_mpi_export} ${compiler_toolchain_export} ${openmp_export} ${parcoach_export}</value>
        <selection> OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}</selection>
      </parameter>
      <parameter name="export" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>for item in ${required_exports}; do export &quot;$item&quot;; done</value>
        <selection>for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done</selection>
      </parameter>
      <parameter name="toolchain_name" type="string" separator="," duplicate="none" mode="text">
        <value>gompi</value>
      </parameter>
      <parameter name="toolchain_version" type="string" separator="," duplicate="none" mode="text">
        <value>2024a</value>
      </parameter>
      <parameter name="compiler_name" type="string" separator="," duplicate="none" mode="text">
        <value>LLVM</value>
      </parameter>
      <parameter name="compiler_version" type="string" separator="," duplicate="none" mode="text">
        <value>19</value>
      </parameter>
      <parameter name="CMAKE_BUILD_TYPE" type="string" separator="," duplicate="none" mode="text">
        <value>RelWithDebInfo</value>
      </parameter>
      <parameter name="MPI_C_COMPILER" type="string" separator="," duplicate="none" mode="text">
        <value>mpicc</value>
      </parameter>
      <parameter name="MPI_CXX_COMPILER" type="string" separator="," duplicate="none" mode="text">
        <value>mpicxx</value>
      </parameter>
      <parameter name="ENABLE_TSAN" type="string" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="ENABLE_TYPEART" type="string" separator="," duplicate="none" mode="text">
        <value>OFF</value>
      </parameter>
      <parameter name="ENABLE_TESTS" type="string" separator="," duplicate="none" mode="text">
        <value>ON</value>
      </parameter>
      <parameter name="USE_BACKWARD" type="string" separator="," duplicate="none" mode="text">
        <value>ON</value>
      </parameter>
      <parameter name="MUST_build_args" type="string" separator="," duplicate="none" mode="text">
        <value>-DMPI_C_COMPILER=${MPI_C_COMPILER} \
      -DMPI_CXX_COMPILER=${MPI_CXX_COMPILER} \
      -DCMAKE_Fortran_COMPILER=${MPI_Fortran_COMPILER} \
      -DCMAKE_INSTALL_PREFIX=&quot;${must_install_folder}&quot; \
      -DENABLE_FORTRAN=${ENABLE_FORTRAN} \
      -DENABLE_TSAN=${ENABLE_TSAN} \
      -DENABLE_TYPEART=${ENABLE_TYPEART} \
      -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} \
      -DENABLE_TESTS=${ENABLE_TESTS} \
      -DGTI_DEBUG=${GTI_DEBUG} \
      -DUSE_BACKWARD=${USE_BACKWARD}</value>
        <selection>-DMPI_C_COMPILER=mpicc \
      -DMPI_CXX_COMPILER=mpicxx \
      -DCMAKE_Fortran_COMPILER=${MPI_Fortran_COMPILER} \
      -DCMAKE_INSTALL_PREFIX=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install&quot; \
      -DENABLE_FORTRAN=${ENABLE_FORTRAN} \
      -DENABLE_TSAN=1 \
      -DENABLE_TYPEART=OFF \
      -DCMAKE_BUILD_TYPE=RelWithDebInfo \
      -DENABLE_TESTS=ON \
      -DGTI_DEBUG=${GTI_DEBUG} \
      -DUSE_BACKWARD=ON</selection>
      </parameter>
      <parameter name="must_git_clone_ssh" type="string" separator="," duplicate="none" mode="text">
        <value>git@git-ce.rwth-aachen.de:hpc-research/correctness/MUST.git</value>
      </parameter>
      <parameter name="must_git_branch" type="string" separator="," duplicate="none" mode="text">
        <value>rmasanitizer</value>
      </parameter>
      <parameter name="__must_commit" type="string" separator="," duplicate="none" mode="shell">
        <value>if [[ $(echo &quot;${must_commit}&quot; | tr '[:upper:]' '[:lower:]') != &quot;head&quot; ]]; then echo ${must_commit}| awk '{printf $1}'; else git ls-remote ${must_git_clone_ssh} ${must_git_branch} | awk '{printf $1}'; fi</value>
        <selection>e3310e89b365042624bfcb99f3891569796af9c4</selection>
      </parameter>
    </parameterset>
    <parents>0</parents>
    <iteration_siblings>1</iteration_siblings>
    <environment/>
  </workpackage>
  <workpackage id="2">
    <step iteration="0" cycle="0">copy_source</step>
    <parameterset>
      <parameter name="path_to_source" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/LULESH/</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH/</selection>
      </parameter>
      <parameter name="ERROR_path_to_source_Empty" type="string" separator="," duplicate="none" mode="python">
        <value>exit(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name}\033[0m:\n'+
        '        path_to_source needs to be non-empty\n'+
        '        make sure to set the path in the parameterset &quot;source&quot; in ${jube_benchmark_home}.xml\n'+
        '        i.e. \n'+
        '        &lt;parameterset name=&quot;source&quot;  init_with=&quot;defaults.xml&quot;&gt;\n'+
        '          \033[93m&lt;parameter name=&quot;path_to_source&quot; type=&quot;string&quot;&gt; \033[1m&lt;PATH TO SOURCE&gt;\033[0m\033[93m &lt;/parameter&gt; &lt;--------------\033[0m\n'+
        '        &lt;/parameterset&gt;'
        ) if '${path_to_source}'=='' else 'OK'</value>
        <selection>OK</selection>
      </parameter>
    </parameterset>
    <parents>1</parents>
    <iteration_siblings>2</iteration_siblings>
    <environment/>
  </workpackage>
  <workpackage id="3">
    <step iteration="0" cycle="0">compile_cover</step>
    <parameterset>
      <parameter name="force_compilation" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="executable_full_name" type="string" separator="," duplicate="none" update_mode="use" mode="text">
        <value>${executable_name}${executable_extension}</value>
        <selection>lulesh2.00</selection>
      </parameter>
      <parameter name="compile_preparation" type="string" separator="," duplicate="none" mode="text">
        <value>cd MPIRMA/${kernel_folder}</value>
      </parameter>
      <parameter name="compile_flags" type="string" separator=";" duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;parcoach&quot;: &quot;-g -Wl,-rpath=${parcoach_install_folder}/lib64 ${parcoach_install_folder}/lib64/libParcoachCollDynamic_MPI_C.so ${parcoach_install_folder}/lib64/libParcoachRMADynamic_MPI_C.so&quot;,
         &quot;tsan&quot;: &quot;${must_stats_compile_flags} -g&quot;,
         &quot;tsan-opt&quot;: &quot;${must_stats_compile_flags} ${must_isl_compile_flags} -g --optimizations ${must_compile_opt}&quot;,
         &quot;tsan-cover&quot;: &quot;${must_stats_compile_flags} -g --tsan-json ${jube_wp_abspath}/compile_cover/contract_messages.json&quot;,
         &quot;isl&quot;: &quot;${must_stats_compile_flags} ${must_isl_compile_flags}&quot;}.get(&quot;${compile_mode}&quot;, 0)</value>
        <selection>0</selection>
      </parameter>
      <parameter name="tsan_opt_extension" type="string" separator="," duplicate="none" mode="text">
        <value>.tsan-opt.${__tsan_opt_hash}</value>
      </parameter>
      <parameter name="executable_extension" type="string" separator="," duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;parcoach&quot;: &quot;.pcoach&quot;,
         &quot;tsan&quot;: &quot;.tsan&quot;,
         &quot;tsan-opt&quot;: &quot;${tsan_opt_extension}&quot;,
         &quot;tsan-cover&quot;: &quot;.tsan-cover&quot;,
         &quot;isl&quot;: &quot;.isl&quot;}.get(&quot;${compile_mode}&quot;, 0)</value>
        <selection>0</selection>
      </parameter>
      <parameter name="compile_target" type="string" separator="," duplicate="none" mode="text">
        <value>$executable_name</value>
        <selection>lulesh2.0</selection>
      </parameter>
      <parameter name="benchmark_build_dir" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${jube_benchmark_home}/executables/${__toolchain_module}/${__compiler_module}/${__mpi_module}/&quot; + (&quot;${RMA_target}&quot; if &quot;${RMA_target}&quot;.split() else &quot;Default&quot;)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/executables/gompi/2024a/llvm/19/${mpi_name}/${mpi_version}/${RMA_target}</selection>
      </parameter>
      <parameter name="do_compile" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_compilation} || [ ! -f &quot;${benchmark_build_dir}/${executable_full_name}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="compile_common_env_vars" type="string" separator="!NONE!" duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;:     &quot;MPICC='mpicc ${compile_flags}' MPICXX='mpicxx ${compile_flags}' MPIFC='mpifc ${compile_flags}'&quot;,
         &quot;parcoach&quot;: &quot;MPICC='${PARCOACHCC} --wrap-target mpicc ${compile_flags}' MPICXX='${PARCOACHCXX} --wrap-target mpicxx ${compile_flags}'&quot;,
         &quot;tsan&quot;:     &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;,
         &quot;tsan-opt&quot;: &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;,
         &quot;tsan-cover&quot;: &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;,
         &quot;isl&quot;:      &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;}.get(&quot;${compile_mode}&quot;, 'invalid-compile-mode')</value>
        <selection>invalid-compile-mode</selection>
      </parameter>
      <parameter name="compile_env_vars" type="string" separator="!NONE!" duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;CXX='${MUSTCXX}' CFLAGS='${compile_flags}' CXXFLAGS='${compile_flags}'&quot;,
         &quot;tsan-opt&quot;: &quot;CXX='${MUSTCXX}' CFLAGS='${compile_flags}' CXXFLAGS='${compile_flags}'&quot;,
         &quot;tsan-cover&quot;: &quot;CXX='${MUSTCXX}' CFLAGS='${compile_flags}' CXXFLAGS='${compile_flags}'&quot;,
         }.get(&quot;${compile_mode}&quot;, 0)</value>
        <selection>0</selection>
      </parameter>
      <parameter name="compile_export" type="string" separator="!NONE!" duplicate="none" update_mode="use" mode="text">
        <value>for item in ${compile_common_env_vars} ${compile_env_vars}; do export &quot;$item&quot;; done</value>
        <selection>for item in invalid-compile-mode 0; do export &quot;$item&quot;; done</selection>
      </parameter>
      <parameter name="time_output_file" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>${jube_wp_abspath}/time.out</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out</selection>
      </parameter>
      <parameter name="time_measure_command" type="string" separator="," duplicate="none" mode="text">
        <value>/usr/bin/time -p -o ${time_output_file}</value>
        <selection>/usr/bin/time -p -o /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out</selection>
      </parameter>
      <parameter name="executable_name" type="string" separator="," duplicate="none" mode="text">
        <value>lulesh2.0</value>
      </parameter>
      <parameter name="modulenames_defaults" type="string" separator=";" duplicate="none" mode="text">
        <value>{
            &quot;gcc&quot;: &quot;gcc&quot;,
            &quot;clang&quot;: &quot;clang&quot;,
            &quot;intelmpi&quot;: &quot;intelmpi&quot;,
            &quot;cmake&quot;: &quot;cmake&quot;
        }</value>
      </parameter>
      <parameter name="modulenames_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{
            &quot;gcc&quot;: &quot;GCC&quot;,
            &quot;clang&quot;: &quot;Clang&quot;,
            &quot;Classic-Flang&quot;: &quot;Classic-Flang&quot;,
            &quot;intel&quot;: &quot;intel&quot;,
            &quot;intelmpi&quot;: &quot;iimpi&quot;,
            &quot;gompi&quot;: &quot;gompi&quot;,
            &quot;openmpi&quot; : &quot;openmpi&quot;,
            &quot;mpich&quot; : &quot;mpich&quot;,
            &quot;cmake&quot; : &quot;CMake&quot;
        }</value>
      </parameter>
      <parameter name="modulenames" type="string" separator=";" duplicate="none" mode="python">
        <value>{key:value for (key, value) in list(${modulenames_defaults}.items()) + list(${modulenames_updated}.items())}</value>
        <selection>{'gcc': 'GCC', 'clang': 'Clang', 'intelmpi': 'iimpi', 'cmake': 'CMake', 'Classic-Flang': 'Classic-Flang', 'intel': 'intel', 'gompi': 'gompi', 'openmpi': 'openmpi', 'mpich': 'mpich'}</selection>
      </parameter>
      <parameter name="modules" type="string" separator=";" duplicate="none" mode="python">
        <value>{
              &quot;gcc&quot;:                &quot;{0[gcc]}/11.3.0&quot;.format(${modulenames}),
              &quot;gcc/8.3.0&quot;:          &quot;{0[gcc]}/8.3.0&quot;.format(${modulenames}),
              &quot;gcc/9.3.0&quot;:          &quot;{0[gcc]}/9.3.0&quot;.format(${modulenames}),
              &quot;gcc/9.4.0&quot;:          &quot;{0[gcc]}/9.4.0&quot;.format(${modulenames}),
              &quot;gcc/10.2.0&quot;:         &quot;{0[gcc]}/10.2.0&quot;.format(${modulenames}),
              &quot;gcc/10.3.0&quot;:         &quot;{0[gcc]}/10.3.0&quot;.format(${modulenames}),
              &quot;gcc/11.2.0&quot;:         &quot;{0[gcc]}/11.2.0&quot;.format(${modulenames}),
              &quot;gcc/11.3.0&quot;:         &quot;{0[gcc]}/11.3.0&quot;.format(${modulenames}),
              &quot;clang&quot;:              &quot;{0[clang]}/13.0.1&quot;.format(${modulenames}),
              &quot;clang/13.0.1&quot;:       &quot;{0[clang]}/13.0.1&quot;.format(${modulenames}),
              &quot;clang/15.0.5&quot;:       &quot;{0[clang]}/15.0.5&quot;.format(${modulenames}),
              &quot;clang/16.0.6&quot;:       &quot;{0[clang]}/16.0.6&quot;.format(${modulenames}),
              &quot;Classic-Flang&quot;:      &quot;{0[Classic-Flang]}/16.0.4-c23&quot;.format(${modulenames}),
              &quot;Classic-Flang/16.0.4-c23&quot;:  &quot;{0[Classic-Flang]}/16.0.4-c23&quot;.format(${modulenames}),
              &quot;Classic-Flang/16.0.4-c23-impi&quot;:  &quot;{0[Classic-Flang]}/16.0.4-c23-impi&quot;.format(${modulenames}),
              &quot;intel&quot;       :       &quot;{0[intel]}/2022a&quot;.format(${modulenames}),
              &quot;intel/2019b&quot; :       &quot;{0[intel]}/2019b&quot;.format(${modulenames}),
              &quot;intel/2020a&quot; :       &quot;{0[intel]}/2020a&quot;.format(${modulenames}),
              &quot;intel/2020b&quot; :       &quot;{0[intel]}/2020b&quot;.format(${modulenames}),
              &quot;intel/2021a&quot; :       &quot;{0[intel]}/2021a&quot;.format(${modulenames}),
              &quot;intel/2021b&quot; :       &quot;{0[intel]}/2021b&quot;.format(${modulenames}),
              &quot;intel/2022a&quot; :       &quot;{0[intel]}/2022a&quot;.format(${modulenames}),
              &quot;intel/2022b&quot; :       &quot;{0[intel]}/2022b&quot;.format(${modulenames}),
              &quot;intel/2023a&quot; :       &quot;{0[intel]}/2023a&quot;.format(${modulenames}),
              &quot;gompi/2020a&quot; :       &quot;{0[gompi]}/2020a&quot;.format(${modulenames}),
              &quot;gompi/2020b&quot; :       &quot;{0[gompi]}/2020b&quot;.format(${modulenames}),
              &quot;gompi/2021a&quot; :       &quot;{0[gompi]}/2021a&quot;.format(${modulenames}),
              &quot;gompi/2021b&quot; :       &quot;{0[gompi]}/2021b&quot;.format(${modulenames}),
              &quot;gompi/2022a&quot; :       &quot;{0[gompi]}/2022a&quot;.format(${modulenames}),
              &quot;gompi/2022b&quot; :       &quot;{0[gompi]}/2022b&quot;.format(${modulenames}),
              &quot;gompi/2023a&quot; :       &quot;{0[gompi]}/2023a&quot;.format(${modulenames}),
              &quot;gompi/2024a&quot; :       &quot;{0[gompi]}/2024a&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2022a&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2022b&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2023a&quot;.format(${modulenames}),
              &quot;openmpi&quot;:            &quot;{0[openmpi]}/4.1.4&quot;.format(${modulenames}),
              &quot;openmpi/4.0.3&quot;:      &quot;{0[openmpi]}/4.0.3&quot;.format(${modulenames}),
              &quot;openmpi/4.0.5&quot;:      &quot;{0[openmpi]}/4.0.5&quot;.format(${modulenames}),
              &quot;openmpi/4.1.1&quot;:      &quot;{0[openmpi]}/4.1.1&quot;.format(${modulenames}),
              &quot;openmpi/4.1.4&quot;:      &quot;{0[openmpi]}/4.1.4&quot;.format(${modulenames}),
              &quot;openmpi/4.1.5&quot;:      &quot;{0[openmpi]}/4.1.5&quot;.format(${modulenames}),
              &quot;openmpi/4.1.6&quot;:      &quot;{0[openmpi]}/4.1.6&quot;.format(${modulenames}),
              &quot;openmpi/4.1.6-ucx16&quot;:      &quot;{0[openmpi]}/4.1.6-ucx16&quot;.format(${modulenames}),
              &quot;mpich&quot;:              &quot;{0[mpich]}/4.1.2&quot;.format(${modulenames}),
              &quot;mpich/4.1.2&quot;:        &quot;{0[mpich]}/4.1.2&quot;.format(${modulenames}),
              &quot;cmake&quot;:               &quot;{0[cmake]}/3.23.1&quot;.format(${modulenames}),
              &quot;cmake/3.21.1&quot;:        &quot;{0[cmake]}/3.21.1&quot;.format(${modulenames}),
              &quot;cmake/3.22.1&quot;:        &quot;{0[cmake]}/3.22.1&quot;.format(${modulenames}),
              &quot;cmake/3.23.1&quot;:        &quot;{0[cmake]}/3.23.1&quot;.format(${modulenames}),
              &quot;cmake/3.24.3&quot;:        &quot;{0[cmake]}/3.24.3&quot;.format(${modulenames}),
              &quot;cmake/3.26.3&quot;:        &quot;{0[cmake]}/3.26.3&quot;.format(${modulenames}),
              &quot;cmake/3.29.3&quot;:        &quot;{0[cmake]}/3.29.3&quot;.format(${modulenames})    
          }</value>
        <selection>{'gcc': 'GCC/11.3.0', 'gcc/8.3.0': 'GCC/8.3.0', 'gcc/9.3.0': 'GCC/9.3.0', 'gcc/9.4.0': 'GCC/9.4.0', 'gcc/10.2.0': 'GCC/10.2.0', 'gcc/10.3.0': 'GCC/10.3.0', 'gcc/11.2.0': 'GCC/11.2.0', 'gcc/11.3.0': 'GCC/11.3.0', 'clang': 'Clang/13.0.1', 'clang/13.0.1': 'Clang/13.0.1', 'clang/15.0.5': 'Clang/15.0.5', 'clang/16.0.6': 'Clang/16.0.6', 'Classic-Flang': 'Classic-Flang/16.0.4-c23', 'Classic-Flang/16.0.4-c23': 'Classic-Flang/16.0.4-c23', 'Classic-Flang/16.0.4-c23-impi': 'Classic-Flang/16.0.4-c23-impi', 'intel': 'intel/2022a', 'intel/2019b': 'intel/2019b', 'intel/2020a': 'intel/2020a', 'intel/2020b': 'intel/2020b', 'intel/2021a': 'intel/2021a', 'intel/2021b': 'intel/2021b', 'intel/2022a': 'intel/2022a', 'intel/2022b': 'intel/2022b', 'intel/2023a': 'intel/2023a', 'gompi/2020a': 'gompi/2020a', 'gompi/2020b': 'gompi/2020b', 'gompi/2021a': 'gompi/2021a', 'gompi/2021b': 'gompi/2021b', 'gompi/2022a': 'gompi/2022a', 'gompi/2022b': 'gompi/2022b', 'gompi/2023a': 'gompi/2023a', 'gompi/2024a': 'gompi/2024a', 'intelmpi': 'iimpi/2023a', 'openmpi': 'openmpi/4.1.4', 'openmpi/4.0.3': 'openmpi/4.0.3', 'openmpi/4.0.5': 'openmpi/4.0.5', 'openmpi/4.1.1': 'openmpi/4.1.1', 'openmpi/4.1.4': 'openmpi/4.1.4', 'openmpi/4.1.5': 'openmpi/4.1.5', 'openmpi/4.1.6': 'openmpi/4.1.6', 'openmpi/4.1.6-ucx16': 'openmpi/4.1.6-ucx16', 'mpich': 'mpich/4.1.2', 'mpich/4.1.2': 'mpich/4.1.2', 'cmake': 'CMake/3.23.1', 'cmake/3.21.1': 'CMake/3.21.1', 'cmake/3.22.1': 'CMake/3.22.1', 'cmake/3.23.1': 'CMake/3.23.1', 'cmake/3.24.3': 'CMake/3.24.3', 'cmake/3.26.3': 'CMake/3.26.3', 'cmake/3.29.3': 'CMake/3.29.3'}</selection>
      </parameter>
      <parameter name="prerequisite_modules_dict" type="string" separator=";" duplicate="none" mode="python">
        <value>{
            &quot;clang/13.0.1&quot;:       [&quot;GCCcore/.11.3.0&quot;, &quot;GCC/11.3.0&quot;],
            &quot;clang/15.0.5&quot;:       [&quot;GCCcore/.11.3.0&quot;, &quot;GCC/11.3.0&quot;],
            &quot;clang/16.0.6&quot;:       [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;Classic-Flang/16.0.4-c23&quot;:  [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;Classic-Flang/16.0.4-c23-impi&quot;:  [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;intelmpi/2021.6.0&quot;:  [&quot;intel-compilers/2022.1.0&quot;],
            &quot;openmpi/4.0.3&quot;:      [&quot;GCC/9.3.0&quot;],
            &quot;openmpi/4.0.5&quot;:      [&quot;GCC/10.2.0&quot;],
            &quot;openmpi/4.1.1&quot;:      [&quot;GCC/11.2.0&quot;],
            &quot;openmpi/4.1.4&quot;:      [&quot;GCC/11.3.0&quot;],
            &quot;openmpi/4.1.5&quot;:      [&quot;GCC/12.3.0&quot;],
            &quot;openmpi/4.1.6&quot;:      [&quot;GCC/12.3.0&quot;],
            &quot;openmpi/4.1.6-ucx16&quot;:      [&quot;GCC/12.3.0&quot;],
        }</value>
        <selection>{'clang/13.0.1': ['GCCcore/.11.3.0', 'GCC/11.3.0'], 'clang/15.0.5': ['GCCcore/.11.3.0', 'GCC/11.3.0'], 'clang/16.0.6': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'Classic-Flang/16.0.4-c23': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'Classic-Flang/16.0.4-c23-impi': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'intelmpi/2021.6.0': ['intel-compilers/2022.1.0'], 'openmpi/4.0.3': ['GCC/9.3.0'], 'openmpi/4.0.5': ['GCC/10.2.0'], 'openmpi/4.1.1': ['GCC/11.2.0'], 'openmpi/4.1.4': ['GCC/11.3.0'], 'openmpi/4.1.5': ['GCC/12.3.0'], 'openmpi/4.1.6': ['GCC/12.3.0'], 'openmpi/4.1.6-ucx16': ['GCC/12.3.0']}</selection>
      </parameter>
      <parameter name="cmake_version" type="string" separator="," duplicate="none" mode="text">
        <value>3.29.3</value>
      </parameter>
      <parameter name="cmake_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;cmake/${cmake_version}&quot;) if $modules.get(&quot;cmake/${cmake_version}&quot;) else $modules.get(&quot;cmake&quot;, &quot;cmake/${cmake_version}&quot;)</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="prerequisite_toolchain_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__toolchain_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_compiler_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__compiler_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_mpi_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__mpi_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_modules" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="toolchain_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${toolchain_name}/${toolchain_version}&quot;, $modules.get(&quot;${toolchain_name}&quot;, &quot;${toolchain_name}&quot; + (&quot;/${toolchain_version}&quot; if &quot;${toolchain_version}&quot; else &quot;&quot;)))</value>
        <selection>gompi/2024a</selection>
      </parameter>
      <parameter name="compiler_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${compiler_name}/${compiler_version}&quot;, $modules.get(&quot;${compiler_name}&quot;, &quot;${compiler_name}&quot; + (&quot;/${compiler_version}&quot; if &quot;${compiler_version}&quot; else &quot;&quot;)))</value>
        <selection>LLVM/19</selection>
      </parameter>
      <parameter name="mpi_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${mpi_name}/${mpi_version}&quot;, $modules.get(&quot;${mpi_name}&quot;, &quot;${mpi_name}&quot; + (&quot;/${mpi_version}&quot; if &quot;${mpi_version}&quot; else &quot;&quot;)))</value>
        <selection>${mpi_name}/${mpi_version}</selection>
      </parameter>
      <parameter name="required_modules" type="string" separator="," duplicate="none" mode="text">
        <value>${prerequisite_modules} ${toolchain_module} ${mpi_module} ${compiler_module} ${cmake_module} ${must_prerequisite_modules}</value>
        <selection> gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}</selection>
      </parameter>
      <parameter name="use_modules" type="string" separator="," duplicate="none" mode="text">
        <value>/home/rwth1269/modules</value>
      </parameter>
      <parameter name="load_modules" type="string" separator="," duplicate="none" mode="text">
        <value>module use /home/rwth1269/modules/; module purge; for path in ${use_modules}; do module use $path; done; for modulename in ${required_modules}; do module load $modulename; done</value>
        <selection>module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done</selection>
      </parameter>
      <parameter name="__toolchain_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${toolchain_module}&quot;.lower()</value>
        <selection>gompi/2024a</selection>
      </parameter>
      <parameter name="__compiler_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${compiler_module}&quot;.lower()</value>
        <selection>llvm/19</selection>
      </parameter>
      <parameter name="__mpi_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${mpi_module}&quot;.lower()</value>
        <selection>${mpi_name}/${mpi_version}</selection>
      </parameter>
      <parameter name="export_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{
              (&quot;clang&quot;, &quot;intelmpi&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;intelmpi&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;clang&quot;, &quot;openmpi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;, &quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;clang&quot;, &quot;intel&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;intel&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;clang&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;],
              (&quot;Classic-Flang&quot;, &quot;mpich&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;openmpi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;OMPI_FC=flang&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;,&quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;Classic-Flang&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;OMPI_FC=flang&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;,&quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;LLVM&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;CC=clang&quot;, &quot;CXX=clang++&quot;, &quot;PMIX_MCA_gds=hash&quot;, &quot;OMPI_MCA_memory=^patcher&quot;],
          }</value>
      </parameter>
      <parameter name="compiler_mpi_export" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join($export_dict.get((&quot;${compiler_name}&quot;,&quot;${mpi_name}&quot;), []))</value>
        <selection/>
      </parameter>
      <parameter name="compiler_toolchain_export" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join($export_dict.get((&quot;${compiler_name}&quot;,&quot;${toolchain_name}&quot;), []))</value>
        <selection>OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher</selection>
      </parameter>
      <parameter name="required_exports" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${compiler_mpi_export} ${compiler_toolchain_export} ${openmp_export} ${parcoach_export}</value>
        <selection> OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}</selection>
      </parameter>
      <parameter name="export" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>for item in ${required_exports}; do export &quot;$item&quot;; done</value>
        <selection>for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done</selection>
      </parameter>
      <parameter name="toolchain_name" type="string" separator="," duplicate="none" mode="text">
        <value>gompi</value>
      </parameter>
      <parameter name="toolchain_version" type="string" separator="," duplicate="none" mode="text">
        <value>2024a</value>
      </parameter>
      <parameter name="compiler_name" type="string" separator="," duplicate="none" mode="text">
        <value>LLVM</value>
      </parameter>
      <parameter name="compiler_version" type="string" separator="," duplicate="none" mode="text">
        <value>19</value>
      </parameter>
      <parameter name="cover_commit" type="string" separator="," duplicate="none" mode="text">
        <value>0f7a319af74b571095d308ac9f87e5acfbc56ef1</value>
      </parameter>
      <parameter name="build_cover" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_cover_build} || [ ! -f &quot;${cover_cc_bin}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="cover_prerequisite_modules" type="string" separator=";" duplicate="none" mode="text">
        <value>Java</value>
      </parameter>
      <parameter name="cover_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/CoVer/${__cover_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286</selection>
      </parameter>
      <parameter name="cover_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${cover_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286/build</selection>
      </parameter>
      <parameter name="cover_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${cover_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286/install</selection>
      </parameter>
      <parameter name="cover_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../CoVeR</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../CoVeR</selection>
      </parameter>
      <parameter name="coverbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${cover_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286/install/bin</selection>
      </parameter>
      <parameter name="cover_cc_bin" type="string" separator="," duplicate="none" mode="text">
        <value>${coverbin_path}/clangContracts</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286/install/bin/clangContracts</selection>
      </parameter>
      <parameter name="cover_cxx_bin" type="string" separator="," duplicate="none" mode="text">
        <value>${coverbin_path}/clangContracts++</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286/install/bin/clangContracts++</selection>
      </parameter>
      <parameter name="COVER_CC" type="string" separator="," duplicate="none" mode="text">
        <value>${cover_cc_bin} --allow-multireports</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286/install/bin/clangContracts --allow-multireports</selection>
      </parameter>
      <parameter name="COVER_CXX" type="string" separator="," duplicate="none" mode="text">
        <value>${cover_cxx_bin} --allow-multireports</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/CoVer/2da69b5d999c53f4a7c73596824a3286/install/bin/clangContracts++ --allow-multireports</selection>
      </parameter>
      <parameter name="cover_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${cover_cc_bin}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_cover_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__cover_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${cover_commit} ${cover_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>2da69b5d999c53f4a7c73596824a3286</selection>
      </parameter>
    </parameterset>
    <parents>2</parents>
    <iteration_siblings>3</iteration_siblings>
    <environment>
      <env name="__LMOD_STACK_OBJCXX">'Zysr'</env>
      <env name="EBVERSIONGMP">'6.3.0'</env>
      <env name="_ModuleTable016_">'b2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL1VDQy8xLjMuMC5sdWEiLApmdWxsTmFtZSA9ICJVQ0MvMS4zLjAiLApsb2FkT3JkZXIgPSAxNSwKcHJvcFQgPSB7fSwKcmVmX2NvdW50ID0gMSwKc3RhY2tEZXB0aCA9IDIsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJVQ0MvMS4zLjAiLAp3ViA9ICIwMDAwMDAwMDEuMDAwMDAwMDAzLip6ZmluYWwiLAp9LApVQ1ggPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUv'</env>
      <env name="_ModuleTable022_">'UEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMFwiKSIsICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9ob21lL3J3dGgxMjY5L21vZHVsZXNcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db3JlXCIpIiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2hvbWUvc3M1NDAyOTQvLm1vZHVsZXNcIikiLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC9tb2R1bGVzXCIpIiwKfSwKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4'</env>
      <env name="MPI_BINDIR">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/bin'</env>
      <env name="EBVERSIONOPENMPI">'5.0.3'</env>
      <env name="OBJCXX">'g++'</env>
      <env name="FLAGS_OFFLOAD_OPENMP">'-fopenmp'</env>
      <env name="EBROOTPMIX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0'</env>
      <env name="EBROOTGMP">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0'</env>
      <env name="_ModuleTable027_">'b2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2xpYnBjaWFjY2Vzcy8wLjE4LjEubHVhIiwKZnVsbE5hbWUgPSAibGlicGNpYWNjZXNzLzAuMTguMSIsCmxvYWRPcmRlciA9IDgsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAzLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAibGlicGNpYWNjZXNzLzAuMTguMSIsCndWID0gIjAwMDAwMDAwMC4wMDAwMDAwMTguMDAwMDAwMDAxLip6ZmluYWwiLAp9LApsaWJyZWFkbGluZSA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBp'</env>
      <env name="__LMOD_STACK_MPICXX">'bXBpY3h4'</env>
      <env name="FLAGS_RPATH">'-Wl,-rpath=/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/lib64'</env>
      <env name="FLAGS_OFFLOAD_OPENACC">'-fopenacc'</env>
      <env name="_ModuleTable032_">'bC9Db21waWxlci9MTFZNLzE5LjEuNyIKLCAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvTVBJL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuMyIKLCAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDLzEzLjMuMCIKLCAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAiCiwgIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkv'</env>
      <env name="PKG_CONFIG_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib/pkgconfig'</env>
      <env name="__LMOD_STACK_OBJC">'Z2Nj'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="__LMOD_STACK_FLAGS_OFFLOAD_OPENACC">'LWZvcGVuYWNj'</env>
      <env name="_ModuleTable011_">'cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJPcGVuTVBJLzUuMC4zIiwKd1YgPSAiczAwMDAwMDA1LjAwMDAwMDAwMC4wMDAwMDAwMDMuKnpmaW5hbCIsCn0sCk9wZW5TU0wgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvcmUvT3BlblNTTC8zLmx1YSIsCmZ1bGxOYW1lID0gIk9wZW5TU0wvMyIsCmxvYWRPcmRlciA9IDEwLApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIk9wZW5TU0wvMyIsCndWID0gIjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKUE1JeCA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5y'</env>
      <env name="_ModuleTable007_">'MDAwMy4qemZpbmFsIiwKfSwKTExWTSA9IHsKYWN0aW9uQSA9IHsKInByZXBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0xMVk0vMTkuMS43XCIpIgosICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvTExWTS8xOS4xLjdcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9NUEkvR0NDLzEzLjMuMC9PcGVuTVBJLzUuMC4zXCIpIgos'</env>
      <env name="EBROOTPRRTE">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0'</env>
      <env name="_ModuleTable002_">'SFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0MvMTMuMy4wXCIpIgosICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjBcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db3JlXCIpIiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2hvbWUvcnd0aDEyNjkvbW9kdWxlc1wiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvaG9tZS9zczU0MDI5NC8ubW9kdWxlc1wiKSIsICJh'</env>
      <env name="MPICC">'mpicc'</env>
      <env name="__LMOD_REF_COUNT_MODULEPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/LLVM/19.1.7:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCC/13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core:1;/work/ss540294/.local/easybuild/modules/all/MPI/intel/2024.2.0/impi/2021.13.0:8;/work/ss540294/.local/easybuild/modules/all/Compiler/intel/2024.2.0:8;/work/ss540294/.local/easybuild/modules/all/Compiler/LLVM/19.1.7:2;/work/ss540294/.local/easybuild/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:3;/work/ss540294/.local/easybuild/modules/all/Compiler/GCC/13.3.0:3;/work/ss540294/.local/easybuild/modules/all/Compiler/GCCcore/13.3.0:11;/work/ss540294/.local/easybuild/modules/all/Core:11;/home/rwth1269/modules:5;/home/ss540294/.modules:6;/work/ss540294/modules:6'</env>
      <env name="EBEXTSLISTZ3">'z3-solver-4.13.0.0'</env>
      <env name="CPP">'cpp'</env>
      <env name="__LMOD_STACK_FLAGS_OPENMP">'LWZvcGVubXA='</env>
      <env name="OMPI_MCA_btl">'^ofi,openib,tcp'</env>
      <env name="_ModuleTable005_">'MDEzLjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKR0NDY29yZSA9IHsKYWN0aW9uQSA9IHsKInByZXBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wXCIpIiwKfSwKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29yZS9HQ0Njb3JlLzEzLjMuMC5sdWEiLApmdWxsTmFtZSA9ICJHQ0Njb3JlLzEzLjMuMCIsCmxvYWRPcmRlciA9IDEsCnByb3BUID0gewp0eXBlXyA9IHsKY29tcGlsZXIgPSAxLAp9LAp9'</env>
      <env name="_ModuleTable021_">'cmRlciA9IDI4LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMSwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImNVUkwvOC43LjEiLAp3ViA9ICIwMDAwMDAwMDguMDAwMDAwMDA3LjAwMDAwMDAwMS4qemZpbmFsIiwKfSwKZ29tcGkgPSB7CmFjdGlvbkEgPSB7CiJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvTVBJL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuM1wiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQy8xMy4zLjBcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxF'</env>
      <env name="_ModuleTable030_">'dGl2ZSIsCnVzZXJOYW1lID0gIm5jdXJzZXMvNi41IiwKd1YgPSAiMDAwMDAwMDA2LjAwMDAwMDAwNS4qemZpbmFsIiwKfSwKbnVtYWN0bCA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvbnVtYWN0bC8yLjAuMTgubHVhIiwKZnVsbE5hbWUgPSAibnVtYWN0bC8yLjAuMTgiLApsb2FkT3JkZXIgPSA1LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIm51bWFjdGwvMi4wLjE4IiwKd1YgPSAiMDAwMDAwMDAyLjAwMDAwMDAwMC4wMDAwMDAwMTguKnpmaW5hbCIsCn0sCnps'</env>
      <env name="__LMOD_REF_COUNT_ACLOCAL_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share/aclocal:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/aclocal:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/aclocal:1'</env>
      <env name="EBROOTOPENMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0'</env>
      <env name="EBDEVELPRRTE">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-PRRTE-3.0.5-easybuild-devel'</env>
      <env name="OMPI_MCA_btl_openib_ib_timeout">'24'</env>
      <env name="OMPI_MCA_btl_openib_allow_ib">'1'</env>
      <env name="EBVERSIONUCX">'1.16.0'</env>
      <env name="EBVERSIONZ3">'4.13.0'</env>
      <env name="EBROOTLIBPCIACCESS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0'</env>
      <env name="EBVERSIONUCC">'1.3.0'</env>
      <env name="MPICXX">'mpicxx'</env>
      <env name="EBROOTHWLOC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0'</env>
      <env name="MPIFC">'mpifort'</env>
      <env name="EBDEVELGOMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/gompi/2024a/easybuild/Core-gompi-2024a-easybuild-devel'</env>
      <env name="EBVERSIONNUMACTL">'2.0.18'</env>
      <env name="EBROOTLIBXML2">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0'</env>
      <env name="EBVERSIONLIBEVENT">'2.1.12'</env>
      <env name="MANPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share/man:/usr/local_host/man:/usr/local_rwth/man:/usr/man:/usr/share/man:/usr/local/man:/usr/local/share/man:/opt/slurm/current/share/man'</env>
      <env name="__LMOD_STACK_FLAGS_FAST_NO_FPOPT">'LU8zIC1tdHVuZT1uYXRpdmU='</env>
      <env name="__LMOD_STACK_FLAGS_ARCH64">'LW02NA=='</env>
      <env name="RWTH_HPC_FAMILY_MPI">'OpenMPI'</env>
      <env name="EBVERSIONPRRTE">'3.0.5'</env>
      <env name="CXX">'clang++'</env>
      <env name="FLAGS_OPENMP">'-fopenmp'</env>
      <env name="MPI_INCLUDE">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/include'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_STACK_FLAGS_AUTOPAR">'false'</env>
      <env name="_ModuleTable008_">'ICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDLzEzLjMuMFwiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wXCIpIgosICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29yZVwiKSIsICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9ob21lL3J3dGgxMjY5L21vZHVsZXNcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2hvbWUv'</env>
      <env name="EBDEVELLIBEVENT">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-libevent-2.1.12-easybuild-devel'</env>
      <env name="__LMOD_REF_COUNT_CMAKE_PREFIX_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0:1'</env>
      <env name="EBVERSIONHWLOC">'2.10.0'</env>
      <env name="_ModuleTable013_">'ZS8xMy4zLjAvUFJSVEUvMy4wLjUubHVhIiwKZnVsbE5hbWUgPSAiUFJSVEUvMy4wLjUiLApsb2FkT3JkZXIgPSAxNCwKcHJvcFQgPSB7fSwKcmVmX2NvdW50ID0gMSwKc3RhY2tEZXB0aCA9IDIsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJQUlJURS8zLjAuNSIsCndWID0gIjAwMDAwMDAwMy4wMDAwMDAwMDAuMDAwMDAwMDA1Lip6ZmluYWwiLAp9LApQeXRob24gPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL1B5dGhvbi8zLjEyLjMubHVhIiwKZnVsbE5hbWUgPSAiUHl0aG9uLzMuMTIuMyIsCmxvYWRPcmRlciA9'</env>
      <env name="__LMOD_STACK_FLAGS_PIC">'LWZQSUMgLXNoYXJlZA=='</env>
      <env name="EBDEVELOPENMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/easybuild/Compiler-GCC-13.3.0-OpenMPI-5.0.3-easybuild-devel'</env>
      <env name="__LMOD_REF_COUNT_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/sbin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/bin:1;/home/ss540294/.local/lcov-2.3.1/bin:2;/home/ss540294/software/stress/usr/bin:2;/home/ss540294/software/ccache/bin:2;/home/ss540294/.local/bin:2;/home/ss540294/software/mpiP/bin:2;/home/ss540294/software/git/bin:2;/home/ss540294/htop/bin:2;/home/ss540294/nvim-linux-x86_64/bin:2;/rwthfs/rz/cluster/home/ss540294/.vscode-server/cli/servers/Stable-cb0c47c0cfaad0757385834bd89d410c78a856c0/server/bin/remote-cli:1;/usr/local_host/bin:1;/usr/local_host/sbin:1;/usr/local_rwth/bin:1;/usr/local_rwth/sbin:1;/usr/bin:1;/usr/sbin:1;/bin:1;/sbin:1;/opt/singularity/bin:1;/usr/local/bin:1;/usr/local/sbin:1;/opt/slurm/current/sbin:1;/opt/slurm/current/bin:1;/home/ss540294/dotfiles/tools/diff-so-fancy:2;/home/ss540294/dotfiles/zsh/plugins/fzf/bin:1;/home/ss540294/.vscode-server/extensions/ms-python.debugpy-2025.10.0-linux-x64/bundled/scripts/noConfigScripts:1;/home/ss540294/.vscode-server/data/User/globalStorage/github.copilot-chat/debugCommand:1'</env>
      <env name="EBROOTZ3">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0'</env>
      <env name="_ModuleTable018_">'NCwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIlhaLzUuNC41IiwKd1YgPSAiMDAwMDAwMDA1LjAwMDAwMDAwNC4wMDAwMDAwMDUuKnpmaW5hbCIsCn0sClozID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9aMy80LjEzLjAubHVhIiwKZnVsbE5hbWUgPSAiWjMvNC4xMy4wIiwKbG9hZE9yZGVyID0gMjYsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAxLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiWjMvNC4xMy4wIiwKd1YgPSAiMDAwMDAwMDA0LjAwMDAwMDAxMy4qemZpbmFs'</env>
      <env name="_ModuleTable015_">'ICJTUUxpdGUvMy40NS4zIiwKd1YgPSAiMDAwMDAwMDAzLjAwMDAwMDA0NS4wMDAwMDAwMDMuKnpmaW5hbCIsCn0sClRjbCA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvVGNsLzguNi4xNC5sdWEiLApmdWxsTmFtZSA9ICJUY2wvOC42LjE0IiwKbG9hZE9yZGVyID0gMjEsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSA0LApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiVGNsLzguNi4xNCIsCndWID0gIjAwMDAwMDAwOC4wMDAwMDAwMDYuMDAwMDAwMDE0Lip6ZmluYWwiLAp9LApVQ0MgPSB7CmZuID0gIi9jdm1mcy9z'</env>
      <env name="_ModuleTable_Sz_">'34'</env>
      <env name="FLAGS_FAST_NO_FPOPT">'-O3 -mtune=native'</env>
      <env name="__LMOD_REF_COUNT_LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:1;/home/ss540294/bin/lib:2'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="_ModuleTable023_">'L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29yZS9nb21waS8yMDI0YS5sdWEiLApmdWxsTmFtZSA9ICJnb21waS8yMDI0YSIsCmxvYWRPcmRlciA9IDE3LApwcm9wVCA9IHsKdHlwZV8gPSB7CnRvb2xjaGFpbiA9IDEsCn0sCn0sCnN0YWNrRGVwdGggPSAwLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiZ29tcGkvMjAyNGEiLAp3ViA9ICJzMDAwMDIwMjQuKmEuKnpmaW5hbCIsCn0sCmh3bG9jID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9od2xvYy8yLjEwLjAubHVhIiwKZnVs'</env>
      <env name="__LMOD_REF_COUNT_PKG_CONFIG_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib/pkgconfig:1'</env>
      <env name="__LMOD_STACK_F77">'Z2ZvcnRyYW4gLWZuby1zaWduLXplcm8='</env>
      <env name="EBROOTGCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/3.3.0'</env>
      <env name="__LMOD_STACK_LASTCOMPILER">'R0NDY29yZQ=='</env>
      <env name="FLAGS_FAST">'-O3 -ffast-math -mtune=native'</env>
      <env name="__LMOD_REF_COUNT_CPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages/z3/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include/python3.12:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include/libxml2:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/include:1'</env>
      <env name="__LMOD_STACK_MPIF77">'bXBpZm9ydA=='</env>
      <env name="PMIX_MCA_psec">'^munge'</env>
      <env name="MPI_LIBDIR">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib'</env>
      <env name="EBROOTNUMACTL">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0'</env>
      <env name="_ModuleTable029_">'Mi4xMi43IiwKbG9hZE9yZGVyID0gNywKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9IDMsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJsaWJ4bWwyLzIuMTIuNyIsCndWID0gIjAwMDAwMDAwMi4wMDAwMDAwMTIuMDAwMDAwMDA3Lip6ZmluYWwiLAp9LApuY3Vyc2VzID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9uY3Vyc2VzLzYuNS5sdWEiLApmdWxsTmFtZSA9ICJuY3Vyc2VzLzYuNSIsCmxvYWRPcmRlciA9IDE4LApwcm9wVCA9IHt9LApyZWZfY291bnQgPSAxLApzdGFja0RlcHRoID0gMSwKc3RhdHVzID0gImFj'</env>
      <env name="OMPI_MCA_mtl">'^psm'</env>
      <env name="CMAKE_PREFIX_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0'</env>
      <env name="MPIF77">'mpifort'</env>
      <env name="_ModuleTable010_">'ewphY3Rpb25BID0gewoicHJlcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvTVBJL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuM1wiKSIsCn0sCmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuMy5sdWEiLApmdWxsTmFtZSA9ICJPcGVuTVBJLzUuMC4zIiwKbG9hZE9yZGVyID0gMTYsCnByb3BUID0gewp0eXBlXyA9IHsKbXBpID0gMSwKfSwKfSwKc3RhY2tEZXB0aCA9IDEsCnN0YXR1'</env>
      <env name="OMPI_MCA_hwloc_base_binding_policy">'none'</env>
      <env name="_ModuleTable024_">'bE5hbWUgPSAiaHdsb2MvMi4xMC4wIiwKbG9hZE9yZGVyID0gOSwKcHJvcFQgPSB7fSwKcmVmX2NvdW50ID0gMSwKc3RhY2tEZXB0aCA9IDIsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJod2xvYy8yLjEwLjAiLAp3ViA9ICIwMDAwMDAwMDIuMDAwMDAwMDEwLip6ZmluYWwiLAp9LApsaWJhcmNoaXZlID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9saWJhcmNoaXZlLzMuNy40Lmx1YSIsCmZ1bGxOYW1lID0gImxpYmFyY2hpdmUvMy43LjQiLApsb2FkT3JkZXIgPSAyOSwKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9'</env>
      <env name="EBVERSIONGCC">'13.3.0'</env>
      <env name="__LMOD_STACK_FLAGS_FREE">'LWZmcmVlLWZvcm0='</env>
      <env name="MPITEST">'/opt/MPI/bin/mpitest'</env>
      <env name="EBDEVELGCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCC/13.3.0/easybuild/Core-GCC-13.3.0-easybuild-devel'</env>
      <env name="EBROOTGOMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/gompi/2024a'</env>
      <env name="_ModuleTable003_">'cHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0L21vZHVsZXNcIikiLAp9LApmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9DTWFrZS8zLjI5LjMubHVhIiwKZnVsbE5hbWUgPSAiQ01ha2UvMy4yOS4zIiwKbG9hZE9yZGVyID0gMzAsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAwLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiQ01ha2UvMy4yOS4zIiwKd1YgPSAiczAwMDAwMDAzLjAwMDAwMDAyOS4wMDAwMDAwMDMuKnpmaW5hbCIsCn0sCkdDQyA9IHsKYWN0aW9uQSA9IHsKInByZXBlbmRfcGF0'</env>
      <env name="__LMOD_STACK_FC">'Z2ZvcnRyYW4='</env>
      <env name="__LMOD_REF_COUNT_XDG_DATA_DIRS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share:1;/usr/local/share:1;/usr/share:1'</env>
      <env name="__LMOD_STACK_CPP">'Y3Bw'</env>
      <env name="EBVERSIONLLVM">'19.1.7'</env>
      <env name="LASTCOMPILER">'GCCcore'</env>
      <env name="R_MPI_ROOT">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0'</env>
      <env name="PYTHONPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/python:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/easybuild/python'</env>
      <env name="OMPI_MCA_memory">'^patcher'</env>
      <env name="__LMOD_REF_COUNT_PYTHONPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/python:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/easybuild/python:1'</env>
      <env name="EBDEVELZ3">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-Z3-4.13.0-easybuild-devel'</env>
      <env name="F77">'gfortran -fno-sign-zero'</env>
      <env name="ACLOCAL_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share/aclocal:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/aclocal:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/aclocal'</env>
      <env name="EBVERSIONGOMPI">'2024a'</env>
      <env name="EBDEVELLIBPCIACCESS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-libpciaccess-0.18.1-easybuild-devel'</env>
      <env name="ASAN_SYMBOLIZER_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/bin/llvm-symbolizer'</env>
      <env name="LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:/home/ss540294/bin/lib'</env>
      <env name="__LMOD_STACK_FLAGS_FAST">'LU8zIC1mZmFzdC1tYXRoIC1tdHVuZT1uYXRpdmU='</env>
      <env name="LASTMPI">'OpenMPI'</env>
      <env name="EBDEVELUCX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-UCX-1.16.0-easybuild-devel'</env>
      <env name="EBDEVELUCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-UCC-1.3.0-easybuild-devel'</env>
      <env name="LOADEDMODULES">'GCCcore/13.3.0:zlib/1.3.1:binutils/2.42:GCC/13.3.0:numactl/2.0.18:XZ/5.4.5:libxml2/2.12.7:libpciaccess/0.18.1:hwloc/2.10.0:OpenSSL/3:libevent/2.1.12:UCX/1.16.0:PMIx/5.0.2:PRRTE/3.0.5:UCC/1.3.0:OpenMPI/5.0.3:gompi/2024a:ncurses/6.5:bzip2/1.0.8:libreadline/8.2:Tcl/8.6.14:SQLite/3.45.3:libffi/3.4.5:Python/3.12.3:GMP/6.3.0:Z3/4.13.0:LLVM/19.1.7:cURL/8.7.1:libarchive/3.7.4:CMake/3.29.3'</env>
      <env name="OMPI_CC">'clang'</env>
      <env name="SHLVL">'5'</env>
      <env name="_ModuleTable012_">'d3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvUE1JeC81LjAuMi5sdWEiLApmdWxsTmFtZSA9ICJQTUl4LzUuMC4yIiwKbG9hZE9yZGVyID0gMTMsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiUE1JeC81LjAuMiIsCndWID0gIjAwMDAwMDAwNS4wMDAwMDAwMDAuMDAwMDAwMDAyLip6ZmluYWwiLAp9LApQUlJURSA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29y'</env>
      <env name="OMPI_MCA_hwloc_base_report_bindings">'0'</env>
      <env name="_ModuleTable006_">'LApzdGFja0RlcHRoID0gMiwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIkdDQ2NvcmUvMTMuMy4wIiwKd1YgPSAiczAwMDAwMDEzLjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKR01QID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9HTVAvNi4zLjAubHVhIiwKZnVsbE5hbWUgPSAiR01QLzYuMy4wIiwKbG9hZE9yZGVyID0gMjUsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiR01QLzYuMy4wIiwKd1YgPSAiMDAwMDAwMDA2LjAwMDAw'</env>
      <env name="_ModuleTable026_">'d1YgPSAiMDAwMDAwMDAyLjAwMDAwMDAwMS4wMDAwMDAwMTIuKnpmaW5hbCIsCn0sCmxpYmZmaSA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvbGliZmZpLzMuNC41Lmx1YSIsCmZ1bGxOYW1lID0gImxpYmZmaS8zLjQuNSIsCmxvYWRPcmRlciA9IDIzLApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImxpYmZmaS8zLjQuNSIsCndWID0gIjAwMDAwMDAwMy4wMDAwMDAwMDQuMDAwMDAwMDA1Lip6ZmluYWwiLAp9LApsaWJwY2lhY2Nlc3MgPSB7CmZuID0gIi9jdm1mcy9z'</env>
      <env name="EBDEVELNUMACTL">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-numactl-2.0.18-easybuild-devel'</env>
      <env name="PMIX_MCA_gds">'hash'</env>
      <env name="_ModuleTable033_">'eDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvcmUiLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9NUEkvaW50ZWwvMjAyNC4yLjAvaW1waS8yMDIxLjEzLjAiCiwgIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvaW50ZWwvMjAyNC4yLjAiLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9MTFZNLzE5LjEuNyIKLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9NUEkvR0NDLzEzLjMuMC9PcGVuTVBJLzUuMC4zIiwgIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxl'</env>
      <env name="__LMOD_STACK_FLAGS_RPATH">'LVdsLC1ycGF0aD0vY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9zb2Z0d2FyZS9HQ0Njb3JlLzEzLjMuMC9saWI2NA=='</env>
      <env name="_ModuleTable017_">'MTMuMy4wL1VDWC8xLjE2LjAubHVhIiwKZnVsbE5hbWUgPSAiVUNYLzEuMTYuMCIsCmxvYWRPcmRlciA9IDEyLApwcm9wVCA9IHt9LApyZWZfY291bnQgPSAxLApzdGFja0RlcHRoID0gMiwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIlVDWC8xLjE2LjAiLAp3ViA9ICIwMDAwMDAwMDEuMDAwMDAwMDE2Lip6ZmluYWwiLAp9LApYWiA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvWFovNS40LjUubHVhIiwKZnVsbE5hbWUgPSAiWFovNS40LjUiLApsb2FkT3JkZXIgPSA2LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0g'</env>
      <env name="EBROOTUCX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0'</env>
      <env name="EBDEVELHWLOC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-hwloc-2.10.0-easybuild-devel'</env>
      <env name="_ModuleTable009_">'c3M1NDAyOTQvLm1vZHVsZXNcIikiLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC9tb2R1bGVzXCIpIiwKfSwKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvTExWTS8xOS4xLjcubHVhIiwKZnVsbE5hbWUgPSAiTExWTS8xOS4xLjciLApsb2FkT3JkZXIgPSAyNywKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9IDAsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJMTFZNLzE5LjEuNyIsCndWID0gIjAwMDAwMDAxOS4wMDAwMDAwMDEuMDAwMDAwMDA3Lip6ZmluYWwiLAp9LApPcGVuTVBJID0g'</env>
      <env name="EBROOTUCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0'</env>
      <env name="__LMOD_REF_COUNT_MANPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share/man:1;/usr/local_host/man:1;/usr/local_rwth/man:1;/usr/man:1;/usr/share/man:1;/usr/local/man:1;/usr/local/share/man:1;/opt/slurm/current/share/man:1'</env>
      <env name="EBDEVELGMP">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-GMP-6.3.0-easybuild-devel'</env>
      <env name="_ModuleTable034_">'cy9hbGwvQ29tcGlsZXIvR0NDLzEzLjMuMCIKLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMCIsICIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL0NvcmUiLCAiL2hvbWUvcnd0aDEyNjkvbW9kdWxlcyIsICIvaG9tZS9zczU0MDI5NC8ubW9kdWxlcyIsICIvd29yay9zczU0MDI5NC9tb2R1bGVzIiwKfSwKc3lzdGVtQmFzZU1QQVRIID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvcmUiLAp9Cg=='</env>
      <env name="_ModuleTable031_">'aWIgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL3psaWIvMS4zLjEubHVhIiwKZnVsbE5hbWUgPSAiemxpYi8xLjMuMSIsCmxvYWRPcmRlciA9IDIsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAzLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiemxpYi8xLjMuMSIsCndWID0gIjAwMDAwMDAwMS4wMDAwMDAwMDMuMDAwMDAwMDAxLip6ZmluYWwiLAp9LAp9LAptcGF0aEEgPSB7CiIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2Fs'</env>
      <env name="__LMOD_STACK_FLAGS_OFFLOAD_OPENMP">'LWZvcGVubXA='</env>
      <env name="_ModuleTable001_">'X01vZHVsZVRhYmxlXyA9IHsKTVR2ZXJzaW9uID0gMywKY19yZWJ1aWxkVGltZSA9IGZhbHNlLApjX3Nob3J0VGltZSA9IGZhbHNlLApkZXB0aFQgPSB7fSwKZmFtaWx5ID0gewptcGkgPSAiT3Blbk1QSSIsCn0sCm1UID0gewpDTWFrZSA9IHsKYWN0aW9uQSA9IHsKImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9MTFZNLzE5LjEuN1wiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL01QSS9HQ0MvMTMuMy4wL09wZW5NUEkvNS4wLjNcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFU'</env>
      <env name="_ModuleTable025_">'IDEsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJsaWJhcmNoaXZlLzMuNy40IiwKd1YgPSAiMDAwMDAwMDAzLjAwMDAwMDAwNy4wMDAwMDAwMDQuKnpmaW5hbCIsCn0sCmxpYmV2ZW50ID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9saWJldmVudC8yLjEuMTIubHVhIiwKZnVsbE5hbWUgPSAibGliZXZlbnQvMi4xLjEyIiwKbG9hZE9yZGVyID0gMTEsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAibGliZXZlbnQvMi4xLjEyIiwK'</env>
      <env name="LD_LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/lib64:/home/ss540294/opt/lib:/home/ss540294/bin/lib:/home/ss540294/jack/usr/lib64'</env>
      <env name="__LMOD_STACK_FLAGS_RUNTIME_LINKER">'LVdsLC1ycGF0aD0='</env>
      <env name="_ModuleTable014_">'IDI0LApwcm9wVCA9IHt9LApyZWZfY291bnQgPSAxLApzdGFja0RlcHRoID0gMiwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIlB5dGhvbi8zLjEyLjMiLAp3ViA9ICIwMDAwMDAwMDMuMDAwMDAwMDEyLjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKU1FMaXRlID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9TUUxpdGUvMy40NS4zLmx1YSIsCmZ1bGxOYW1lID0gIlNRTGl0ZS8zLjQ1LjMiLApsb2FkT3JkZXIgPSAyMiwKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9IDMsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9'</env>
      <env name="_ModuleTable004_">'aChcIk1PRFVMRVBBVEhcIixcIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQy8xMy4zLjBcIikiLAp9LApmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db3JlL0dDQy8xMy4zLjAubHVhIiwKZnVsbE5hbWUgPSAiR0NDLzEzLjMuMCIsCmxvYWRPcmRlciA9IDQsCnByb3BUID0gewp0eXBlXyA9IHsKdG9vbGNoYWluID0gMSwKfSwKfSwKc3RhY2tEZXB0aCA9IDEsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJHQ0MvMTMuMy4wIiwKd1YgPSAiczAwMDAw'</env>
      <env name="LMOD_FAMILY_MPI_VERSION">'5.0.3'</env>
      <env name="_ModuleTable020_">'cy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9iemlwMi8xLjAuOC5sdWEiLApmdWxsTmFtZSA9ICJiemlwMi8xLjAuOCIsCmxvYWRPcmRlciA9IDE5LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImJ6aXAyLzEuMC44IiwKd1YgPSAiMDAwMDAwMDAxLjAwMDAwMDAwMC4wMDAwMDAwMDguKnpmaW5hbCIsCn0sCmNVUkwgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2NVUkwvOC43LjEubHVhIiwKZnVsbE5hbWUgPSAiY1VSTC84LjcuMSIsCmxvYWRP'</env>
      <env name="LMOD_FAMILY_MPI">'OpenMPI'</env>
      <env name="FC">'gfortran'</env>
      <env name="__LMOD_STACK_CXX">'Zysr'</env>
      <env name="EBVERSIONPMIX">'5.0.2'</env>
      <env name="SLURM_MPI_TYPE">'pmix'</env>
      <env name="OBJC">'gcc'</env>
      <env name="__LMOD_STACK_CC">'Z2Nj'</env>
      <env name="XDG_DATA_DIRS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share:/usr/local/share:/usr/share'</env>
      <env name="EBVERSIONLIBXML2">'2.12.7'</env>
      <env name="__LMOD_STACK_MPIFC">'bXBpZm9ydA=='</env>
      <env name="PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/sbin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/bin:/home/ss540294/.local/lcov-2.3.1/bin:/home/ss540294/software/stress/usr/bin:/home/ss540294/software/ccache/bin:/home/ss540294/.local/bin:/home/ss540294/software/mpiP/bin:/home/ss540294/software/git/bin:/home/ss540294/htop/bin:/home/ss540294/nvim-linux-x86_64/bin:/rwthfs/rz/cluster/home/ss540294/.vscode-server/cli/servers/Stable-cb0c47c0cfaad0757385834bd89d410c78a856c0/server/bin/remote-cli:/usr/local_host/bin:/usr/local_host/sbin:/usr/local_rwth/bin:/usr/local_rwth/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/opt/singularity/bin:/usr/local/bin:/usr/local/sbin:/opt/slurm/current/sbin:/opt/slurm/current/bin:/home/ss540294/dotfiles/tools/diff-so-fancy:/home/ss540294/dotfiles/zsh/plugins/fzf/bin:/home/ss540294/.vscode-server/extensions/ms-python.debugpy-2025.10.0-linux-x64/bundled/scripts/noConfigScripts:/home/ss540294/.vscode-server/data/User/globalStorage/github.copilot-chat/debugCommand'</env>
      <env name="EBROOTLIBEVENT">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0'</env>
      <env name="MODULEPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/LLVM/19.1.7:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCC/13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core:/work/ss540294/.local/easybuild/modules/all/MPI/intel/2024.2.0/impi/2021.13.0:/work/ss540294/.local/easybuild/modules/all/Compiler/intel/2024.2.0:/work/ss540294/.local/easybuild/modules/all/Compiler/LLVM/19.1.7:/work/ss540294/.local/easybuild/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:/work/ss540294/.local/easybuild/modules/all/Compiler/GCC/13.3.0:/work/ss540294/.local/easybuild/modules/all/Compiler/GCCcore/13.3.0:/work/ss540294/.local/easybuild/modules/all/Core:/home/rwth1269/modules:/home/ss540294/.modules:/work/ss540294/modules'</env>
      <env name="CC">'clang'</env>
      <env name="_LMFILES_">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/GCCcore/13.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/zlib/1.3.1.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/binutils/2.42.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/GCC/13.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/numactl/2.0.18.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/XZ/5.4.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libxml2/2.12.7.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libpciaccess/0.18.1.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/hwloc/2.10.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/OpenSSL/3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libevent/2.1.12.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/UCX/1.16.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/PMIx/5.0.2.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/PRRTE/3.0.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/UCC/1.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCC/13.3.0/OpenMPI/5.0.3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/gompi/2024a.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/ncurses/6.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/bzip2/1.0.8.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libreadline/8.2.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/Tcl/8.6.14.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/SQLite/3.45.3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libffi/3.4.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/Python/3.12.3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/GMP/6.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/Z3/4.13.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/LLVM/19.1.7.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/cURL/8.7.1.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libarchive/3.7.4.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/CMake/3.29.3.lua'</env>
      <env name="_ModuleTable028_">'ZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvbGlicmVhZGxpbmUvOC4yLmx1YSIsCmZ1bGxOYW1lID0gImxpYnJlYWRsaW5lLzguMiIsCmxvYWRPcmRlciA9IDIwLApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImxpYnJlYWRsaW5lLzguMiIsCndWID0gIjAwMDAwMDAwOC4wMDAwMDAwMDIuKnpmaW5hbCIsCn0sCmxpYnhtbDIgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2xpYnhtbDIvMi4xMi43Lmx1YSIsCmZ1bGxOYW1lID0gImxpYnhtbDIv'</env>
      <env name="__LMOD_STACK_MPICC">'bXBpY2M='</env>
      <env name="FLAGS_FREE">'-ffree-form'</env>
      <env name="EBDEVELPMIX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-PMIx-5.0.2-easybuild-devel'</env>
      <env name="OMPI_CXX">'clang++'</env>
      <env name="__LMOD_STACK_FLAGS_DEBUG">'LWc='</env>
      <env name="__LMOD_STACK_LASTMPI">'T3Blbk1QSQ=='</env>
      <env name="__LMOD_REF_COUNT_LD_LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/lib64:1;/home/ss540294/opt/lib:2;/home/ss540294/bin/lib:2;/home/ss540294/jack/usr/lib64:2'</env>
      <env name="EBDEVELLIBXML2">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-libxml2-2.12.7-easybuild-devel'</env>
      <env name="_ModuleTable019_">'IiwKfSwKYmludXRpbHMgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2JpbnV0aWxzLzIuNDIubHVhIiwKZnVsbE5hbWUgPSAiYmludXRpbHMvMi40MiIsCmxvYWRPcmRlciA9IDMsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiYmludXRpbHMvMi40MiIsCndWID0gIjAwMDAwMDAwMi4wMDAwMDAwNDIuKnpmaW5hbCIsCn0sCmJ6aXAyID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlk'</env>
      <env name="CPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages/z3/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include/python3.12:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include/libxml2:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/include'</env>
      <env name="EBVERSIONLIBPCIACCESS">'0.18.1'</env>
      <env name="EBROOTLLVM">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0'</env>
      <env name="RWTH_HPC_FAMILY_MPI_VERSION">'5.0.3'</env>
      <env name="EBDEVELLLVM">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-LLVM-19.1.7-easybuild-devel'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
      <nonenv name="EBROOTIMKL"/>
      <nonenv name="TBBROOT"/>
      <nonenv name="FLAGS_intel_compilers_DEBUG"/>
      <nonenv name="ONEAPI_ROOT"/>
      <nonenv name="I_MPI_FABRICS"/>
      <nonenv name="FLAGS_intel_compilers_FAST_NO_FPOPT"/>
      <nonenv name="EBDEVELHTOP"/>
      <nonenv name="FPGA_VARS_DIR"/>
      <nonenv name="I_MPI_CC"/>
      <nonenv name="I_MPI_ROOT"/>
      <nonenv name="EBVERSIONIMPI"/>
      <nonenv name="MPI_NAME"/>
      <nonenv name="I_MPI_JOB_SIGNAL_PROPAGATION"/>
      <nonenv name="FI_PROVIDER_PATH"/>
      <nonenv name="DIAGUTIL_PATH"/>
      <nonenv name="FLAGS_intel_compilers_OPENMP"/>
      <nonenv name="EBROOTIMPI"/>
      <nonenv name="EBDEVELIMPI"/>
      <nonenv name="EBROOTINTELMINCOMPILERS"/>
      <nonenv name="intel_compilers_FC"/>
      <nonenv name="EBDEVELIMKL"/>
      <nonenv name="EBROOTIMKLMINFFTW"/>
      <nonenv name="FLEXIBLAS_LIBRARY_PATH"/>
      <nonenv name="FLAGS_intel_compilers_RUNTIME_LINKER"/>
      <nonenv name="EBVERSIONINTEL"/>
      <nonenv name="GDB_INFO"/>
      <nonenv name="EBVERSIONINTELMINCOMPILERS"/>
      <nonenv name="FLAGS_intel_compilers_ARCH64"/>
      <nonenv name="__LMOD_REF_COUNT_INFOPATH"/>
      <nonenv name="EBVERSIONIMKLMINFFTW"/>
      <nonenv name="EBVERSIONIMKL"/>
      <nonenv name="FLAGS_intel_compilers_PIC"/>
      <nonenv name="EBDEVELIMKLMINFFTW"/>
      <nonenv name="__LMOD_REF_COUNT_DIAGUTIL_PATH"/>
      <nonenv name="FLAGS_intel_compilers_FAST"/>
      <nonenv name="__LMOD_REF_COUNT_NLSPATH"/>
      <nonenv name="CMPLR_ROOT"/>
      <nonenv name="INTELARCH"/>
      <nonenv name="INFOPATH"/>
      <nonenv name="I_MPI_CXX"/>
      <nonenv name="intel_compilers_CXX"/>
      <nonenv name="__LMOD_REF_COUNT_FI_PROVIDER_PATH"/>
      <nonenv name="intel_compilers_CC"/>
      <nonenv name="MKL_EXAMPLES"/>
      <nonenv name="FLAGS_AUTOPAR"/>
      <nonenv name="intel_compilers_F77"/>
      <nonenv name="I_MPI_PIN"/>
      <nonenv name="OCL_ICD_FILENAMES"/>
      <nonenv name="EBROOTHTOP"/>
      <nonenv name="FLAGS_intel_compilers_RPATH"/>
      <nonenv name="CLASSPATH"/>
      <nonenv name="INTELFPGAOCLSDKROOT"/>
      <nonenv name="EBDEVELINTEL"/>
      <nonenv name="MKLROOT"/>
      <nonenv name="NLSPATH"/>
      <nonenv name="EBVERSIONHTOP"/>
      <nonenv name="EBROOTINTEL"/>
      <nonenv name="INTEL_PYTHONHOME"/>
      <nonenv name="FLAGS_intel_compilers_AUTOPAR"/>
      <nonenv name="FLAGS_intel_compilers_FREE"/>
      <nonenv name="__LMOD_REF_COUNT_FLEXIBLAS_LIBRARY_PATH"/>
      <nonenv name="EBDEVELINTELMINCOMPILERS"/>
      <nonenv name="intel_compilers_ROOT"/>
      <nonenv name="EBDEVELJUBE"/>
      <nonenv name="EBROOTJUBE"/>
      <nonenv name="EBVERSIONJUBE"/>
      <nonenv name="__LMOD_REF_COUNT_JUBE_INCLUDE_PATH"/>
      <nonenv name="JUBE_INCLUDE_PATH"/>
    </environment>
  </workpackage>
  <workpackage id="4">
    <step iteration="0" cycle="0">compile</step>
    <parameterset>
      <parameter name="force_compilation" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="executable_full_name" type="string" separator="," duplicate="none" update_mode="use" mode="text">
        <value>${executable_name}${executable_extension}</value>
        <selection>lulesh2.0</selection>
      </parameter>
      <parameter name="compile_preparation" type="string" separator="," duplicate="none" mode="text">
        <value>cd MPIRMA/${kernel_folder}</value>
      </parameter>
      <parameter name="compile_flags" type="string" separator=";" duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;parcoach&quot;: &quot;-g -Wl,-rpath=${parcoach_install_folder}/lib64 ${parcoach_install_folder}/lib64/libParcoachCollDynamic_MPI_C.so ${parcoach_install_folder}/lib64/libParcoachRMADynamic_MPI_C.so&quot;,
         &quot;tsan&quot;: &quot;${must_stats_compile_flags} -g&quot;,
         &quot;tsan-opt&quot;: &quot;${must_stats_compile_flags} ${must_isl_compile_flags} -g --optimizations ${must_compile_opt}&quot;,
         &quot;tsan-cover&quot;: &quot;${must_stats_compile_flags} -g --tsan-json ${jube_wp_abspath}/compile_cover/contract_messages.json&quot;,
         &quot;isl&quot;: &quot;${must_stats_compile_flags} ${must_isl_compile_flags}&quot;}.get(&quot;${compile_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="tsan_opt_extension" type="string" separator="," duplicate="none" mode="text">
        <value>.tsan-opt.${__tsan_opt_hash}</value>
        <selection>.tsan-opt.1a8f03679a975c693567ad1ab8b1222e</selection>
      </parameter>
      <parameter name="executable_extension" type="string" separator="," duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;parcoach&quot;: &quot;.pcoach&quot;,
         &quot;tsan&quot;: &quot;.tsan&quot;,
         &quot;tsan-opt&quot;: &quot;${tsan_opt_extension}&quot;,
         &quot;tsan-cover&quot;: &quot;.tsan-cover&quot;,
         &quot;isl&quot;: &quot;.isl&quot;}.get(&quot;${compile_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="compile_target" type="string" separator="," duplicate="none" mode="text">
        <value>$executable_name</value>
        <selection>lulesh2.0</selection>
      </parameter>
      <parameter name="benchmark_build_dir" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${jube_benchmark_home}/executables/${__toolchain_module}/${__compiler_module}/${__mpi_module}/&quot; + (&quot;${RMA_target}&quot; if &quot;${RMA_target}&quot;.split() else &quot;Default&quot;)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/executables/gompi/2024a/llvm/19/${mpi_name}/${mpi_version}/${RMA_target}</selection>
      </parameter>
      <parameter name="do_compile" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_compilation} || [ ! -f &quot;${benchmark_build_dir}/${executable_full_name}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="compile_common_env_vars" type="string" separator="!NONE!" duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;:     &quot;MPICC='mpicc ${compile_flags}' MPICXX='mpicxx ${compile_flags}' MPIFC='mpifc ${compile_flags}'&quot;,
         &quot;parcoach&quot;: &quot;MPICC='${PARCOACHCC} --wrap-target mpicc ${compile_flags}' MPICXX='${PARCOACHCXX} --wrap-target mpicxx ${compile_flags}'&quot;,
         &quot;tsan&quot;:     &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;,
         &quot;tsan-opt&quot;: &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;,
         &quot;tsan-cover&quot;: &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;,
         &quot;isl&quot;:      &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;}.get(&quot;${compile_mode}&quot;, 'invalid-compile-mode')</value>
        <selection>MPICC='mpicc ' MPICXX='mpicxx ' MPIFC='mpifc '</selection>
      </parameter>
      <parameter name="compile_env_vars" type="string" separator="!NONE!" duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;CXX='${MUSTCXX}' CFLAGS='${compile_flags}' CXXFLAGS='${compile_flags}'&quot;,
         &quot;tsan-opt&quot;: &quot;CXX='${MUSTCXX}' CFLAGS='${compile_flags}' CXXFLAGS='${compile_flags}'&quot;,
         &quot;tsan-cover&quot;: &quot;CXX='${MUSTCXX}' CFLAGS='${compile_flags}' CXXFLAGS='${compile_flags}'&quot;,
         }.get(&quot;${compile_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="compile_export" type="string" separator="!NONE!" duplicate="none" update_mode="use" mode="text">
        <value>for item in ${compile_common_env_vars} ${compile_env_vars}; do export &quot;$item&quot;; done</value>
        <selection>for item in MPICC='mpicc ' MPICXX='mpicxx ' MPIFC='mpifc ' ; do export &quot;$item&quot;; done</selection>
      </parameter>
      <parameter name="time_output_file" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>${jube_wp_abspath}/time.out</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out</selection>
      </parameter>
      <parameter name="time_measure_command" type="string" separator="," duplicate="none" mode="text">
        <value>/usr/bin/time -p -o ${time_output_file}</value>
        <selection>/usr/bin/time -p -o /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out</selection>
      </parameter>
      <parameter name="executable_name" type="string" separator="," duplicate="none" mode="text">
        <value>lulesh2.0</value>
      </parameter>
      <parameter name="must_compile_opt" type="string" separator=";" duplicate="none" mode="python">
        <value>{&quot;tsan-opt&quot;: &quot;ALX1000,CLUSTER&quot;}.get(&quot;${compile_mode}&quot;, &quot;&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="__tsan_opt_hash" type="string" separator=";" duplicate="none" mode="shell">
        <value>echo -n &quot;$must_compile_opt $__must_hash&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>1a8f03679a975c693567ad1ab8b1222e</selection>
      </parameter>
      <parameter name="modulenames_defaults" type="string" separator=";" duplicate="none" mode="text">
        <value>{
            &quot;gcc&quot;: &quot;gcc&quot;,
            &quot;clang&quot;: &quot;clang&quot;,
            &quot;intelmpi&quot;: &quot;intelmpi&quot;,
            &quot;cmake&quot;: &quot;cmake&quot;
        }</value>
      </parameter>
      <parameter name="modulenames_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{
            &quot;gcc&quot;: &quot;GCC&quot;,
            &quot;clang&quot;: &quot;Clang&quot;,
            &quot;Classic-Flang&quot;: &quot;Classic-Flang&quot;,
            &quot;intel&quot;: &quot;intel&quot;,
            &quot;intelmpi&quot;: &quot;iimpi&quot;,
            &quot;gompi&quot;: &quot;gompi&quot;,
            &quot;openmpi&quot; : &quot;openmpi&quot;,
            &quot;mpich&quot; : &quot;mpich&quot;,
            &quot;cmake&quot; : &quot;CMake&quot;
        }</value>
      </parameter>
      <parameter name="modulenames" type="string" separator=";" duplicate="none" mode="python">
        <value>{key:value for (key, value) in list(${modulenames_defaults}.items()) + list(${modulenames_updated}.items())}</value>
        <selection>{'gcc': 'GCC', 'clang': 'Clang', 'intelmpi': 'iimpi', 'cmake': 'CMake', 'Classic-Flang': 'Classic-Flang', 'intel': 'intel', 'gompi': 'gompi', 'openmpi': 'openmpi', 'mpich': 'mpich'}</selection>
      </parameter>
      <parameter name="modules" type="string" separator=";" duplicate="none" mode="python">
        <value>{
              &quot;gcc&quot;:                &quot;{0[gcc]}/11.3.0&quot;.format(${modulenames}),
              &quot;gcc/8.3.0&quot;:          &quot;{0[gcc]}/8.3.0&quot;.format(${modulenames}),
              &quot;gcc/9.3.0&quot;:          &quot;{0[gcc]}/9.3.0&quot;.format(${modulenames}),
              &quot;gcc/9.4.0&quot;:          &quot;{0[gcc]}/9.4.0&quot;.format(${modulenames}),
              &quot;gcc/10.2.0&quot;:         &quot;{0[gcc]}/10.2.0&quot;.format(${modulenames}),
              &quot;gcc/10.3.0&quot;:         &quot;{0[gcc]}/10.3.0&quot;.format(${modulenames}),
              &quot;gcc/11.2.0&quot;:         &quot;{0[gcc]}/11.2.0&quot;.format(${modulenames}),
              &quot;gcc/11.3.0&quot;:         &quot;{0[gcc]}/11.3.0&quot;.format(${modulenames}),
              &quot;clang&quot;:              &quot;{0[clang]}/13.0.1&quot;.format(${modulenames}),
              &quot;clang/13.0.1&quot;:       &quot;{0[clang]}/13.0.1&quot;.format(${modulenames}),
              &quot;clang/15.0.5&quot;:       &quot;{0[clang]}/15.0.5&quot;.format(${modulenames}),
              &quot;clang/16.0.6&quot;:       &quot;{0[clang]}/16.0.6&quot;.format(${modulenames}),
              &quot;Classic-Flang&quot;:      &quot;{0[Classic-Flang]}/16.0.4-c23&quot;.format(${modulenames}),
              &quot;Classic-Flang/16.0.4-c23&quot;:  &quot;{0[Classic-Flang]}/16.0.4-c23&quot;.format(${modulenames}),
              &quot;Classic-Flang/16.0.4-c23-impi&quot;:  &quot;{0[Classic-Flang]}/16.0.4-c23-impi&quot;.format(${modulenames}),
              &quot;intel&quot;       :       &quot;{0[intel]}/2022a&quot;.format(${modulenames}),
              &quot;intel/2019b&quot; :       &quot;{0[intel]}/2019b&quot;.format(${modulenames}),
              &quot;intel/2020a&quot; :       &quot;{0[intel]}/2020a&quot;.format(${modulenames}),
              &quot;intel/2020b&quot; :       &quot;{0[intel]}/2020b&quot;.format(${modulenames}),
              &quot;intel/2021a&quot; :       &quot;{0[intel]}/2021a&quot;.format(${modulenames}),
              &quot;intel/2021b&quot; :       &quot;{0[intel]}/2021b&quot;.format(${modulenames}),
              &quot;intel/2022a&quot; :       &quot;{0[intel]}/2022a&quot;.format(${modulenames}),
              &quot;intel/2022b&quot; :       &quot;{0[intel]}/2022b&quot;.format(${modulenames}),
              &quot;intel/2023a&quot; :       &quot;{0[intel]}/2023a&quot;.format(${modulenames}),
              &quot;gompi/2020a&quot; :       &quot;{0[gompi]}/2020a&quot;.format(${modulenames}),
              &quot;gompi/2020b&quot; :       &quot;{0[gompi]}/2020b&quot;.format(${modulenames}),
              &quot;gompi/2021a&quot; :       &quot;{0[gompi]}/2021a&quot;.format(${modulenames}),
              &quot;gompi/2021b&quot; :       &quot;{0[gompi]}/2021b&quot;.format(${modulenames}),
              &quot;gompi/2022a&quot; :       &quot;{0[gompi]}/2022a&quot;.format(${modulenames}),
              &quot;gompi/2022b&quot; :       &quot;{0[gompi]}/2022b&quot;.format(${modulenames}),
              &quot;gompi/2023a&quot; :       &quot;{0[gompi]}/2023a&quot;.format(${modulenames}),
              &quot;gompi/2024a&quot; :       &quot;{0[gompi]}/2024a&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2022a&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2022b&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2023a&quot;.format(${modulenames}),
              &quot;openmpi&quot;:            &quot;{0[openmpi]}/4.1.4&quot;.format(${modulenames}),
              &quot;openmpi/4.0.3&quot;:      &quot;{0[openmpi]}/4.0.3&quot;.format(${modulenames}),
              &quot;openmpi/4.0.5&quot;:      &quot;{0[openmpi]}/4.0.5&quot;.format(${modulenames}),
              &quot;openmpi/4.1.1&quot;:      &quot;{0[openmpi]}/4.1.1&quot;.format(${modulenames}),
              &quot;openmpi/4.1.4&quot;:      &quot;{0[openmpi]}/4.1.4&quot;.format(${modulenames}),
              &quot;openmpi/4.1.5&quot;:      &quot;{0[openmpi]}/4.1.5&quot;.format(${modulenames}),
              &quot;openmpi/4.1.6&quot;:      &quot;{0[openmpi]}/4.1.6&quot;.format(${modulenames}),
              &quot;openmpi/4.1.6-ucx16&quot;:      &quot;{0[openmpi]}/4.1.6-ucx16&quot;.format(${modulenames}),
              &quot;mpich&quot;:              &quot;{0[mpich]}/4.1.2&quot;.format(${modulenames}),
              &quot;mpich/4.1.2&quot;:        &quot;{0[mpich]}/4.1.2&quot;.format(${modulenames}),
              &quot;cmake&quot;:               &quot;{0[cmake]}/3.23.1&quot;.format(${modulenames}),
              &quot;cmake/3.21.1&quot;:        &quot;{0[cmake]}/3.21.1&quot;.format(${modulenames}),
              &quot;cmake/3.22.1&quot;:        &quot;{0[cmake]}/3.22.1&quot;.format(${modulenames}),
              &quot;cmake/3.23.1&quot;:        &quot;{0[cmake]}/3.23.1&quot;.format(${modulenames}),
              &quot;cmake/3.24.3&quot;:        &quot;{0[cmake]}/3.24.3&quot;.format(${modulenames}),
              &quot;cmake/3.26.3&quot;:        &quot;{0[cmake]}/3.26.3&quot;.format(${modulenames}),
              &quot;cmake/3.29.3&quot;:        &quot;{0[cmake]}/3.29.3&quot;.format(${modulenames})    
          }</value>
        <selection>{'gcc': 'GCC/11.3.0', 'gcc/8.3.0': 'GCC/8.3.0', 'gcc/9.3.0': 'GCC/9.3.0', 'gcc/9.4.0': 'GCC/9.4.0', 'gcc/10.2.0': 'GCC/10.2.0', 'gcc/10.3.0': 'GCC/10.3.0', 'gcc/11.2.0': 'GCC/11.2.0', 'gcc/11.3.0': 'GCC/11.3.0', 'clang': 'Clang/13.0.1', 'clang/13.0.1': 'Clang/13.0.1', 'clang/15.0.5': 'Clang/15.0.5', 'clang/16.0.6': 'Clang/16.0.6', 'Classic-Flang': 'Classic-Flang/16.0.4-c23', 'Classic-Flang/16.0.4-c23': 'Classic-Flang/16.0.4-c23', 'Classic-Flang/16.0.4-c23-impi': 'Classic-Flang/16.0.4-c23-impi', 'intel': 'intel/2022a', 'intel/2019b': 'intel/2019b', 'intel/2020a': 'intel/2020a', 'intel/2020b': 'intel/2020b', 'intel/2021a': 'intel/2021a', 'intel/2021b': 'intel/2021b', 'intel/2022a': 'intel/2022a', 'intel/2022b': 'intel/2022b', 'intel/2023a': 'intel/2023a', 'gompi/2020a': 'gompi/2020a', 'gompi/2020b': 'gompi/2020b', 'gompi/2021a': 'gompi/2021a', 'gompi/2021b': 'gompi/2021b', 'gompi/2022a': 'gompi/2022a', 'gompi/2022b': 'gompi/2022b', 'gompi/2023a': 'gompi/2023a', 'gompi/2024a': 'gompi/2024a', 'intelmpi': 'iimpi/2023a', 'openmpi': 'openmpi/4.1.4', 'openmpi/4.0.3': 'openmpi/4.0.3', 'openmpi/4.0.5': 'openmpi/4.0.5', 'openmpi/4.1.1': 'openmpi/4.1.1', 'openmpi/4.1.4': 'openmpi/4.1.4', 'openmpi/4.1.5': 'openmpi/4.1.5', 'openmpi/4.1.6': 'openmpi/4.1.6', 'openmpi/4.1.6-ucx16': 'openmpi/4.1.6-ucx16', 'mpich': 'mpich/4.1.2', 'mpich/4.1.2': 'mpich/4.1.2', 'cmake': 'CMake/3.23.1', 'cmake/3.21.1': 'CMake/3.21.1', 'cmake/3.22.1': 'CMake/3.22.1', 'cmake/3.23.1': 'CMake/3.23.1', 'cmake/3.24.3': 'CMake/3.24.3', 'cmake/3.26.3': 'CMake/3.26.3', 'cmake/3.29.3': 'CMake/3.29.3'}</selection>
      </parameter>
      <parameter name="prerequisite_modules_dict" type="string" separator=";" duplicate="none" mode="python">
        <value>{
            &quot;clang/13.0.1&quot;:       [&quot;GCCcore/.11.3.0&quot;, &quot;GCC/11.3.0&quot;],
            &quot;clang/15.0.5&quot;:       [&quot;GCCcore/.11.3.0&quot;, &quot;GCC/11.3.0&quot;],
            &quot;clang/16.0.6&quot;:       [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;Classic-Flang/16.0.4-c23&quot;:  [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;Classic-Flang/16.0.4-c23-impi&quot;:  [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;intelmpi/2021.6.0&quot;:  [&quot;intel-compilers/2022.1.0&quot;],
            &quot;openmpi/4.0.3&quot;:      [&quot;GCC/9.3.0&quot;],
            &quot;openmpi/4.0.5&quot;:      [&quot;GCC/10.2.0&quot;],
            &quot;openmpi/4.1.1&quot;:      [&quot;GCC/11.2.0&quot;],
            &quot;openmpi/4.1.4&quot;:      [&quot;GCC/11.3.0&quot;],
            &quot;openmpi/4.1.5&quot;:      [&quot;GCC/12.3.0&quot;],
            &quot;openmpi/4.1.6&quot;:      [&quot;GCC/12.3.0&quot;],
            &quot;openmpi/4.1.6-ucx16&quot;:      [&quot;GCC/12.3.0&quot;],
        }</value>
        <selection>{'clang/13.0.1': ['GCCcore/.11.3.0', 'GCC/11.3.0'], 'clang/15.0.5': ['GCCcore/.11.3.0', 'GCC/11.3.0'], 'clang/16.0.6': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'Classic-Flang/16.0.4-c23': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'Classic-Flang/16.0.4-c23-impi': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'intelmpi/2021.6.0': ['intel-compilers/2022.1.0'], 'openmpi/4.0.3': ['GCC/9.3.0'], 'openmpi/4.0.5': ['GCC/10.2.0'], 'openmpi/4.1.1': ['GCC/11.2.0'], 'openmpi/4.1.4': ['GCC/11.3.0'], 'openmpi/4.1.5': ['GCC/12.3.0'], 'openmpi/4.1.6': ['GCC/12.3.0'], 'openmpi/4.1.6-ucx16': ['GCC/12.3.0']}</selection>
      </parameter>
      <parameter name="cmake_version" type="string" separator="," duplicate="none" mode="text">
        <value>3.29.3</value>
      </parameter>
      <parameter name="cmake_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;cmake/${cmake_version}&quot;) if $modules.get(&quot;cmake/${cmake_version}&quot;) else $modules.get(&quot;cmake&quot;, &quot;cmake/${cmake_version}&quot;)</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="prerequisite_toolchain_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__toolchain_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_compiler_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__compiler_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_mpi_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__mpi_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_modules" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="toolchain_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${toolchain_name}/${toolchain_version}&quot;, $modules.get(&quot;${toolchain_name}&quot;, &quot;${toolchain_name}&quot; + (&quot;/${toolchain_version}&quot; if &quot;${toolchain_version}&quot; else &quot;&quot;)))</value>
        <selection>gompi/2024a</selection>
      </parameter>
      <parameter name="compiler_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${compiler_name}/${compiler_version}&quot;, $modules.get(&quot;${compiler_name}&quot;, &quot;${compiler_name}&quot; + (&quot;/${compiler_version}&quot; if &quot;${compiler_version}&quot; else &quot;&quot;)))</value>
        <selection>LLVM/19</selection>
      </parameter>
      <parameter name="mpi_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${mpi_name}/${mpi_version}&quot;, $modules.get(&quot;${mpi_name}&quot;, &quot;${mpi_name}&quot; + (&quot;/${mpi_version}&quot; if &quot;${mpi_version}&quot; else &quot;&quot;)))</value>
        <selection>${mpi_name}/${mpi_version}</selection>
      </parameter>
      <parameter name="required_modules" type="string" separator="," duplicate="none" mode="text">
        <value>${prerequisite_modules} ${toolchain_module} ${mpi_module} ${compiler_module} ${cmake_module} ${must_prerequisite_modules}</value>
        <selection> gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}</selection>
      </parameter>
      <parameter name="use_modules" type="string" separator="," duplicate="none" mode="text">
        <value>/home/rwth1269/modules</value>
      </parameter>
      <parameter name="load_modules" type="string" separator="," duplicate="none" mode="text">
        <value>module use /home/rwth1269/modules/; module purge; for path in ${use_modules}; do module use $path; done; for modulename in ${required_modules}; do module load $modulename; done</value>
        <selection>module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done</selection>
      </parameter>
      <parameter name="__toolchain_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${toolchain_module}&quot;.lower()</value>
        <selection>gompi/2024a</selection>
      </parameter>
      <parameter name="__compiler_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${compiler_module}&quot;.lower()</value>
        <selection>llvm/19</selection>
      </parameter>
      <parameter name="__mpi_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${mpi_module}&quot;.lower()</value>
        <selection>${mpi_name}/${mpi_version}</selection>
      </parameter>
      <parameter name="export_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{
              (&quot;clang&quot;, &quot;intelmpi&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;intelmpi&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;clang&quot;, &quot;openmpi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;, &quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;clang&quot;, &quot;intel&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;intel&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;clang&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;],
              (&quot;Classic-Flang&quot;, &quot;mpich&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;openmpi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;OMPI_FC=flang&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;,&quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;Classic-Flang&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;OMPI_FC=flang&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;,&quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;LLVM&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;CC=clang&quot;, &quot;CXX=clang++&quot;, &quot;PMIX_MCA_gds=hash&quot;, &quot;OMPI_MCA_memory=^patcher&quot;],
          }</value>
      </parameter>
      <parameter name="compiler_mpi_export" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join($export_dict.get((&quot;${compiler_name}&quot;,&quot;${mpi_name}&quot;), []))</value>
        <selection/>
      </parameter>
      <parameter name="compiler_toolchain_export" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join($export_dict.get((&quot;${compiler_name}&quot;,&quot;${toolchain_name}&quot;), []))</value>
        <selection>OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher</selection>
      </parameter>
      <parameter name="required_exports" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${compiler_mpi_export} ${compiler_toolchain_export} ${openmp_export} ${parcoach_export}</value>
        <selection> OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}</selection>
      </parameter>
      <parameter name="export" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>for item in ${required_exports}; do export &quot;$item&quot;; done</value>
        <selection>for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done</selection>
      </parameter>
      <parameter name="toolchain_name" type="string" separator="," duplicate="none" mode="text">
        <value>gompi</value>
      </parameter>
      <parameter name="toolchain_version" type="string" separator="," duplicate="none" mode="text">
        <value>2024a</value>
      </parameter>
      <parameter name="compiler_name" type="string" separator="," duplicate="none" mode="text">
        <value>LLVM</value>
      </parameter>
      <parameter name="compiler_version" type="string" separator="," duplicate="none" mode="text">
        <value>19</value>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="compile_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,tsan,tsan-cover</value>
        <selection idx="0">base</selection>
      </parameter>
    </parameterset>
    <parents>2,3</parents>
    <iteration_siblings>4</iteration_siblings>
    <environment>
      <env name="__LMOD_STACK_OBJCXX">'Zysr'</env>
      <env name="EBVERSIONGMP">'6.3.0'</env>
      <env name="_ModuleTable016_">'b2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL1VDQy8xLjMuMC5sdWEiLApmdWxsTmFtZSA9ICJVQ0MvMS4zLjAiLApsb2FkT3JkZXIgPSAxNSwKcHJvcFQgPSB7fSwKcmVmX2NvdW50ID0gMSwKc3RhY2tEZXB0aCA9IDIsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJVQ0MvMS4zLjAiLAp3ViA9ICIwMDAwMDAwMDEuMDAwMDAwMDAzLip6ZmluYWwiLAp9LApVQ1ggPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUv'</env>
      <env name="_ModuleTable022_">'UEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMFwiKSIsICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9ob21lL3J3dGgxMjY5L21vZHVsZXNcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db3JlXCIpIiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2hvbWUvc3M1NDAyOTQvLm1vZHVsZXNcIikiLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC9tb2R1bGVzXCIpIiwKfSwKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4'</env>
      <env name="MPI_BINDIR">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/bin'</env>
      <env name="EBVERSIONOPENMPI">'5.0.3'</env>
      <env name="OBJCXX">'g++'</env>
      <env name="FLAGS_OFFLOAD_OPENMP">'-fopenmp'</env>
      <env name="EBROOTPMIX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0'</env>
      <env name="EBROOTGMP">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0'</env>
      <env name="_ModuleTable027_">'b2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2xpYnBjaWFjY2Vzcy8wLjE4LjEubHVhIiwKZnVsbE5hbWUgPSAibGlicGNpYWNjZXNzLzAuMTguMSIsCmxvYWRPcmRlciA9IDgsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAzLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAibGlicGNpYWNjZXNzLzAuMTguMSIsCndWID0gIjAwMDAwMDAwMC4wMDAwMDAwMTguMDAwMDAwMDAxLip6ZmluYWwiLAp9LApsaWJyZWFkbGluZSA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBp'</env>
      <env name="__LMOD_STACK_MPICXX">'bXBpY3h4'</env>
      <env name="FLAGS_RPATH">'-Wl,-rpath=/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/lib64'</env>
      <env name="FLAGS_OFFLOAD_OPENACC">'-fopenacc'</env>
      <env name="_ModuleTable032_">'bC9Db21waWxlci9MTFZNLzE5LjEuNyIKLCAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvTVBJL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuMyIKLCAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDLzEzLjMuMCIKLCAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAiCiwgIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkv'</env>
      <env name="PKG_CONFIG_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib/pkgconfig'</env>
      <env name="__LMOD_STACK_OBJC">'Z2Nj'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="__LMOD_STACK_FLAGS_OFFLOAD_OPENACC">'LWZvcGVuYWNj'</env>
      <env name="_ModuleTable011_">'cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJPcGVuTVBJLzUuMC4zIiwKd1YgPSAiczAwMDAwMDA1LjAwMDAwMDAwMC4wMDAwMDAwMDMuKnpmaW5hbCIsCn0sCk9wZW5TU0wgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvcmUvT3BlblNTTC8zLmx1YSIsCmZ1bGxOYW1lID0gIk9wZW5TU0wvMyIsCmxvYWRPcmRlciA9IDEwLApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIk9wZW5TU0wvMyIsCndWID0gIjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKUE1JeCA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5y'</env>
      <env name="_ModuleTable007_">'MDAwMy4qemZpbmFsIiwKfSwKTExWTSA9IHsKYWN0aW9uQSA9IHsKInByZXBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0xMVk0vMTkuMS43XCIpIgosICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvTExWTS8xOS4xLjdcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9NUEkvR0NDLzEzLjMuMC9PcGVuTVBJLzUuMC4zXCIpIgos'</env>
      <env name="EBROOTPRRTE">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0'</env>
      <env name="MPICC">'mpicc'</env>
      <env name="_ModuleTable002_">'SFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0MvMTMuMy4wXCIpIgosICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjBcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db3JlXCIpIiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2hvbWUvcnd0aDEyNjkvbW9kdWxlc1wiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvaG9tZS9zczU0MDI5NC8ubW9kdWxlc1wiKSIsICJh'</env>
      <env name="EBEXTSLISTZ3">'z3-solver-4.13.0.0'</env>
      <env name="__LMOD_REF_COUNT_MODULEPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/LLVM/19.1.7:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCC/13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core:1;/work/ss540294/.local/easybuild/modules/all/MPI/intel/2024.2.0/impi/2021.13.0:8;/work/ss540294/.local/easybuild/modules/all/Compiler/intel/2024.2.0:8;/work/ss540294/.local/easybuild/modules/all/Compiler/LLVM/19.1.7:2;/work/ss540294/.local/easybuild/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:3;/work/ss540294/.local/easybuild/modules/all/Compiler/GCC/13.3.0:3;/work/ss540294/.local/easybuild/modules/all/Compiler/GCCcore/13.3.0:11;/work/ss540294/.local/easybuild/modules/all/Core:11;/home/rwth1269/modules:5;/home/ss540294/.modules:6;/work/ss540294/modules:6'</env>
      <env name="CPP">'cpp'</env>
      <env name="__LMOD_STACK_FLAGS_OPENMP">'LWZvcGVubXA='</env>
      <env name="OMPI_MCA_btl">'^ofi,openib,tcp'</env>
      <env name="_ModuleTable005_">'MDEzLjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKR0NDY29yZSA9IHsKYWN0aW9uQSA9IHsKInByZXBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wXCIpIiwKfSwKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29yZS9HQ0Njb3JlLzEzLjMuMC5sdWEiLApmdWxsTmFtZSA9ICJHQ0Njb3JlLzEzLjMuMCIsCmxvYWRPcmRlciA9IDEsCnByb3BUID0gewp0eXBlXyA9IHsKY29tcGlsZXIgPSAxLAp9LAp9'</env>
      <env name="_ModuleTable021_">'cmRlciA9IDI4LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMSwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImNVUkwvOC43LjEiLAp3ViA9ICIwMDAwMDAwMDguMDAwMDAwMDA3LjAwMDAwMDAwMS4qemZpbmFsIiwKfSwKZ29tcGkgPSB7CmFjdGlvbkEgPSB7CiJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvTVBJL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuM1wiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQy8xMy4zLjBcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxF'</env>
      <env name="_ModuleTable030_">'dGl2ZSIsCnVzZXJOYW1lID0gIm5jdXJzZXMvNi41IiwKd1YgPSAiMDAwMDAwMDA2LjAwMDAwMDAwNS4qemZpbmFsIiwKfSwKbnVtYWN0bCA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvbnVtYWN0bC8yLjAuMTgubHVhIiwKZnVsbE5hbWUgPSAibnVtYWN0bC8yLjAuMTgiLApsb2FkT3JkZXIgPSA1LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIm51bWFjdGwvMi4wLjE4IiwKd1YgPSAiMDAwMDAwMDAyLjAwMDAwMDAwMC4wMDAwMDAwMTguKnpmaW5hbCIsCn0sCnps'</env>
      <env name="__LMOD_REF_COUNT_ACLOCAL_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share/aclocal:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/aclocal:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/aclocal:1'</env>
      <env name="EBROOTOPENMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0'</env>
      <env name="OMPI_MCA_btl_openib_ib_timeout">'24'</env>
      <env name="EBDEVELPRRTE">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-PRRTE-3.0.5-easybuild-devel'</env>
      <env name="OMPI_MCA_btl_openib_allow_ib">'1'</env>
      <env name="EBVERSIONUCX">'1.16.0'</env>
      <env name="EBVERSIONZ3">'4.13.0'</env>
      <env name="EBROOTLIBPCIACCESS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0'</env>
      <env name="EBVERSIONUCC">'1.3.0'</env>
      <env name="MPICXX">'mpicxx'</env>
      <env name="EBROOTHWLOC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0'</env>
      <env name="MPIFC">'mpifc'</env>
      <env name="EBDEVELGOMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/gompi/2024a/easybuild/Core-gompi-2024a-easybuild-devel'</env>
      <env name="EBVERSIONNUMACTL">'2.0.18'</env>
      <env name="EBROOTLIBXML2">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0'</env>
      <env name="EBVERSIONLIBEVENT">'2.1.12'</env>
      <env name="MANPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share/man:/usr/local_host/man:/usr/local_rwth/man:/usr/man:/usr/share/man:/usr/local/man:/usr/local/share/man:/opt/slurm/current/share/man'</env>
      <env name="__LMOD_STACK_FLAGS_FAST_NO_FPOPT">'LU8zIC1tdHVuZT1uYXRpdmU='</env>
      <env name="__LMOD_STACK_FLAGS_ARCH64">'LW02NA=='</env>
      <env name="RWTH_HPC_FAMILY_MPI">'OpenMPI'</env>
      <env name="EBVERSIONPRRTE">'3.0.5'</env>
      <env name="CXX">'clang++'</env>
      <env name="MPI_INCLUDE">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/include'</env>
      <env name="FLAGS_OPENMP">'-fopenmp'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_STACK_FLAGS_AUTOPAR">'false'</env>
      <env name="_ModuleTable008_">'ICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDLzEzLjMuMFwiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wXCIpIgosICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29yZVwiKSIsICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9ob21lL3J3dGgxMjY5L21vZHVsZXNcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2hvbWUv'</env>
      <env name="EBDEVELLIBEVENT">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-libevent-2.1.12-easybuild-devel'</env>
      <env name="__LMOD_REF_COUNT_CMAKE_PREFIX_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0:1'</env>
      <env name="EBVERSIONHWLOC">'2.10.0'</env>
      <env name="__LMOD_STACK_FLAGS_PIC">'LWZQSUMgLXNoYXJlZA=='</env>
      <env name="_ModuleTable013_">'ZS8xMy4zLjAvUFJSVEUvMy4wLjUubHVhIiwKZnVsbE5hbWUgPSAiUFJSVEUvMy4wLjUiLApsb2FkT3JkZXIgPSAxNCwKcHJvcFQgPSB7fSwKcmVmX2NvdW50ID0gMSwKc3RhY2tEZXB0aCA9IDIsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJQUlJURS8zLjAuNSIsCndWID0gIjAwMDAwMDAwMy4wMDAwMDAwMDAuMDAwMDAwMDA1Lip6ZmluYWwiLAp9LApQeXRob24gPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL1B5dGhvbi8zLjEyLjMubHVhIiwKZnVsbE5hbWUgPSAiUHl0aG9uLzMuMTIuMyIsCmxvYWRPcmRlciA9'</env>
      <env name="EBDEVELOPENMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/easybuild/Compiler-GCC-13.3.0-OpenMPI-5.0.3-easybuild-devel'</env>
      <env name="EBROOTZ3">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0'</env>
      <env name="__LMOD_REF_COUNT_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/sbin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/bin:1;/home/ss540294/.local/lcov-2.3.1/bin:2;/home/ss540294/software/stress/usr/bin:2;/home/ss540294/software/ccache/bin:2;/home/ss540294/.local/bin:2;/home/ss540294/software/mpiP/bin:2;/home/ss540294/software/git/bin:2;/home/ss540294/htop/bin:2;/home/ss540294/nvim-linux-x86_64/bin:2;/rwthfs/rz/cluster/home/ss540294/.vscode-server/cli/servers/Stable-cb0c47c0cfaad0757385834bd89d410c78a856c0/server/bin/remote-cli:1;/usr/local_host/bin:1;/usr/local_host/sbin:1;/usr/local_rwth/bin:1;/usr/local_rwth/sbin:1;/usr/bin:1;/usr/sbin:1;/bin:1;/sbin:1;/opt/singularity/bin:1;/usr/local/bin:1;/usr/local/sbin:1;/opt/slurm/current/sbin:1;/opt/slurm/current/bin:1;/home/ss540294/dotfiles/tools/diff-so-fancy:2;/home/ss540294/dotfiles/zsh/plugins/fzf/bin:1;/home/ss540294/.vscode-server/extensions/ms-python.debugpy-2025.10.0-linux-x64/bundled/scripts/noConfigScripts:1;/home/ss540294/.vscode-server/data/User/globalStorage/github.copilot-chat/debugCommand:1'</env>
      <env name="_ModuleTable018_">'NCwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIlhaLzUuNC41IiwKd1YgPSAiMDAwMDAwMDA1LjAwMDAwMDAwNC4wMDAwMDAwMDUuKnpmaW5hbCIsCn0sClozID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9aMy80LjEzLjAubHVhIiwKZnVsbE5hbWUgPSAiWjMvNC4xMy4wIiwKbG9hZE9yZGVyID0gMjYsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAxLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiWjMvNC4xMy4wIiwKd1YgPSAiMDAwMDAwMDA0LjAwMDAwMDAxMy4qemZpbmFs'</env>
      <env name="_ModuleTable015_">'ICJTUUxpdGUvMy40NS4zIiwKd1YgPSAiMDAwMDAwMDAzLjAwMDAwMDA0NS4wMDAwMDAwMDMuKnpmaW5hbCIsCn0sClRjbCA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvVGNsLzguNi4xNC5sdWEiLApmdWxsTmFtZSA9ICJUY2wvOC42LjE0IiwKbG9hZE9yZGVyID0gMjEsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSA0LApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiVGNsLzguNi4xNCIsCndWID0gIjAwMDAwMDAwOC4wMDAwMDAwMDYuMDAwMDAwMDE0Lip6ZmluYWwiLAp9LApVQ0MgPSB7CmZuID0gIi9jdm1mcy9z'</env>
      <env name="FLAGS_FAST_NO_FPOPT">'-O3 -mtune=native'</env>
      <env name="_ModuleTable_Sz_">'34'</env>
      <env name="__LMOD_REF_COUNT_LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:1;/home/ss540294/bin/lib:2'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="_ModuleTable023_">'L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29yZS9nb21waS8yMDI0YS5sdWEiLApmdWxsTmFtZSA9ICJnb21waS8yMDI0YSIsCmxvYWRPcmRlciA9IDE3LApwcm9wVCA9IHsKdHlwZV8gPSB7CnRvb2xjaGFpbiA9IDEsCn0sCn0sCnN0YWNrRGVwdGggPSAwLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiZ29tcGkvMjAyNGEiLAp3ViA9ICJzMDAwMDIwMjQuKmEuKnpmaW5hbCIsCn0sCmh3bG9jID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9od2xvYy8yLjEwLjAubHVhIiwKZnVs'</env>
      <env name="__LMOD_STACK_F77">'Z2ZvcnRyYW4gLWZuby1zaWduLXplcm8='</env>
      <env name="__LMOD_REF_COUNT_PKG_CONFIG_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib/pkgconfig:1'</env>
      <env name="EBROOTGCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/3.3.0'</env>
      <env name="__LMOD_STACK_LASTCOMPILER">'R0NDY29yZQ=='</env>
      <env name="FLAGS_FAST">'-O3 -ffast-math -mtune=native'</env>
      <env name="__LMOD_REF_COUNT_CPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages/z3/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include/python3.12:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include/libxml2:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/include:1'</env>
      <env name="__LMOD_STACK_MPIF77">'bXBpZm9ydA=='</env>
      <env name="PMIX_MCA_psec">'^munge'</env>
      <env name="MPI_LIBDIR">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib'</env>
      <env name="EBROOTNUMACTL">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0'</env>
      <env name="_ModuleTable029_">'Mi4xMi43IiwKbG9hZE9yZGVyID0gNywKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9IDMsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJsaWJ4bWwyLzIuMTIuNyIsCndWID0gIjAwMDAwMDAwMi4wMDAwMDAwMTIuMDAwMDAwMDA3Lip6ZmluYWwiLAp9LApuY3Vyc2VzID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9uY3Vyc2VzLzYuNS5sdWEiLApmdWxsTmFtZSA9ICJuY3Vyc2VzLzYuNSIsCmxvYWRPcmRlciA9IDE4LApwcm9wVCA9IHt9LApyZWZfY291bnQgPSAxLApzdGFja0RlcHRoID0gMSwKc3RhdHVzID0gImFj'</env>
      <env name="OMPI_MCA_mtl">'^psm'</env>
      <env name="CMAKE_PREFIX_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0'</env>
      <env name="MPIF77">'mpifort'</env>
      <env name="_ModuleTable010_">'ewphY3Rpb25BID0gewoicHJlcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvTVBJL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuM1wiKSIsCn0sCmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuMy5sdWEiLApmdWxsTmFtZSA9ICJPcGVuTVBJLzUuMC4zIiwKbG9hZE9yZGVyID0gMTYsCnByb3BUID0gewp0eXBlXyA9IHsKbXBpID0gMSwKfSwKfSwKc3RhY2tEZXB0aCA9IDEsCnN0YXR1'</env>
      <env name="OMPI_MCA_hwloc_base_binding_policy">'none'</env>
      <env name="_ModuleTable024_">'bE5hbWUgPSAiaHdsb2MvMi4xMC4wIiwKbG9hZE9yZGVyID0gOSwKcHJvcFQgPSB7fSwKcmVmX2NvdW50ID0gMSwKc3RhY2tEZXB0aCA9IDIsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJod2xvYy8yLjEwLjAiLAp3ViA9ICIwMDAwMDAwMDIuMDAwMDAwMDEwLip6ZmluYWwiLAp9LApsaWJhcmNoaXZlID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9saWJhcmNoaXZlLzMuNy40Lmx1YSIsCmZ1bGxOYW1lID0gImxpYmFyY2hpdmUvMy43LjQiLApsb2FkT3JkZXIgPSAyOSwKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9'</env>
      <env name="EBVERSIONGCC">'13.3.0'</env>
      <env name="__LMOD_STACK_FLAGS_FREE">'LWZmcmVlLWZvcm0='</env>
      <env name="MPITEST">'/opt/MPI/bin/mpitest'</env>
      <env name="EBDEVELGCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCC/13.3.0/easybuild/Core-GCC-13.3.0-easybuild-devel'</env>
      <env name="EBROOTGOMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/gompi/2024a'</env>
      <env name="_ModuleTable003_">'cHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0L21vZHVsZXNcIikiLAp9LApmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9DTWFrZS8zLjI5LjMubHVhIiwKZnVsbE5hbWUgPSAiQ01ha2UvMy4yOS4zIiwKbG9hZE9yZGVyID0gMzAsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAwLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiQ01ha2UvMy4yOS4zIiwKd1YgPSAiczAwMDAwMDAzLjAwMDAwMDAyOS4wMDAwMDAwMDMuKnpmaW5hbCIsCn0sCkdDQyA9IHsKYWN0aW9uQSA9IHsKInByZXBlbmRfcGF0'</env>
      <env name="__LMOD_STACK_FC">'Z2ZvcnRyYW4='</env>
      <env name="__LMOD_REF_COUNT_XDG_DATA_DIRS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share:1;/usr/local/share:1;/usr/share:1'</env>
      <env name="__LMOD_STACK_CPP">'Y3Bw'</env>
      <env name="EBVERSIONLLVM">'19.1.7'</env>
      <env name="LASTCOMPILER">'GCCcore'</env>
      <env name="R_MPI_ROOT">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0'</env>
      <env name="OMPI_MCA_memory">'^patcher'</env>
      <env name="PYTHONPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/python:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/easybuild/python'</env>
      <env name="__LMOD_REF_COUNT_PYTHONPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/python:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/easybuild/python:1'</env>
      <env name="EBDEVELZ3">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-Z3-4.13.0-easybuild-devel'</env>
      <env name="F77">'gfortran -fno-sign-zero'</env>
      <env name="ACLOCAL_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share/aclocal:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/aclocal:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/aclocal'</env>
      <env name="EBVERSIONGOMPI">'2024a'</env>
      <env name="ASAN_SYMBOLIZER_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/bin/llvm-symbolizer'</env>
      <env name="EBDEVELLIBPCIACCESS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-libpciaccess-0.18.1-easybuild-devel'</env>
      <env name="LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:/home/ss540294/bin/lib'</env>
      <env name="__LMOD_STACK_FLAGS_FAST">'LU8zIC1mZmFzdC1tYXRoIC1tdHVuZT1uYXRpdmU='</env>
      <env name="LASTMPI">'OpenMPI'</env>
      <env name="EBDEVELUCX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-UCX-1.16.0-easybuild-devel'</env>
      <env name="LOADEDMODULES">'GCCcore/13.3.0:zlib/1.3.1:binutils/2.42:GCC/13.3.0:numactl/2.0.18:XZ/5.4.5:libxml2/2.12.7:libpciaccess/0.18.1:hwloc/2.10.0:OpenSSL/3:libevent/2.1.12:UCX/1.16.0:PMIx/5.0.2:PRRTE/3.0.5:UCC/1.3.0:OpenMPI/5.0.3:gompi/2024a:ncurses/6.5:bzip2/1.0.8:libreadline/8.2:Tcl/8.6.14:SQLite/3.45.3:libffi/3.4.5:Python/3.12.3:GMP/6.3.0:Z3/4.13.0:LLVM/19.1.7:cURL/8.7.1:libarchive/3.7.4:CMake/3.29.3'</env>
      <env name="EBDEVELUCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-UCC-1.3.0-easybuild-devel'</env>
      <env name="OMPI_CC">'clang'</env>
      <env name="SHLVL">'4'</env>
      <env name="_ModuleTable012_">'d3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvUE1JeC81LjAuMi5sdWEiLApmdWxsTmFtZSA9ICJQTUl4LzUuMC4yIiwKbG9hZE9yZGVyID0gMTMsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiUE1JeC81LjAuMiIsCndWID0gIjAwMDAwMDAwNS4wMDAwMDAwMDAuMDAwMDAwMDAyLip6ZmluYWwiLAp9LApQUlJURSA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29y'</env>
      <env name="OMPI_MCA_hwloc_base_report_bindings">'0'</env>
      <env name="_ModuleTable006_">'LApzdGFja0RlcHRoID0gMiwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIkdDQ2NvcmUvMTMuMy4wIiwKd1YgPSAiczAwMDAwMDEzLjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKR01QID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9HTVAvNi4zLjAubHVhIiwKZnVsbE5hbWUgPSAiR01QLzYuMy4wIiwKbG9hZE9yZGVyID0gMjUsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiR01QLzYuMy4wIiwKd1YgPSAiMDAwMDAwMDA2LjAwMDAw'</env>
      <env name="_ModuleTable026_">'d1YgPSAiMDAwMDAwMDAyLjAwMDAwMDAwMS4wMDAwMDAwMTIuKnpmaW5hbCIsCn0sCmxpYmZmaSA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvbGliZmZpLzMuNC41Lmx1YSIsCmZ1bGxOYW1lID0gImxpYmZmaS8zLjQuNSIsCmxvYWRPcmRlciA9IDIzLApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImxpYmZmaS8zLjQuNSIsCndWID0gIjAwMDAwMDAwMy4wMDAwMDAwMDQuMDAwMDAwMDA1Lip6ZmluYWwiLAp9LApsaWJwY2lhY2Nlc3MgPSB7CmZuID0gIi9jdm1mcy9z'</env>
      <env name="PMIX_MCA_gds">'hash'</env>
      <env name="EBDEVELNUMACTL">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-numactl-2.0.18-easybuild-devel'</env>
      <env name="_ModuleTable033_">'eDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvcmUiLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9NUEkvaW50ZWwvMjAyNC4yLjAvaW1waS8yMDIxLjEzLjAiCiwgIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvaW50ZWwvMjAyNC4yLjAiLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9MTFZNLzE5LjEuNyIKLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9NUEkvR0NDLzEzLjMuMC9PcGVuTVBJLzUuMC4zIiwgIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxl'</env>
      <env name="__LMOD_STACK_FLAGS_RPATH">'LVdsLC1ycGF0aD0vY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9zb2Z0d2FyZS9HQ0Njb3JlLzEzLjMuMC9saWI2NA=='</env>
      <env name="_ModuleTable017_">'MTMuMy4wL1VDWC8xLjE2LjAubHVhIiwKZnVsbE5hbWUgPSAiVUNYLzEuMTYuMCIsCmxvYWRPcmRlciA9IDEyLApwcm9wVCA9IHt9LApyZWZfY291bnQgPSAxLApzdGFja0RlcHRoID0gMiwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIlVDWC8xLjE2LjAiLAp3ViA9ICIwMDAwMDAwMDEuMDAwMDAwMDE2Lip6ZmluYWwiLAp9LApYWiA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvWFovNS40LjUubHVhIiwKZnVsbE5hbWUgPSAiWFovNS40LjUiLApsb2FkT3JkZXIgPSA2LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0g'</env>
      <env name="EBROOTUCX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0'</env>
      <env name="EBDEVELHWLOC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-hwloc-2.10.0-easybuild-devel'</env>
      <env name="_ModuleTable009_">'c3M1NDAyOTQvLm1vZHVsZXNcIikiLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC9tb2R1bGVzXCIpIiwKfSwKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvTExWTS8xOS4xLjcubHVhIiwKZnVsbE5hbWUgPSAiTExWTS8xOS4xLjciLApsb2FkT3JkZXIgPSAyNywKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9IDAsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJMTFZNLzE5LjEuNyIsCndWID0gIjAwMDAwMDAxOS4wMDAwMDAwMDEuMDAwMDAwMDA3Lip6ZmluYWwiLAp9LApPcGVuTVBJID0g'</env>
      <env name="EBROOTUCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0'</env>
      <env name="__LMOD_REF_COUNT_MANPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share/man:1;/usr/local_host/man:1;/usr/local_rwth/man:1;/usr/man:1;/usr/share/man:1;/usr/local/man:1;/usr/local/share/man:1;/opt/slurm/current/share/man:1'</env>
      <env name="EBDEVELGMP">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-GMP-6.3.0-easybuild-devel'</env>
      <env name="_ModuleTable034_">'cy9hbGwvQ29tcGlsZXIvR0NDLzEzLjMuMCIKLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMCIsICIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL0NvcmUiLCAiL2hvbWUvcnd0aDEyNjkvbW9kdWxlcyIsICIvaG9tZS9zczU0MDI5NC8ubW9kdWxlcyIsICIvd29yay9zczU0MDI5NC9tb2R1bGVzIiwKfSwKc3lzdGVtQmFzZU1QQVRIID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvcmUiLAp9Cg=='</env>
      <env name="_ModuleTable031_">'aWIgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL3psaWIvMS4zLjEubHVhIiwKZnVsbE5hbWUgPSAiemxpYi8xLjMuMSIsCmxvYWRPcmRlciA9IDIsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAzLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiemxpYi8xLjMuMSIsCndWID0gIjAwMDAwMDAwMS4wMDAwMDAwMDMuMDAwMDAwMDAxLip6ZmluYWwiLAp9LAp9LAptcGF0aEEgPSB7CiIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2Fs'</env>
      <env name="__LMOD_STACK_FLAGS_OFFLOAD_OPENMP">'LWZvcGVubXA='</env>
      <env name="_ModuleTable001_">'X01vZHVsZVRhYmxlXyA9IHsKTVR2ZXJzaW9uID0gMywKY19yZWJ1aWxkVGltZSA9IGZhbHNlLApjX3Nob3J0VGltZSA9IGZhbHNlLApkZXB0aFQgPSB7fSwKZmFtaWx5ID0gewptcGkgPSAiT3Blbk1QSSIsCn0sCm1UID0gewpDTWFrZSA9IHsKYWN0aW9uQSA9IHsKImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9MTFZNLzE5LjEuN1wiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL01QSS9HQ0MvMTMuMy4wL09wZW5NUEkvNS4wLjNcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFU'</env>
      <env name="_ModuleTable025_">'IDEsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJsaWJhcmNoaXZlLzMuNy40IiwKd1YgPSAiMDAwMDAwMDAzLjAwMDAwMDAwNy4wMDAwMDAwMDQuKnpmaW5hbCIsCn0sCmxpYmV2ZW50ID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9saWJldmVudC8yLjEuMTIubHVhIiwKZnVsbE5hbWUgPSAibGliZXZlbnQvMi4xLjEyIiwKbG9hZE9yZGVyID0gMTEsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAibGliZXZlbnQvMi4xLjEyIiwK'</env>
      <env name="LD_LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/lib64:/home/ss540294/opt/lib:/home/ss540294/bin/lib:/home/ss540294/jack/usr/lib64'</env>
      <env name="__LMOD_STACK_FLAGS_RUNTIME_LINKER">'LVdsLC1ycGF0aD0='</env>
      <env name="_ModuleTable014_">'IDI0LApwcm9wVCA9IHt9LApyZWZfY291bnQgPSAxLApzdGFja0RlcHRoID0gMiwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIlB5dGhvbi8zLjEyLjMiLAp3ViA9ICIwMDAwMDAwMDMuMDAwMDAwMDEyLjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKU1FMaXRlID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9TUUxpdGUvMy40NS4zLmx1YSIsCmZ1bGxOYW1lID0gIlNRTGl0ZS8zLjQ1LjMiLApsb2FkT3JkZXIgPSAyMiwKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9IDMsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9'</env>
      <env name="_ModuleTable004_">'aChcIk1PRFVMRVBBVEhcIixcIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQy8xMy4zLjBcIikiLAp9LApmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db3JlL0dDQy8xMy4zLjAubHVhIiwKZnVsbE5hbWUgPSAiR0NDLzEzLjMuMCIsCmxvYWRPcmRlciA9IDQsCnByb3BUID0gewp0eXBlXyA9IHsKdG9vbGNoYWluID0gMSwKfSwKfSwKc3RhY2tEZXB0aCA9IDEsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJHQ0MvMTMuMy4wIiwKd1YgPSAiczAwMDAw'</env>
      <env name="LMOD_FAMILY_MPI_VERSION">'5.0.3'</env>
      <env name="_ModuleTable020_">'cy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9iemlwMi8xLjAuOC5sdWEiLApmdWxsTmFtZSA9ICJiemlwMi8xLjAuOCIsCmxvYWRPcmRlciA9IDE5LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImJ6aXAyLzEuMC44IiwKd1YgPSAiMDAwMDAwMDAxLjAwMDAwMDAwMC4wMDAwMDAwMDguKnpmaW5hbCIsCn0sCmNVUkwgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2NVUkwvOC43LjEubHVhIiwKZnVsbE5hbWUgPSAiY1VSTC84LjcuMSIsCmxvYWRP'</env>
      <env name="LMOD_FAMILY_MPI">'OpenMPI'</env>
      <env name="FC">'gfortran'</env>
      <env name="__LMOD_STACK_CXX">'Zysr'</env>
      <env name="EBVERSIONPMIX">'5.0.2'</env>
      <env name="SLURM_MPI_TYPE">'pmix'</env>
      <env name="__LMOD_STACK_CC">'Z2Nj'</env>
      <env name="OBJC">'gcc'</env>
      <env name="XDG_DATA_DIRS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share:/usr/local/share:/usr/share'</env>
      <env name="__LMOD_STACK_MPIFC">'bXBpZm9ydA=='</env>
      <env name="EBVERSIONLIBXML2">'2.12.7'</env>
      <env name="PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/sbin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/bin:/home/ss540294/.local/lcov-2.3.1/bin:/home/ss540294/software/stress/usr/bin:/home/ss540294/software/ccache/bin:/home/ss540294/.local/bin:/home/ss540294/software/mpiP/bin:/home/ss540294/software/git/bin:/home/ss540294/htop/bin:/home/ss540294/nvim-linux-x86_64/bin:/rwthfs/rz/cluster/home/ss540294/.vscode-server/cli/servers/Stable-cb0c47c0cfaad0757385834bd89d410c78a856c0/server/bin/remote-cli:/usr/local_host/bin:/usr/local_host/sbin:/usr/local_rwth/bin:/usr/local_rwth/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/opt/singularity/bin:/usr/local/bin:/usr/local/sbin:/opt/slurm/current/sbin:/opt/slurm/current/bin:/home/ss540294/dotfiles/tools/diff-so-fancy:/home/ss540294/dotfiles/zsh/plugins/fzf/bin:/home/ss540294/.vscode-server/extensions/ms-python.debugpy-2025.10.0-linux-x64/bundled/scripts/noConfigScripts:/home/ss540294/.vscode-server/data/User/globalStorage/github.copilot-chat/debugCommand'</env>
      <env name="EBROOTLIBEVENT">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0'</env>
      <env name="MODULEPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/LLVM/19.1.7:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCC/13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core:/work/ss540294/.local/easybuild/modules/all/MPI/intel/2024.2.0/impi/2021.13.0:/work/ss540294/.local/easybuild/modules/all/Compiler/intel/2024.2.0:/work/ss540294/.local/easybuild/modules/all/Compiler/LLVM/19.1.7:/work/ss540294/.local/easybuild/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:/work/ss540294/.local/easybuild/modules/all/Compiler/GCC/13.3.0:/work/ss540294/.local/easybuild/modules/all/Compiler/GCCcore/13.3.0:/work/ss540294/.local/easybuild/modules/all/Core:/home/rwth1269/modules:/home/ss540294/.modules:/work/ss540294/modules'</env>
      <env name="CC">'clang'</env>
      <env name="_LMFILES_">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/GCCcore/13.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/zlib/1.3.1.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/binutils/2.42.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/GCC/13.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/numactl/2.0.18.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/XZ/5.4.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libxml2/2.12.7.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libpciaccess/0.18.1.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/hwloc/2.10.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/OpenSSL/3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libevent/2.1.12.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/UCX/1.16.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/PMIx/5.0.2.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/PRRTE/3.0.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/UCC/1.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCC/13.3.0/OpenMPI/5.0.3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/gompi/2024a.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/ncurses/6.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/bzip2/1.0.8.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libreadline/8.2.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/Tcl/8.6.14.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/SQLite/3.45.3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libffi/3.4.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/Python/3.12.3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/GMP/6.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/Z3/4.13.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/LLVM/19.1.7.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/cURL/8.7.1.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libarchive/3.7.4.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/CMake/3.29.3.lua'</env>
      <env name="_ModuleTable028_">'ZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvbGlicmVhZGxpbmUvOC4yLmx1YSIsCmZ1bGxOYW1lID0gImxpYnJlYWRsaW5lLzguMiIsCmxvYWRPcmRlciA9IDIwLApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImxpYnJlYWRsaW5lLzguMiIsCndWID0gIjAwMDAwMDAwOC4wMDAwMDAwMDIuKnpmaW5hbCIsCn0sCmxpYnhtbDIgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2xpYnhtbDIvMi4xMi43Lmx1YSIsCmZ1bGxOYW1lID0gImxpYnhtbDIv'</env>
      <env name="__LMOD_STACK_MPICC">'bXBpY2M='</env>
      <env name="FLAGS_FREE">'-ffree-form'</env>
      <env name="EBDEVELPMIX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-PMIx-5.0.2-easybuild-devel'</env>
      <env name="OMPI_CXX">'clang++'</env>
      <env name="__LMOD_STACK_FLAGS_DEBUG">'LWc='</env>
      <env name="__LMOD_STACK_LASTMPI">'T3Blbk1QSQ=='</env>
      <env name="__LMOD_REF_COUNT_LD_LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/lib64:1;/home/ss540294/opt/lib:2;/home/ss540294/bin/lib:2;/home/ss540294/jack/usr/lib64:2'</env>
      <env name="EBDEVELLIBXML2">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-libxml2-2.12.7-easybuild-devel'</env>
      <env name="_ModuleTable019_">'IiwKfSwKYmludXRpbHMgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2JpbnV0aWxzLzIuNDIubHVhIiwKZnVsbE5hbWUgPSAiYmludXRpbHMvMi40MiIsCmxvYWRPcmRlciA9IDMsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiYmludXRpbHMvMi40MiIsCndWID0gIjAwMDAwMDAwMi4wMDAwMDAwNDIuKnpmaW5hbCIsCn0sCmJ6aXAyID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlk'</env>
      <env name="CPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages/z3/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include/python3.12:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include/libxml2:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/include'</env>
      <env name="EBVERSIONLIBPCIACCESS">'0.18.1'</env>
      <env name="EBROOTLLVM">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0'</env>
      <env name="RWTH_HPC_FAMILY_MPI_VERSION">'5.0.3'</env>
      <env name="EBDEVELLLVM">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-LLVM-19.1.7-easybuild-devel'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
      <nonenv name="EBROOTIMKL"/>
      <nonenv name="TBBROOT"/>
      <nonenv name="FLAGS_intel_compilers_DEBUG"/>
      <nonenv name="ONEAPI_ROOT"/>
      <nonenv name="I_MPI_FABRICS"/>
      <nonenv name="FLAGS_intel_compilers_FAST_NO_FPOPT"/>
      <nonenv name="EBDEVELHTOP"/>
      <nonenv name="FPGA_VARS_DIR"/>
      <nonenv name="I_MPI_CC"/>
      <nonenv name="I_MPI_ROOT"/>
      <nonenv name="EBVERSIONIMPI"/>
      <nonenv name="MPI_NAME"/>
      <nonenv name="I_MPI_JOB_SIGNAL_PROPAGATION"/>
      <nonenv name="FI_PROVIDER_PATH"/>
      <nonenv name="DIAGUTIL_PATH"/>
      <nonenv name="FLAGS_intel_compilers_OPENMP"/>
      <nonenv name="EBROOTIMPI"/>
      <nonenv name="EBDEVELIMPI"/>
      <nonenv name="EBROOTINTELMINCOMPILERS"/>
      <nonenv name="intel_compilers_FC"/>
      <nonenv name="EBDEVELIMKL"/>
      <nonenv name="EBROOTIMKLMINFFTW"/>
      <nonenv name="FLEXIBLAS_LIBRARY_PATH"/>
      <nonenv name="FLAGS_intel_compilers_RUNTIME_LINKER"/>
      <nonenv name="EBVERSIONINTEL"/>
      <nonenv name="GDB_INFO"/>
      <nonenv name="EBVERSIONINTELMINCOMPILERS"/>
      <nonenv name="FLAGS_intel_compilers_ARCH64"/>
      <nonenv name="__LMOD_REF_COUNT_INFOPATH"/>
      <nonenv name="EBVERSIONIMKLMINFFTW"/>
      <nonenv name="EBVERSIONIMKL"/>
      <nonenv name="FLAGS_intel_compilers_PIC"/>
      <nonenv name="EBDEVELIMKLMINFFTW"/>
      <nonenv name="__LMOD_REF_COUNT_DIAGUTIL_PATH"/>
      <nonenv name="FLAGS_intel_compilers_FAST"/>
      <nonenv name="__LMOD_REF_COUNT_NLSPATH"/>
      <nonenv name="CMPLR_ROOT"/>
      <nonenv name="INTELARCH"/>
      <nonenv name="INFOPATH"/>
      <nonenv name="I_MPI_CXX"/>
      <nonenv name="intel_compilers_CXX"/>
      <nonenv name="__LMOD_REF_COUNT_FI_PROVIDER_PATH"/>
      <nonenv name="intel_compilers_CC"/>
      <nonenv name="MKL_EXAMPLES"/>
      <nonenv name="FLAGS_AUTOPAR"/>
      <nonenv name="intel_compilers_F77"/>
      <nonenv name="I_MPI_PIN"/>
      <nonenv name="OCL_ICD_FILENAMES"/>
      <nonenv name="EBROOTHTOP"/>
      <nonenv name="FLAGS_intel_compilers_RPATH"/>
      <nonenv name="CLASSPATH"/>
      <nonenv name="INTELFPGAOCLSDKROOT"/>
      <nonenv name="EBDEVELINTEL"/>
      <nonenv name="MKLROOT"/>
      <nonenv name="NLSPATH"/>
      <nonenv name="EBVERSIONHTOP"/>
      <nonenv name="EBROOTINTEL"/>
      <nonenv name="INTEL_PYTHONHOME"/>
      <nonenv name="FLAGS_intel_compilers_AUTOPAR"/>
      <nonenv name="FLAGS_intel_compilers_FREE"/>
      <nonenv name="__LMOD_REF_COUNT_FLEXIBLAS_LIBRARY_PATH"/>
      <nonenv name="EBDEVELINTELMINCOMPILERS"/>
      <nonenv name="intel_compilers_ROOT"/>
      <nonenv name="EBDEVELJUBE"/>
      <nonenv name="EBROOTJUBE"/>
      <nonenv name="EBVERSIONJUBE"/>
      <nonenv name="__LMOD_REF_COUNT_JUBE_INCLUDE_PATH"/>
      <nonenv name="JUBE_INCLUDE_PATH"/>
    </environment>
  </workpackage>
  <workpackage id="5">
    <step iteration="0" cycle="0">compile</step>
    <parameterset>
      <parameter name="force_compilation" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="executable_full_name" type="string" separator="," duplicate="none" update_mode="use" mode="text">
        <value>${executable_name}${executable_extension}</value>
        <selection>lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="compile_preparation" type="string" separator="," duplicate="none" mode="text">
        <value>cd MPIRMA/${kernel_folder}</value>
      </parameter>
      <parameter name="compile_flags" type="string" separator=";" duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;parcoach&quot;: &quot;-g -Wl,-rpath=${parcoach_install_folder}/lib64 ${parcoach_install_folder}/lib64/libParcoachCollDynamic_MPI_C.so ${parcoach_install_folder}/lib64/libParcoachRMADynamic_MPI_C.so&quot;,
         &quot;tsan&quot;: &quot;${must_stats_compile_flags} -g&quot;,
         &quot;tsan-opt&quot;: &quot;${must_stats_compile_flags} ${must_isl_compile_flags} -g --optimizations ${must_compile_opt}&quot;,
         &quot;tsan-cover&quot;: &quot;${must_stats_compile_flags} -g --tsan-json ${jube_wp_abspath}/compile_cover/contract_messages.json&quot;,
         &quot;isl&quot;: &quot;${must_stats_compile_flags} ${must_isl_compile_flags}&quot;}.get(&quot;${compile_mode}&quot;, 0)</value>
        <selection> -g</selection>
      </parameter>
      <parameter name="tsan_opt_extension" type="string" separator="," duplicate="none" mode="text">
        <value>.tsan-opt.${__tsan_opt_hash}</value>
        <selection>.tsan-opt.1a8f03679a975c693567ad1ab8b1222e</selection>
      </parameter>
      <parameter name="executable_extension" type="string" separator="," duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;parcoach&quot;: &quot;.pcoach&quot;,
         &quot;tsan&quot;: &quot;.tsan&quot;,
         &quot;tsan-opt&quot;: &quot;${tsan_opt_extension}&quot;,
         &quot;tsan-cover&quot;: &quot;.tsan-cover&quot;,
         &quot;isl&quot;: &quot;.isl&quot;}.get(&quot;${compile_mode}&quot;, 0)</value>
        <selection>.tsan</selection>
      </parameter>
      <parameter name="compile_target" type="string" separator="," duplicate="none" mode="text">
        <value>$executable_name</value>
        <selection>lulesh2.0</selection>
      </parameter>
      <parameter name="benchmark_build_dir" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${jube_benchmark_home}/executables/${__toolchain_module}/${__compiler_module}/${__mpi_module}/&quot; + (&quot;${RMA_target}&quot; if &quot;${RMA_target}&quot;.split() else &quot;Default&quot;)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/executables/gompi/2024a/llvm/19/${mpi_name}/${mpi_version}/${RMA_target}</selection>
      </parameter>
      <parameter name="do_compile" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_compilation} || [ ! -f &quot;${benchmark_build_dir}/${executable_full_name}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="compile_common_env_vars" type="string" separator="!NONE!" duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;:     &quot;MPICC='mpicc ${compile_flags}' MPICXX='mpicxx ${compile_flags}' MPIFC='mpifc ${compile_flags}'&quot;,
         &quot;parcoach&quot;: &quot;MPICC='${PARCOACHCC} --wrap-target mpicc ${compile_flags}' MPICXX='${PARCOACHCXX} --wrap-target mpicxx ${compile_flags}'&quot;,
         &quot;tsan&quot;:     &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;,
         &quot;tsan-opt&quot;: &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;,
         &quot;tsan-cover&quot;: &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;,
         &quot;isl&quot;:      &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;}.get(&quot;${compile_mode}&quot;, 'invalid-compile-mode')</value>
        <selection>MPICC=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc --wrap-target mpicc  -g&quot; MPICXX=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx --wrap-target mpicxx  -g&quot; MPIFC=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort --wrap-target mpif90  -g&quot;</selection>
      </parameter>
      <parameter name="compile_env_vars" type="string" separator="!NONE!" duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;CXX='${MUSTCXX}' CFLAGS='${compile_flags}' CXXFLAGS='${compile_flags}'&quot;,
         &quot;tsan-opt&quot;: &quot;CXX='${MUSTCXX}' CFLAGS='${compile_flags}' CXXFLAGS='${compile_flags}'&quot;,
         &quot;tsan-cover&quot;: &quot;CXX='${MUSTCXX}' CFLAGS='${compile_flags}' CXXFLAGS='${compile_flags}'&quot;,
         }.get(&quot;${compile_mode}&quot;, 0)</value>
        <selection>CXX='/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx' CFLAGS=' -g' CXXFLAGS=' -g'</selection>
      </parameter>
      <parameter name="compile_export" type="string" separator="!NONE!" duplicate="none" update_mode="use" mode="text">
        <value>for item in ${compile_common_env_vars} ${compile_env_vars}; do export &quot;$item&quot;; done</value>
        <selection>for item in MPICC=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc --wrap-target mpicc  -g&quot; MPICXX=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx --wrap-target mpicxx  -g&quot; MPIFC=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort --wrap-target mpif90  -g&quot; CXX='/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx' CFLAGS=' -g' CXXFLAGS=' -g'; do export &quot;$item&quot;; done</selection>
      </parameter>
      <parameter name="time_output_file" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>${jube_wp_abspath}/time.out</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out</selection>
      </parameter>
      <parameter name="time_measure_command" type="string" separator="," duplicate="none" mode="text">
        <value>/usr/bin/time -p -o ${time_output_file}</value>
        <selection>/usr/bin/time -p -o /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out</selection>
      </parameter>
      <parameter name="executable_name" type="string" separator="," duplicate="none" mode="text">
        <value>lulesh2.0</value>
      </parameter>
      <parameter name="must_compile_opt" type="string" separator=";" duplicate="none" mode="python">
        <value>{&quot;tsan-opt&quot;: &quot;ALX1000,CLUSTER&quot;}.get(&quot;${compile_mode}&quot;, &quot;&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="__tsan_opt_hash" type="string" separator=";" duplicate="none" mode="shell">
        <value>echo -n &quot;$must_compile_opt $__must_hash&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>1a8f03679a975c693567ad1ab8b1222e</selection>
      </parameter>
      <parameter name="modulenames_defaults" type="string" separator=";" duplicate="none" mode="text">
        <value>{
            &quot;gcc&quot;: &quot;gcc&quot;,
            &quot;clang&quot;: &quot;clang&quot;,
            &quot;intelmpi&quot;: &quot;intelmpi&quot;,
            &quot;cmake&quot;: &quot;cmake&quot;
        }</value>
      </parameter>
      <parameter name="modulenames_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{
            &quot;gcc&quot;: &quot;GCC&quot;,
            &quot;clang&quot;: &quot;Clang&quot;,
            &quot;Classic-Flang&quot;: &quot;Classic-Flang&quot;,
            &quot;intel&quot;: &quot;intel&quot;,
            &quot;intelmpi&quot;: &quot;iimpi&quot;,
            &quot;gompi&quot;: &quot;gompi&quot;,
            &quot;openmpi&quot; : &quot;openmpi&quot;,
            &quot;mpich&quot; : &quot;mpich&quot;,
            &quot;cmake&quot; : &quot;CMake&quot;
        }</value>
      </parameter>
      <parameter name="modulenames" type="string" separator=";" duplicate="none" mode="python">
        <value>{key:value for (key, value) in list(${modulenames_defaults}.items()) + list(${modulenames_updated}.items())}</value>
        <selection>{'gcc': 'GCC', 'clang': 'Clang', 'intelmpi': 'iimpi', 'cmake': 'CMake', 'Classic-Flang': 'Classic-Flang', 'intel': 'intel', 'gompi': 'gompi', 'openmpi': 'openmpi', 'mpich': 'mpich'}</selection>
      </parameter>
      <parameter name="modules" type="string" separator=";" duplicate="none" mode="python">
        <value>{
              &quot;gcc&quot;:                &quot;{0[gcc]}/11.3.0&quot;.format(${modulenames}),
              &quot;gcc/8.3.0&quot;:          &quot;{0[gcc]}/8.3.0&quot;.format(${modulenames}),
              &quot;gcc/9.3.0&quot;:          &quot;{0[gcc]}/9.3.0&quot;.format(${modulenames}),
              &quot;gcc/9.4.0&quot;:          &quot;{0[gcc]}/9.4.0&quot;.format(${modulenames}),
              &quot;gcc/10.2.0&quot;:         &quot;{0[gcc]}/10.2.0&quot;.format(${modulenames}),
              &quot;gcc/10.3.0&quot;:         &quot;{0[gcc]}/10.3.0&quot;.format(${modulenames}),
              &quot;gcc/11.2.0&quot;:         &quot;{0[gcc]}/11.2.0&quot;.format(${modulenames}),
              &quot;gcc/11.3.0&quot;:         &quot;{0[gcc]}/11.3.0&quot;.format(${modulenames}),
              &quot;clang&quot;:              &quot;{0[clang]}/13.0.1&quot;.format(${modulenames}),
              &quot;clang/13.0.1&quot;:       &quot;{0[clang]}/13.0.1&quot;.format(${modulenames}),
              &quot;clang/15.0.5&quot;:       &quot;{0[clang]}/15.0.5&quot;.format(${modulenames}),
              &quot;clang/16.0.6&quot;:       &quot;{0[clang]}/16.0.6&quot;.format(${modulenames}),
              &quot;Classic-Flang&quot;:      &quot;{0[Classic-Flang]}/16.0.4-c23&quot;.format(${modulenames}),
              &quot;Classic-Flang/16.0.4-c23&quot;:  &quot;{0[Classic-Flang]}/16.0.4-c23&quot;.format(${modulenames}),
              &quot;Classic-Flang/16.0.4-c23-impi&quot;:  &quot;{0[Classic-Flang]}/16.0.4-c23-impi&quot;.format(${modulenames}),
              &quot;intel&quot;       :       &quot;{0[intel]}/2022a&quot;.format(${modulenames}),
              &quot;intel/2019b&quot; :       &quot;{0[intel]}/2019b&quot;.format(${modulenames}),
              &quot;intel/2020a&quot; :       &quot;{0[intel]}/2020a&quot;.format(${modulenames}),
              &quot;intel/2020b&quot; :       &quot;{0[intel]}/2020b&quot;.format(${modulenames}),
              &quot;intel/2021a&quot; :       &quot;{0[intel]}/2021a&quot;.format(${modulenames}),
              &quot;intel/2021b&quot; :       &quot;{0[intel]}/2021b&quot;.format(${modulenames}),
              &quot;intel/2022a&quot; :       &quot;{0[intel]}/2022a&quot;.format(${modulenames}),
              &quot;intel/2022b&quot; :       &quot;{0[intel]}/2022b&quot;.format(${modulenames}),
              &quot;intel/2023a&quot; :       &quot;{0[intel]}/2023a&quot;.format(${modulenames}),
              &quot;gompi/2020a&quot; :       &quot;{0[gompi]}/2020a&quot;.format(${modulenames}),
              &quot;gompi/2020b&quot; :       &quot;{0[gompi]}/2020b&quot;.format(${modulenames}),
              &quot;gompi/2021a&quot; :       &quot;{0[gompi]}/2021a&quot;.format(${modulenames}),
              &quot;gompi/2021b&quot; :       &quot;{0[gompi]}/2021b&quot;.format(${modulenames}),
              &quot;gompi/2022a&quot; :       &quot;{0[gompi]}/2022a&quot;.format(${modulenames}),
              &quot;gompi/2022b&quot; :       &quot;{0[gompi]}/2022b&quot;.format(${modulenames}),
              &quot;gompi/2023a&quot; :       &quot;{0[gompi]}/2023a&quot;.format(${modulenames}),
              &quot;gompi/2024a&quot; :       &quot;{0[gompi]}/2024a&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2022a&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2022b&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2023a&quot;.format(${modulenames}),
              &quot;openmpi&quot;:            &quot;{0[openmpi]}/4.1.4&quot;.format(${modulenames}),
              &quot;openmpi/4.0.3&quot;:      &quot;{0[openmpi]}/4.0.3&quot;.format(${modulenames}),
              &quot;openmpi/4.0.5&quot;:      &quot;{0[openmpi]}/4.0.5&quot;.format(${modulenames}),
              &quot;openmpi/4.1.1&quot;:      &quot;{0[openmpi]}/4.1.1&quot;.format(${modulenames}),
              &quot;openmpi/4.1.4&quot;:      &quot;{0[openmpi]}/4.1.4&quot;.format(${modulenames}),
              &quot;openmpi/4.1.5&quot;:      &quot;{0[openmpi]}/4.1.5&quot;.format(${modulenames}),
              &quot;openmpi/4.1.6&quot;:      &quot;{0[openmpi]}/4.1.6&quot;.format(${modulenames}),
              &quot;openmpi/4.1.6-ucx16&quot;:      &quot;{0[openmpi]}/4.1.6-ucx16&quot;.format(${modulenames}),
              &quot;mpich&quot;:              &quot;{0[mpich]}/4.1.2&quot;.format(${modulenames}),
              &quot;mpich/4.1.2&quot;:        &quot;{0[mpich]}/4.1.2&quot;.format(${modulenames}),
              &quot;cmake&quot;:               &quot;{0[cmake]}/3.23.1&quot;.format(${modulenames}),
              &quot;cmake/3.21.1&quot;:        &quot;{0[cmake]}/3.21.1&quot;.format(${modulenames}),
              &quot;cmake/3.22.1&quot;:        &quot;{0[cmake]}/3.22.1&quot;.format(${modulenames}),
              &quot;cmake/3.23.1&quot;:        &quot;{0[cmake]}/3.23.1&quot;.format(${modulenames}),
              &quot;cmake/3.24.3&quot;:        &quot;{0[cmake]}/3.24.3&quot;.format(${modulenames}),
              &quot;cmake/3.26.3&quot;:        &quot;{0[cmake]}/3.26.3&quot;.format(${modulenames}),
              &quot;cmake/3.29.3&quot;:        &quot;{0[cmake]}/3.29.3&quot;.format(${modulenames})    
          }</value>
        <selection>{'gcc': 'GCC/11.3.0', 'gcc/8.3.0': 'GCC/8.3.0', 'gcc/9.3.0': 'GCC/9.3.0', 'gcc/9.4.0': 'GCC/9.4.0', 'gcc/10.2.0': 'GCC/10.2.0', 'gcc/10.3.0': 'GCC/10.3.0', 'gcc/11.2.0': 'GCC/11.2.0', 'gcc/11.3.0': 'GCC/11.3.0', 'clang': 'Clang/13.0.1', 'clang/13.0.1': 'Clang/13.0.1', 'clang/15.0.5': 'Clang/15.0.5', 'clang/16.0.6': 'Clang/16.0.6', 'Classic-Flang': 'Classic-Flang/16.0.4-c23', 'Classic-Flang/16.0.4-c23': 'Classic-Flang/16.0.4-c23', 'Classic-Flang/16.0.4-c23-impi': 'Classic-Flang/16.0.4-c23-impi', 'intel': 'intel/2022a', 'intel/2019b': 'intel/2019b', 'intel/2020a': 'intel/2020a', 'intel/2020b': 'intel/2020b', 'intel/2021a': 'intel/2021a', 'intel/2021b': 'intel/2021b', 'intel/2022a': 'intel/2022a', 'intel/2022b': 'intel/2022b', 'intel/2023a': 'intel/2023a', 'gompi/2020a': 'gompi/2020a', 'gompi/2020b': 'gompi/2020b', 'gompi/2021a': 'gompi/2021a', 'gompi/2021b': 'gompi/2021b', 'gompi/2022a': 'gompi/2022a', 'gompi/2022b': 'gompi/2022b', 'gompi/2023a': 'gompi/2023a', 'gompi/2024a': 'gompi/2024a', 'intelmpi': 'iimpi/2023a', 'openmpi': 'openmpi/4.1.4', 'openmpi/4.0.3': 'openmpi/4.0.3', 'openmpi/4.0.5': 'openmpi/4.0.5', 'openmpi/4.1.1': 'openmpi/4.1.1', 'openmpi/4.1.4': 'openmpi/4.1.4', 'openmpi/4.1.5': 'openmpi/4.1.5', 'openmpi/4.1.6': 'openmpi/4.1.6', 'openmpi/4.1.6-ucx16': 'openmpi/4.1.6-ucx16', 'mpich': 'mpich/4.1.2', 'mpich/4.1.2': 'mpich/4.1.2', 'cmake': 'CMake/3.23.1', 'cmake/3.21.1': 'CMake/3.21.1', 'cmake/3.22.1': 'CMake/3.22.1', 'cmake/3.23.1': 'CMake/3.23.1', 'cmake/3.24.3': 'CMake/3.24.3', 'cmake/3.26.3': 'CMake/3.26.3', 'cmake/3.29.3': 'CMake/3.29.3'}</selection>
      </parameter>
      <parameter name="prerequisite_modules_dict" type="string" separator=";" duplicate="none" mode="python">
        <value>{
            &quot;clang/13.0.1&quot;:       [&quot;GCCcore/.11.3.0&quot;, &quot;GCC/11.3.0&quot;],
            &quot;clang/15.0.5&quot;:       [&quot;GCCcore/.11.3.0&quot;, &quot;GCC/11.3.0&quot;],
            &quot;clang/16.0.6&quot;:       [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;Classic-Flang/16.0.4-c23&quot;:  [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;Classic-Flang/16.0.4-c23-impi&quot;:  [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;intelmpi/2021.6.0&quot;:  [&quot;intel-compilers/2022.1.0&quot;],
            &quot;openmpi/4.0.3&quot;:      [&quot;GCC/9.3.0&quot;],
            &quot;openmpi/4.0.5&quot;:      [&quot;GCC/10.2.0&quot;],
            &quot;openmpi/4.1.1&quot;:      [&quot;GCC/11.2.0&quot;],
            &quot;openmpi/4.1.4&quot;:      [&quot;GCC/11.3.0&quot;],
            &quot;openmpi/4.1.5&quot;:      [&quot;GCC/12.3.0&quot;],
            &quot;openmpi/4.1.6&quot;:      [&quot;GCC/12.3.0&quot;],
            &quot;openmpi/4.1.6-ucx16&quot;:      [&quot;GCC/12.3.0&quot;],
        }</value>
        <selection>{'clang/13.0.1': ['GCCcore/.11.3.0', 'GCC/11.3.0'], 'clang/15.0.5': ['GCCcore/.11.3.0', 'GCC/11.3.0'], 'clang/16.0.6': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'Classic-Flang/16.0.4-c23': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'Classic-Flang/16.0.4-c23-impi': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'intelmpi/2021.6.0': ['intel-compilers/2022.1.0'], 'openmpi/4.0.3': ['GCC/9.3.0'], 'openmpi/4.0.5': ['GCC/10.2.0'], 'openmpi/4.1.1': ['GCC/11.2.0'], 'openmpi/4.1.4': ['GCC/11.3.0'], 'openmpi/4.1.5': ['GCC/12.3.0'], 'openmpi/4.1.6': ['GCC/12.3.0'], 'openmpi/4.1.6-ucx16': ['GCC/12.3.0']}</selection>
      </parameter>
      <parameter name="cmake_version" type="string" separator="," duplicate="none" mode="text">
        <value>3.29.3</value>
      </parameter>
      <parameter name="cmake_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;cmake/${cmake_version}&quot;) if $modules.get(&quot;cmake/${cmake_version}&quot;) else $modules.get(&quot;cmake&quot;, &quot;cmake/${cmake_version}&quot;)</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="prerequisite_toolchain_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__toolchain_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_compiler_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__compiler_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_mpi_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__mpi_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_modules" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="toolchain_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${toolchain_name}/${toolchain_version}&quot;, $modules.get(&quot;${toolchain_name}&quot;, &quot;${toolchain_name}&quot; + (&quot;/${toolchain_version}&quot; if &quot;${toolchain_version}&quot; else &quot;&quot;)))</value>
        <selection>gompi/2024a</selection>
      </parameter>
      <parameter name="compiler_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${compiler_name}/${compiler_version}&quot;, $modules.get(&quot;${compiler_name}&quot;, &quot;${compiler_name}&quot; + (&quot;/${compiler_version}&quot; if &quot;${compiler_version}&quot; else &quot;&quot;)))</value>
        <selection>LLVM/19</selection>
      </parameter>
      <parameter name="mpi_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${mpi_name}/${mpi_version}&quot;, $modules.get(&quot;${mpi_name}&quot;, &quot;${mpi_name}&quot; + (&quot;/${mpi_version}&quot; if &quot;${mpi_version}&quot; else &quot;&quot;)))</value>
        <selection>${mpi_name}/${mpi_version}</selection>
      </parameter>
      <parameter name="required_modules" type="string" separator="," duplicate="none" mode="text">
        <value>${prerequisite_modules} ${toolchain_module} ${mpi_module} ${compiler_module} ${cmake_module} ${must_prerequisite_modules}</value>
        <selection> gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}</selection>
      </parameter>
      <parameter name="use_modules" type="string" separator="," duplicate="none" mode="text">
        <value>/home/rwth1269/modules</value>
      </parameter>
      <parameter name="load_modules" type="string" separator="," duplicate="none" mode="text">
        <value>module use /home/rwth1269/modules/; module purge; for path in ${use_modules}; do module use $path; done; for modulename in ${required_modules}; do module load $modulename; done</value>
        <selection>module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done</selection>
      </parameter>
      <parameter name="__toolchain_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${toolchain_module}&quot;.lower()</value>
        <selection>gompi/2024a</selection>
      </parameter>
      <parameter name="__compiler_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${compiler_module}&quot;.lower()</value>
        <selection>llvm/19</selection>
      </parameter>
      <parameter name="__mpi_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${mpi_module}&quot;.lower()</value>
        <selection>${mpi_name}/${mpi_version}</selection>
      </parameter>
      <parameter name="export_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{
              (&quot;clang&quot;, &quot;intelmpi&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;intelmpi&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;clang&quot;, &quot;openmpi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;, &quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;clang&quot;, &quot;intel&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;intel&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;clang&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;],
              (&quot;Classic-Flang&quot;, &quot;mpich&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;openmpi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;OMPI_FC=flang&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;,&quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;Classic-Flang&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;OMPI_FC=flang&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;,&quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;LLVM&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;CC=clang&quot;, &quot;CXX=clang++&quot;, &quot;PMIX_MCA_gds=hash&quot;, &quot;OMPI_MCA_memory=^patcher&quot;],
          }</value>
      </parameter>
      <parameter name="compiler_mpi_export" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join($export_dict.get((&quot;${compiler_name}&quot;,&quot;${mpi_name}&quot;), []))</value>
        <selection/>
      </parameter>
      <parameter name="compiler_toolchain_export" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join($export_dict.get((&quot;${compiler_name}&quot;,&quot;${toolchain_name}&quot;), []))</value>
        <selection>OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher</selection>
      </parameter>
      <parameter name="required_exports" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${compiler_mpi_export} ${compiler_toolchain_export} ${openmp_export} ${parcoach_export}</value>
        <selection> OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}</selection>
      </parameter>
      <parameter name="export" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>for item in ${required_exports}; do export &quot;$item&quot;; done</value>
        <selection>for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done</selection>
      </parameter>
      <parameter name="toolchain_name" type="string" separator="," duplicate="none" mode="text">
        <value>gompi</value>
      </parameter>
      <parameter name="toolchain_version" type="string" separator="," duplicate="none" mode="text">
        <value>2024a</value>
      </parameter>
      <parameter name="compiler_name" type="string" separator="," duplicate="none" mode="text">
        <value>LLVM</value>
      </parameter>
      <parameter name="compiler_version" type="string" separator="," duplicate="none" mode="text">
        <value>19</value>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="compile_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,tsan,tsan-cover</value>
        <selection idx="1">tsan</selection>
      </parameter>
    </parameterset>
    <parents>2,3</parents>
    <iteration_siblings>5</iteration_siblings>
    <environment>
      <env name="__LMOD_STACK_OBJCXX">'Zysr'</env>
      <env name="EBVERSIONGMP">'6.3.0'</env>
      <env name="_ModuleTable016_">'b2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL1VDQy8xLjMuMC5sdWEiLApmdWxsTmFtZSA9ICJVQ0MvMS4zLjAiLApsb2FkT3JkZXIgPSAxNSwKcHJvcFQgPSB7fSwKcmVmX2NvdW50ID0gMSwKc3RhY2tEZXB0aCA9IDIsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJVQ0MvMS4zLjAiLAp3ViA9ICIwMDAwMDAwMDEuMDAwMDAwMDAzLip6ZmluYWwiLAp9LApVQ1ggPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUv'</env>
      <env name="_ModuleTable022_">'UEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMFwiKSIsICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9ob21lL3J3dGgxMjY5L21vZHVsZXNcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db3JlXCIpIiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2hvbWUvc3M1NDAyOTQvLm1vZHVsZXNcIikiLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC9tb2R1bGVzXCIpIiwKfSwKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4'</env>
      <env name="MPI_BINDIR">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/bin'</env>
      <env name="EBVERSIONOPENMPI">'5.0.3'</env>
      <env name="OBJCXX">'g++'</env>
      <env name="FLAGS_OFFLOAD_OPENMP">'-fopenmp'</env>
      <env name="EBROOTPMIX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0'</env>
      <env name="EBROOTGMP">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0'</env>
      <env name="_ModuleTable027_">'b2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2xpYnBjaWFjY2Vzcy8wLjE4LjEubHVhIiwKZnVsbE5hbWUgPSAibGlicGNpYWNjZXNzLzAuMTguMSIsCmxvYWRPcmRlciA9IDgsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAzLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAibGlicGNpYWNjZXNzLzAuMTguMSIsCndWID0gIjAwMDAwMDAwMC4wMDAwMDAwMTguMDAwMDAwMDAxLip6ZmluYWwiLAp9LApsaWJyZWFkbGluZSA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBp'</env>
      <env name="__LMOD_STACK_MPICXX">'bXBpY3h4'</env>
      <env name="FLAGS_RPATH">'-Wl,-rpath=/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/lib64'</env>
      <env name="FLAGS_OFFLOAD_OPENACC">'-fopenacc'</env>
      <env name="_ModuleTable032_">'bC9Db21waWxlci9MTFZNLzE5LjEuNyIKLCAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvTVBJL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuMyIKLCAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDLzEzLjMuMCIKLCAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAiCiwgIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkv'</env>
      <env name="PKG_CONFIG_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib/pkgconfig'</env>
      <env name="__LMOD_STACK_OBJC">'Z2Nj'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="__LMOD_STACK_FLAGS_OFFLOAD_OPENACC">'LWZvcGVuYWNj'</env>
      <env name="_ModuleTable011_">'cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJPcGVuTVBJLzUuMC4zIiwKd1YgPSAiczAwMDAwMDA1LjAwMDAwMDAwMC4wMDAwMDAwMDMuKnpmaW5hbCIsCn0sCk9wZW5TU0wgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvcmUvT3BlblNTTC8zLmx1YSIsCmZ1bGxOYW1lID0gIk9wZW5TU0wvMyIsCmxvYWRPcmRlciA9IDEwLApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIk9wZW5TU0wvMyIsCndWID0gIjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKUE1JeCA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5y'</env>
      <env name="_ModuleTable007_">'MDAwMy4qemZpbmFsIiwKfSwKTExWTSA9IHsKYWN0aW9uQSA9IHsKInByZXBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0xMVk0vMTkuMS43XCIpIgosICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvTExWTS8xOS4xLjdcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9NUEkvR0NDLzEzLjMuMC9PcGVuTVBJLzUuMC4zXCIpIgos'</env>
      <env name="EBROOTPRRTE">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0'</env>
      <env name="MPICC">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc --wrap-target mpicc  -g'</env>
      <env name="_ModuleTable002_">'SFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0MvMTMuMy4wXCIpIgosICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjBcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db3JlXCIpIiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2hvbWUvcnd0aDEyNjkvbW9kdWxlc1wiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvaG9tZS9zczU0MDI5NC8ubW9kdWxlc1wiKSIsICJh'</env>
      <env name="EBEXTSLISTZ3">'z3-solver-4.13.0.0'</env>
      <env name="__LMOD_REF_COUNT_MODULEPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/LLVM/19.1.7:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCC/13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core:1;/work/ss540294/.local/easybuild/modules/all/MPI/intel/2024.2.0/impi/2021.13.0:8;/work/ss540294/.local/easybuild/modules/all/Compiler/intel/2024.2.0:8;/work/ss540294/.local/easybuild/modules/all/Compiler/LLVM/19.1.7:2;/work/ss540294/.local/easybuild/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:3;/work/ss540294/.local/easybuild/modules/all/Compiler/GCC/13.3.0:3;/work/ss540294/.local/easybuild/modules/all/Compiler/GCCcore/13.3.0:11;/work/ss540294/.local/easybuild/modules/all/Core:11;/home/rwth1269/modules:5;/home/ss540294/.modules:6;/work/ss540294/modules:6'</env>
      <env name="CPP">'cpp'</env>
      <env name="__LMOD_STACK_FLAGS_OPENMP">'LWZvcGVubXA='</env>
      <env name="OMPI_MCA_btl">'^ofi,openib,tcp'</env>
      <env name="_ModuleTable005_">'MDEzLjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKR0NDY29yZSA9IHsKYWN0aW9uQSA9IHsKInByZXBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wXCIpIiwKfSwKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29yZS9HQ0Njb3JlLzEzLjMuMC5sdWEiLApmdWxsTmFtZSA9ICJHQ0Njb3JlLzEzLjMuMCIsCmxvYWRPcmRlciA9IDEsCnByb3BUID0gewp0eXBlXyA9IHsKY29tcGlsZXIgPSAxLAp9LAp9'</env>
      <env name="_ModuleTable021_">'cmRlciA9IDI4LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMSwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImNVUkwvOC43LjEiLAp3ViA9ICIwMDAwMDAwMDguMDAwMDAwMDA3LjAwMDAwMDAwMS4qemZpbmFsIiwKfSwKZ29tcGkgPSB7CmFjdGlvbkEgPSB7CiJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvTVBJL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuM1wiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQy8xMy4zLjBcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxF'</env>
      <env name="_ModuleTable030_">'dGl2ZSIsCnVzZXJOYW1lID0gIm5jdXJzZXMvNi41IiwKd1YgPSAiMDAwMDAwMDA2LjAwMDAwMDAwNS4qemZpbmFsIiwKfSwKbnVtYWN0bCA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvbnVtYWN0bC8yLjAuMTgubHVhIiwKZnVsbE5hbWUgPSAibnVtYWN0bC8yLjAuMTgiLApsb2FkT3JkZXIgPSA1LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIm51bWFjdGwvMi4wLjE4IiwKd1YgPSAiMDAwMDAwMDAyLjAwMDAwMDAwMC4wMDAwMDAwMTguKnpmaW5hbCIsCn0sCnps'</env>
      <env name="__LMOD_REF_COUNT_ACLOCAL_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share/aclocal:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/aclocal:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/aclocal:1'</env>
      <env name="EBROOTOPENMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0'</env>
      <env name="OMPI_MCA_btl_openib_ib_timeout">'24'</env>
      <env name="EBDEVELPRRTE">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-PRRTE-3.0.5-easybuild-devel'</env>
      <env name="OMPI_MCA_btl_openib_allow_ib">'1'</env>
      <env name="EBVERSIONUCX">'1.16.0'</env>
      <env name="EBVERSIONZ3">'4.13.0'</env>
      <env name="EBROOTLIBPCIACCESS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0'</env>
      <env name="EBVERSIONUCC">'1.3.0'</env>
      <env name="MPICXX">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx --wrap-target mpicxx  -g'</env>
      <env name="EBROOTHWLOC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0'</env>
      <env name="MPIFC">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort --wrap-target mpif90  -g'</env>
      <env name="EBDEVELGOMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/gompi/2024a/easybuild/Core-gompi-2024a-easybuild-devel'</env>
      <env name="EBVERSIONNUMACTL">'2.0.18'</env>
      <env name="EBROOTLIBXML2">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0'</env>
      <env name="EBVERSIONLIBEVENT">'2.1.12'</env>
      <env name="MANPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share/man:/usr/local_host/man:/usr/local_rwth/man:/usr/man:/usr/share/man:/usr/local/man:/usr/local/share/man:/opt/slurm/current/share/man'</env>
      <env name="__LMOD_STACK_FLAGS_FAST_NO_FPOPT">'LU8zIC1tdHVuZT1uYXRpdmU='</env>
      <env name="__LMOD_STACK_FLAGS_ARCH64">'LW02NA=='</env>
      <env name="RWTH_HPC_FAMILY_MPI">'OpenMPI'</env>
      <env name="EBVERSIONPRRTE">'3.0.5'</env>
      <env name="CXX">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx'</env>
      <env name="CXXFLAGS">' -g'</env>
      <env name="MPI_INCLUDE">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/include'</env>
      <env name="FLAGS_OPENMP">'-fopenmp'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_STACK_FLAGS_AUTOPAR">'false'</env>
      <env name="_ModuleTable008_">'ICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDLzEzLjMuMFwiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wXCIpIgosICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29yZVwiKSIsICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9ob21lL3J3dGgxMjY5L21vZHVsZXNcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2hvbWUv'</env>
      <env name="EBDEVELLIBEVENT">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-libevent-2.1.12-easybuild-devel'</env>
      <env name="__LMOD_REF_COUNT_CMAKE_PREFIX_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0:1'</env>
      <env name="EBVERSIONHWLOC">'2.10.0'</env>
      <env name="__LMOD_STACK_FLAGS_PIC">'LWZQSUMgLXNoYXJlZA=='</env>
      <env name="_ModuleTable013_">'ZS8xMy4zLjAvUFJSVEUvMy4wLjUubHVhIiwKZnVsbE5hbWUgPSAiUFJSVEUvMy4wLjUiLApsb2FkT3JkZXIgPSAxNCwKcHJvcFQgPSB7fSwKcmVmX2NvdW50ID0gMSwKc3RhY2tEZXB0aCA9IDIsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJQUlJURS8zLjAuNSIsCndWID0gIjAwMDAwMDAwMy4wMDAwMDAwMDAuMDAwMDAwMDA1Lip6ZmluYWwiLAp9LApQeXRob24gPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL1B5dGhvbi8zLjEyLjMubHVhIiwKZnVsbE5hbWUgPSAiUHl0aG9uLzMuMTIuMyIsCmxvYWRPcmRlciA9'</env>
      <env name="EBDEVELOPENMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/easybuild/Compiler-GCC-13.3.0-OpenMPI-5.0.3-easybuild-devel'</env>
      <env name="EBROOTZ3">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0'</env>
      <env name="__LMOD_REF_COUNT_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/sbin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/bin:1;/home/ss540294/.local/lcov-2.3.1/bin:2;/home/ss540294/software/stress/usr/bin:2;/home/ss540294/software/ccache/bin:2;/home/ss540294/.local/bin:2;/home/ss540294/software/mpiP/bin:2;/home/ss540294/software/git/bin:2;/home/ss540294/htop/bin:2;/home/ss540294/nvim-linux-x86_64/bin:2;/rwthfs/rz/cluster/home/ss540294/.vscode-server/cli/servers/Stable-cb0c47c0cfaad0757385834bd89d410c78a856c0/server/bin/remote-cli:1;/usr/local_host/bin:1;/usr/local_host/sbin:1;/usr/local_rwth/bin:1;/usr/local_rwth/sbin:1;/usr/bin:1;/usr/sbin:1;/bin:1;/sbin:1;/opt/singularity/bin:1;/usr/local/bin:1;/usr/local/sbin:1;/opt/slurm/current/sbin:1;/opt/slurm/current/bin:1;/home/ss540294/dotfiles/tools/diff-so-fancy:2;/home/ss540294/dotfiles/zsh/plugins/fzf/bin:1;/home/ss540294/.vscode-server/extensions/ms-python.debugpy-2025.10.0-linux-x64/bundled/scripts/noConfigScripts:1;/home/ss540294/.vscode-server/data/User/globalStorage/github.copilot-chat/debugCommand:1'</env>
      <env name="_ModuleTable018_">'NCwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIlhaLzUuNC41IiwKd1YgPSAiMDAwMDAwMDA1LjAwMDAwMDAwNC4wMDAwMDAwMDUuKnpmaW5hbCIsCn0sClozID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9aMy80LjEzLjAubHVhIiwKZnVsbE5hbWUgPSAiWjMvNC4xMy4wIiwKbG9hZE9yZGVyID0gMjYsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAxLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiWjMvNC4xMy4wIiwKd1YgPSAiMDAwMDAwMDA0LjAwMDAwMDAxMy4qemZpbmFs'</env>
      <env name="_ModuleTable015_">'ICJTUUxpdGUvMy40NS4zIiwKd1YgPSAiMDAwMDAwMDAzLjAwMDAwMDA0NS4wMDAwMDAwMDMuKnpmaW5hbCIsCn0sClRjbCA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvVGNsLzguNi4xNC5sdWEiLApmdWxsTmFtZSA9ICJUY2wvOC42LjE0IiwKbG9hZE9yZGVyID0gMjEsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSA0LApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiVGNsLzguNi4xNCIsCndWID0gIjAwMDAwMDAwOC4wMDAwMDAwMDYuMDAwMDAwMDE0Lip6ZmluYWwiLAp9LApVQ0MgPSB7CmZuID0gIi9jdm1mcy9z'</env>
      <env name="FLAGS_FAST_NO_FPOPT">'-O3 -mtune=native'</env>
      <env name="_ModuleTable_Sz_">'34'</env>
      <env name="__LMOD_REF_COUNT_LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:1;/home/ss540294/bin/lib:2'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="_ModuleTable023_">'L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29yZS9nb21waS8yMDI0YS5sdWEiLApmdWxsTmFtZSA9ICJnb21waS8yMDI0YSIsCmxvYWRPcmRlciA9IDE3LApwcm9wVCA9IHsKdHlwZV8gPSB7CnRvb2xjaGFpbiA9IDEsCn0sCn0sCnN0YWNrRGVwdGggPSAwLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiZ29tcGkvMjAyNGEiLAp3ViA9ICJzMDAwMDIwMjQuKmEuKnpmaW5hbCIsCn0sCmh3bG9jID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9od2xvYy8yLjEwLjAubHVhIiwKZnVs'</env>
      <env name="__LMOD_STACK_F77">'Z2ZvcnRyYW4gLWZuby1zaWduLXplcm8='</env>
      <env name="__LMOD_REF_COUNT_PKG_CONFIG_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib/pkgconfig:1'</env>
      <env name="EBROOTGCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/3.3.0'</env>
      <env name="__LMOD_STACK_LASTCOMPILER">'R0NDY29yZQ=='</env>
      <env name="FLAGS_FAST">'-O3 -ffast-math -mtune=native'</env>
      <env name="__LMOD_REF_COUNT_CPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages/z3/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include/python3.12:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include/libxml2:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/include:1'</env>
      <env name="__LMOD_STACK_MPIF77">'bXBpZm9ydA=='</env>
      <env name="PMIX_MCA_psec">'^munge'</env>
      <env name="MPI_LIBDIR">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib'</env>
      <env name="EBROOTNUMACTL">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0'</env>
      <env name="_ModuleTable029_">'Mi4xMi43IiwKbG9hZE9yZGVyID0gNywKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9IDMsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJsaWJ4bWwyLzIuMTIuNyIsCndWID0gIjAwMDAwMDAwMi4wMDAwMDAwMTIuMDAwMDAwMDA3Lip6ZmluYWwiLAp9LApuY3Vyc2VzID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9uY3Vyc2VzLzYuNS5sdWEiLApmdWxsTmFtZSA9ICJuY3Vyc2VzLzYuNSIsCmxvYWRPcmRlciA9IDE4LApwcm9wVCA9IHt9LApyZWZfY291bnQgPSAxLApzdGFja0RlcHRoID0gMSwKc3RhdHVzID0gImFj'</env>
      <env name="OMPI_MCA_mtl">'^psm'</env>
      <env name="CMAKE_PREFIX_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0'</env>
      <env name="MPIF77">'mpifort'</env>
      <env name="_ModuleTable010_">'ewphY3Rpb25BID0gewoicHJlcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvTVBJL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuM1wiKSIsCn0sCmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuMy5sdWEiLApmdWxsTmFtZSA9ICJPcGVuTVBJLzUuMC4zIiwKbG9hZE9yZGVyID0gMTYsCnByb3BUID0gewp0eXBlXyA9IHsKbXBpID0gMSwKfSwKfSwKc3RhY2tEZXB0aCA9IDEsCnN0YXR1'</env>
      <env name="OMPI_MCA_hwloc_base_binding_policy">'none'</env>
      <env name="_ModuleTable024_">'bE5hbWUgPSAiaHdsb2MvMi4xMC4wIiwKbG9hZE9yZGVyID0gOSwKcHJvcFQgPSB7fSwKcmVmX2NvdW50ID0gMSwKc3RhY2tEZXB0aCA9IDIsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJod2xvYy8yLjEwLjAiLAp3ViA9ICIwMDAwMDAwMDIuMDAwMDAwMDEwLip6ZmluYWwiLAp9LApsaWJhcmNoaXZlID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9saWJhcmNoaXZlLzMuNy40Lmx1YSIsCmZ1bGxOYW1lID0gImxpYmFyY2hpdmUvMy43LjQiLApsb2FkT3JkZXIgPSAyOSwKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9'</env>
      <env name="EBVERSIONGCC">'13.3.0'</env>
      <env name="__LMOD_STACK_FLAGS_FREE">'LWZmcmVlLWZvcm0='</env>
      <env name="MPITEST">'/opt/MPI/bin/mpitest'</env>
      <env name="EBDEVELGCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCC/13.3.0/easybuild/Core-GCC-13.3.0-easybuild-devel'</env>
      <env name="EBROOTGOMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/gompi/2024a'</env>
      <env name="_ModuleTable003_">'cHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0L21vZHVsZXNcIikiLAp9LApmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9DTWFrZS8zLjI5LjMubHVhIiwKZnVsbE5hbWUgPSAiQ01ha2UvMy4yOS4zIiwKbG9hZE9yZGVyID0gMzAsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAwLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiQ01ha2UvMy4yOS4zIiwKd1YgPSAiczAwMDAwMDAzLjAwMDAwMDAyOS4wMDAwMDAwMDMuKnpmaW5hbCIsCn0sCkdDQyA9IHsKYWN0aW9uQSA9IHsKInByZXBlbmRfcGF0'</env>
      <env name="__LMOD_STACK_FC">'Z2ZvcnRyYW4='</env>
      <env name="__LMOD_REF_COUNT_XDG_DATA_DIRS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share:1;/usr/local/share:1;/usr/share:1'</env>
      <env name="__LMOD_STACK_CPP">'Y3Bw'</env>
      <env name="EBVERSIONLLVM">'19.1.7'</env>
      <env name="LASTCOMPILER">'GCCcore'</env>
      <env name="R_MPI_ROOT">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0'</env>
      <env name="OMPI_MCA_memory">'^patcher'</env>
      <env name="PYTHONPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/python:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/easybuild/python'</env>
      <env name="__LMOD_REF_COUNT_PYTHONPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/python:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/easybuild/python:1'</env>
      <env name="EBDEVELZ3">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-Z3-4.13.0-easybuild-devel'</env>
      <env name="F77">'gfortran -fno-sign-zero'</env>
      <env name="ACLOCAL_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share/aclocal:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/aclocal:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/aclocal'</env>
      <env name="EBVERSIONGOMPI">'2024a'</env>
      <env name="ASAN_SYMBOLIZER_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/bin/llvm-symbolizer'</env>
      <env name="EBDEVELLIBPCIACCESS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-libpciaccess-0.18.1-easybuild-devel'</env>
      <env name="LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:/home/ss540294/bin/lib'</env>
      <env name="__LMOD_STACK_FLAGS_FAST">'LU8zIC1mZmFzdC1tYXRoIC1tdHVuZT1uYXRpdmU='</env>
      <env name="LASTMPI">'OpenMPI'</env>
      <env name="EBDEVELUCX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-UCX-1.16.0-easybuild-devel'</env>
      <env name="LOADEDMODULES">'GCCcore/13.3.0:zlib/1.3.1:binutils/2.42:GCC/13.3.0:numactl/2.0.18:XZ/5.4.5:libxml2/2.12.7:libpciaccess/0.18.1:hwloc/2.10.0:OpenSSL/3:libevent/2.1.12:UCX/1.16.0:PMIx/5.0.2:PRRTE/3.0.5:UCC/1.3.0:OpenMPI/5.0.3:gompi/2024a:ncurses/6.5:bzip2/1.0.8:libreadline/8.2:Tcl/8.6.14:SQLite/3.45.3:libffi/3.4.5:Python/3.12.3:GMP/6.3.0:Z3/4.13.0:LLVM/19.1.7:cURL/8.7.1:libarchive/3.7.4:CMake/3.29.3'</env>
      <env name="EBDEVELUCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-UCC-1.3.0-easybuild-devel'</env>
      <env name="OMPI_CC">'clang'</env>
      <env name="SHLVL">'4'</env>
      <env name="_ModuleTable012_">'d3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvUE1JeC81LjAuMi5sdWEiLApmdWxsTmFtZSA9ICJQTUl4LzUuMC4yIiwKbG9hZE9yZGVyID0gMTMsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiUE1JeC81LjAuMiIsCndWID0gIjAwMDAwMDAwNS4wMDAwMDAwMDAuMDAwMDAwMDAyLip6ZmluYWwiLAp9LApQUlJURSA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29y'</env>
      <env name="OMPI_MCA_hwloc_base_report_bindings">'0'</env>
      <env name="_ModuleTable006_">'LApzdGFja0RlcHRoID0gMiwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIkdDQ2NvcmUvMTMuMy4wIiwKd1YgPSAiczAwMDAwMDEzLjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKR01QID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9HTVAvNi4zLjAubHVhIiwKZnVsbE5hbWUgPSAiR01QLzYuMy4wIiwKbG9hZE9yZGVyID0gMjUsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiR01QLzYuMy4wIiwKd1YgPSAiMDAwMDAwMDA2LjAwMDAw'</env>
      <env name="_ModuleTable026_">'d1YgPSAiMDAwMDAwMDAyLjAwMDAwMDAwMS4wMDAwMDAwMTIuKnpmaW5hbCIsCn0sCmxpYmZmaSA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvbGliZmZpLzMuNC41Lmx1YSIsCmZ1bGxOYW1lID0gImxpYmZmaS8zLjQuNSIsCmxvYWRPcmRlciA9IDIzLApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImxpYmZmaS8zLjQuNSIsCndWID0gIjAwMDAwMDAwMy4wMDAwMDAwMDQuMDAwMDAwMDA1Lip6ZmluYWwiLAp9LApsaWJwY2lhY2Nlc3MgPSB7CmZuID0gIi9jdm1mcy9z'</env>
      <env name="PMIX_MCA_gds">'hash'</env>
      <env name="EBDEVELNUMACTL">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-numactl-2.0.18-easybuild-devel'</env>
      <env name="_ModuleTable033_">'eDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvcmUiLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9NUEkvaW50ZWwvMjAyNC4yLjAvaW1waS8yMDIxLjEzLjAiCiwgIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvaW50ZWwvMjAyNC4yLjAiLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9MTFZNLzE5LjEuNyIKLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9NUEkvR0NDLzEzLjMuMC9PcGVuTVBJLzUuMC4zIiwgIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxl'</env>
      <env name="__LMOD_STACK_FLAGS_RPATH">'LVdsLC1ycGF0aD0vY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9zb2Z0d2FyZS9HQ0Njb3JlLzEzLjMuMC9saWI2NA=='</env>
      <env name="_ModuleTable017_">'MTMuMy4wL1VDWC8xLjE2LjAubHVhIiwKZnVsbE5hbWUgPSAiVUNYLzEuMTYuMCIsCmxvYWRPcmRlciA9IDEyLApwcm9wVCA9IHt9LApyZWZfY291bnQgPSAxLApzdGFja0RlcHRoID0gMiwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIlVDWC8xLjE2LjAiLAp3ViA9ICIwMDAwMDAwMDEuMDAwMDAwMDE2Lip6ZmluYWwiLAp9LApYWiA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvWFovNS40LjUubHVhIiwKZnVsbE5hbWUgPSAiWFovNS40LjUiLApsb2FkT3JkZXIgPSA2LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0g'</env>
      <env name="EBROOTUCX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0'</env>
      <env name="EBDEVELHWLOC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-hwloc-2.10.0-easybuild-devel'</env>
      <env name="_ModuleTable009_">'c3M1NDAyOTQvLm1vZHVsZXNcIikiLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC9tb2R1bGVzXCIpIiwKfSwKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvTExWTS8xOS4xLjcubHVhIiwKZnVsbE5hbWUgPSAiTExWTS8xOS4xLjciLApsb2FkT3JkZXIgPSAyNywKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9IDAsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJMTFZNLzE5LjEuNyIsCndWID0gIjAwMDAwMDAxOS4wMDAwMDAwMDEuMDAwMDAwMDA3Lip6ZmluYWwiLAp9LApPcGVuTVBJID0g'</env>
      <env name="EBROOTUCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0'</env>
      <env name="__LMOD_REF_COUNT_MANPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share/man:1;/usr/local_host/man:1;/usr/local_rwth/man:1;/usr/man:1;/usr/share/man:1;/usr/local/man:1;/usr/local/share/man:1;/opt/slurm/current/share/man:1'</env>
      <env name="EBDEVELGMP">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-GMP-6.3.0-easybuild-devel'</env>
      <env name="_ModuleTable034_">'cy9hbGwvQ29tcGlsZXIvR0NDLzEzLjMuMCIKLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMCIsICIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL0NvcmUiLCAiL2hvbWUvcnd0aDEyNjkvbW9kdWxlcyIsICIvaG9tZS9zczU0MDI5NC8ubW9kdWxlcyIsICIvd29yay9zczU0MDI5NC9tb2R1bGVzIiwKfSwKc3lzdGVtQmFzZU1QQVRIID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvcmUiLAp9Cg=='</env>
      <env name="_ModuleTable031_">'aWIgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL3psaWIvMS4zLjEubHVhIiwKZnVsbE5hbWUgPSAiemxpYi8xLjMuMSIsCmxvYWRPcmRlciA9IDIsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAzLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiemxpYi8xLjMuMSIsCndWID0gIjAwMDAwMDAwMS4wMDAwMDAwMDMuMDAwMDAwMDAxLip6ZmluYWwiLAp9LAp9LAptcGF0aEEgPSB7CiIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2Fs'</env>
      <env name="__LMOD_STACK_FLAGS_OFFLOAD_OPENMP">'LWZvcGVubXA='</env>
      <env name="_ModuleTable001_">'X01vZHVsZVRhYmxlXyA9IHsKTVR2ZXJzaW9uID0gMywKY19yZWJ1aWxkVGltZSA9IGZhbHNlLApjX3Nob3J0VGltZSA9IGZhbHNlLApkZXB0aFQgPSB7fSwKZmFtaWx5ID0gewptcGkgPSAiT3Blbk1QSSIsCn0sCm1UID0gewpDTWFrZSA9IHsKYWN0aW9uQSA9IHsKImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9MTFZNLzE5LjEuN1wiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL01QSS9HQ0MvMTMuMy4wL09wZW5NUEkvNS4wLjNcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFU'</env>
      <env name="_ModuleTable025_">'IDEsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJsaWJhcmNoaXZlLzMuNy40IiwKd1YgPSAiMDAwMDAwMDAzLjAwMDAwMDAwNy4wMDAwMDAwMDQuKnpmaW5hbCIsCn0sCmxpYmV2ZW50ID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9saWJldmVudC8yLjEuMTIubHVhIiwKZnVsbE5hbWUgPSAibGliZXZlbnQvMi4xLjEyIiwKbG9hZE9yZGVyID0gMTEsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAibGliZXZlbnQvMi4xLjEyIiwK'</env>
      <env name="LD_LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/lib64:/home/ss540294/opt/lib:/home/ss540294/bin/lib:/home/ss540294/jack/usr/lib64'</env>
      <env name="__LMOD_STACK_FLAGS_RUNTIME_LINKER">'LVdsLC1ycGF0aD0='</env>
      <env name="_ModuleTable014_">'IDI0LApwcm9wVCA9IHt9LApyZWZfY291bnQgPSAxLApzdGFja0RlcHRoID0gMiwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIlB5dGhvbi8zLjEyLjMiLAp3ViA9ICIwMDAwMDAwMDMuMDAwMDAwMDEyLjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKU1FMaXRlID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9TUUxpdGUvMy40NS4zLmx1YSIsCmZ1bGxOYW1lID0gIlNRTGl0ZS8zLjQ1LjMiLApsb2FkT3JkZXIgPSAyMiwKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9IDMsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9'</env>
      <env name="_ModuleTable004_">'aChcIk1PRFVMRVBBVEhcIixcIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQy8xMy4zLjBcIikiLAp9LApmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db3JlL0dDQy8xMy4zLjAubHVhIiwKZnVsbE5hbWUgPSAiR0NDLzEzLjMuMCIsCmxvYWRPcmRlciA9IDQsCnByb3BUID0gewp0eXBlXyA9IHsKdG9vbGNoYWluID0gMSwKfSwKfSwKc3RhY2tEZXB0aCA9IDEsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJHQ0MvMTMuMy4wIiwKd1YgPSAiczAwMDAw'</env>
      <env name="LMOD_FAMILY_MPI_VERSION">'5.0.3'</env>
      <env name="_ModuleTable020_">'cy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9iemlwMi8xLjAuOC5sdWEiLApmdWxsTmFtZSA9ICJiemlwMi8xLjAuOCIsCmxvYWRPcmRlciA9IDE5LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImJ6aXAyLzEuMC44IiwKd1YgPSAiMDAwMDAwMDAxLjAwMDAwMDAwMC4wMDAwMDAwMDguKnpmaW5hbCIsCn0sCmNVUkwgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2NVUkwvOC43LjEubHVhIiwKZnVsbE5hbWUgPSAiY1VSTC84LjcuMSIsCmxvYWRP'</env>
      <env name="LMOD_FAMILY_MPI">'OpenMPI'</env>
      <env name="FC">'gfortran'</env>
      <env name="__LMOD_STACK_CXX">'Zysr'</env>
      <env name="EBVERSIONPMIX">'5.0.2'</env>
      <env name="SLURM_MPI_TYPE">'pmix'</env>
      <env name="__LMOD_STACK_CC">'Z2Nj'</env>
      <env name="OBJC">'gcc'</env>
      <env name="XDG_DATA_DIRS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share:/usr/local/share:/usr/share'</env>
      <env name="__LMOD_STACK_MPIFC">'bXBpZm9ydA=='</env>
      <env name="EBVERSIONLIBXML2">'2.12.7'</env>
      <env name="PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/sbin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/bin:/home/ss540294/.local/lcov-2.3.1/bin:/home/ss540294/software/stress/usr/bin:/home/ss540294/software/ccache/bin:/home/ss540294/.local/bin:/home/ss540294/software/mpiP/bin:/home/ss540294/software/git/bin:/home/ss540294/htop/bin:/home/ss540294/nvim-linux-x86_64/bin:/rwthfs/rz/cluster/home/ss540294/.vscode-server/cli/servers/Stable-cb0c47c0cfaad0757385834bd89d410c78a856c0/server/bin/remote-cli:/usr/local_host/bin:/usr/local_host/sbin:/usr/local_rwth/bin:/usr/local_rwth/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/opt/singularity/bin:/usr/local/bin:/usr/local/sbin:/opt/slurm/current/sbin:/opt/slurm/current/bin:/home/ss540294/dotfiles/tools/diff-so-fancy:/home/ss540294/dotfiles/zsh/plugins/fzf/bin:/home/ss540294/.vscode-server/extensions/ms-python.debugpy-2025.10.0-linux-x64/bundled/scripts/noConfigScripts:/home/ss540294/.vscode-server/data/User/globalStorage/github.copilot-chat/debugCommand'</env>
      <env name="EBROOTLIBEVENT">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0'</env>
      <env name="MODULEPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/LLVM/19.1.7:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCC/13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core:/work/ss540294/.local/easybuild/modules/all/MPI/intel/2024.2.0/impi/2021.13.0:/work/ss540294/.local/easybuild/modules/all/Compiler/intel/2024.2.0:/work/ss540294/.local/easybuild/modules/all/Compiler/LLVM/19.1.7:/work/ss540294/.local/easybuild/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:/work/ss540294/.local/easybuild/modules/all/Compiler/GCC/13.3.0:/work/ss540294/.local/easybuild/modules/all/Compiler/GCCcore/13.3.0:/work/ss540294/.local/easybuild/modules/all/Core:/home/rwth1269/modules:/home/ss540294/.modules:/work/ss540294/modules'</env>
      <env name="CC">'clang'</env>
      <env name="CFLAGS">' -g'</env>
      <env name="_LMFILES_">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/GCCcore/13.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/zlib/1.3.1.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/binutils/2.42.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/GCC/13.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/numactl/2.0.18.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/XZ/5.4.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libxml2/2.12.7.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libpciaccess/0.18.1.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/hwloc/2.10.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/OpenSSL/3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libevent/2.1.12.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/UCX/1.16.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/PMIx/5.0.2.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/PRRTE/3.0.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/UCC/1.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCC/13.3.0/OpenMPI/5.0.3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/gompi/2024a.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/ncurses/6.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/bzip2/1.0.8.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libreadline/8.2.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/Tcl/8.6.14.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/SQLite/3.45.3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libffi/3.4.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/Python/3.12.3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/GMP/6.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/Z3/4.13.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/LLVM/19.1.7.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/cURL/8.7.1.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libarchive/3.7.4.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/CMake/3.29.3.lua'</env>
      <env name="_ModuleTable028_">'ZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvbGlicmVhZGxpbmUvOC4yLmx1YSIsCmZ1bGxOYW1lID0gImxpYnJlYWRsaW5lLzguMiIsCmxvYWRPcmRlciA9IDIwLApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImxpYnJlYWRsaW5lLzguMiIsCndWID0gIjAwMDAwMDAwOC4wMDAwMDAwMDIuKnpmaW5hbCIsCn0sCmxpYnhtbDIgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2xpYnhtbDIvMi4xMi43Lmx1YSIsCmZ1bGxOYW1lID0gImxpYnhtbDIv'</env>
      <env name="__LMOD_STACK_MPICC">'bXBpY2M='</env>
      <env name="FLAGS_FREE">'-ffree-form'</env>
      <env name="EBDEVELPMIX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-PMIx-5.0.2-easybuild-devel'</env>
      <env name="OMPI_CXX">'clang++'</env>
      <env name="__LMOD_STACK_FLAGS_DEBUG">'LWc='</env>
      <env name="__LMOD_STACK_LASTMPI">'T3Blbk1QSQ=='</env>
      <env name="__LMOD_REF_COUNT_LD_LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/lib64:1;/home/ss540294/opt/lib:2;/home/ss540294/bin/lib:2;/home/ss540294/jack/usr/lib64:2'</env>
      <env name="EBDEVELLIBXML2">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-libxml2-2.12.7-easybuild-devel'</env>
      <env name="_ModuleTable019_">'IiwKfSwKYmludXRpbHMgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2JpbnV0aWxzLzIuNDIubHVhIiwKZnVsbE5hbWUgPSAiYmludXRpbHMvMi40MiIsCmxvYWRPcmRlciA9IDMsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiYmludXRpbHMvMi40MiIsCndWID0gIjAwMDAwMDAwMi4wMDAwMDAwNDIuKnpmaW5hbCIsCn0sCmJ6aXAyID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlk'</env>
      <env name="CPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages/z3/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include/python3.12:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include/libxml2:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/include'</env>
      <env name="EBVERSIONLIBPCIACCESS">'0.18.1'</env>
      <env name="EBROOTLLVM">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0'</env>
      <env name="RWTH_HPC_FAMILY_MPI_VERSION">'5.0.3'</env>
      <env name="EBDEVELLLVM">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-LLVM-19.1.7-easybuild-devel'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
      <nonenv name="EBROOTIMKL"/>
      <nonenv name="TBBROOT"/>
      <nonenv name="FLAGS_intel_compilers_DEBUG"/>
      <nonenv name="ONEAPI_ROOT"/>
      <nonenv name="I_MPI_FABRICS"/>
      <nonenv name="FLAGS_intel_compilers_FAST_NO_FPOPT"/>
      <nonenv name="EBDEVELHTOP"/>
      <nonenv name="FPGA_VARS_DIR"/>
      <nonenv name="I_MPI_CC"/>
      <nonenv name="I_MPI_ROOT"/>
      <nonenv name="EBVERSIONIMPI"/>
      <nonenv name="MPI_NAME"/>
      <nonenv name="I_MPI_JOB_SIGNAL_PROPAGATION"/>
      <nonenv name="FI_PROVIDER_PATH"/>
      <nonenv name="DIAGUTIL_PATH"/>
      <nonenv name="FLAGS_intel_compilers_OPENMP"/>
      <nonenv name="EBROOTIMPI"/>
      <nonenv name="EBDEVELIMPI"/>
      <nonenv name="EBROOTINTELMINCOMPILERS"/>
      <nonenv name="intel_compilers_FC"/>
      <nonenv name="EBDEVELIMKL"/>
      <nonenv name="EBROOTIMKLMINFFTW"/>
      <nonenv name="FLEXIBLAS_LIBRARY_PATH"/>
      <nonenv name="FLAGS_intel_compilers_RUNTIME_LINKER"/>
      <nonenv name="EBVERSIONINTEL"/>
      <nonenv name="GDB_INFO"/>
      <nonenv name="EBVERSIONINTELMINCOMPILERS"/>
      <nonenv name="FLAGS_intel_compilers_ARCH64"/>
      <nonenv name="__LMOD_REF_COUNT_INFOPATH"/>
      <nonenv name="EBVERSIONIMKLMINFFTW"/>
      <nonenv name="EBVERSIONIMKL"/>
      <nonenv name="FLAGS_intel_compilers_PIC"/>
      <nonenv name="EBDEVELIMKLMINFFTW"/>
      <nonenv name="__LMOD_REF_COUNT_DIAGUTIL_PATH"/>
      <nonenv name="FLAGS_intel_compilers_FAST"/>
      <nonenv name="__LMOD_REF_COUNT_NLSPATH"/>
      <nonenv name="CMPLR_ROOT"/>
      <nonenv name="INTELARCH"/>
      <nonenv name="INFOPATH"/>
      <nonenv name="I_MPI_CXX"/>
      <nonenv name="intel_compilers_CXX"/>
      <nonenv name="__LMOD_REF_COUNT_FI_PROVIDER_PATH"/>
      <nonenv name="intel_compilers_CC"/>
      <nonenv name="MKL_EXAMPLES"/>
      <nonenv name="FLAGS_AUTOPAR"/>
      <nonenv name="intel_compilers_F77"/>
      <nonenv name="I_MPI_PIN"/>
      <nonenv name="OCL_ICD_FILENAMES"/>
      <nonenv name="EBROOTHTOP"/>
      <nonenv name="FLAGS_intel_compilers_RPATH"/>
      <nonenv name="CLASSPATH"/>
      <nonenv name="INTELFPGAOCLSDKROOT"/>
      <nonenv name="EBDEVELINTEL"/>
      <nonenv name="MKLROOT"/>
      <nonenv name="NLSPATH"/>
      <nonenv name="EBVERSIONHTOP"/>
      <nonenv name="EBROOTINTEL"/>
      <nonenv name="INTEL_PYTHONHOME"/>
      <nonenv name="FLAGS_intel_compilers_AUTOPAR"/>
      <nonenv name="FLAGS_intel_compilers_FREE"/>
      <nonenv name="__LMOD_REF_COUNT_FLEXIBLAS_LIBRARY_PATH"/>
      <nonenv name="EBDEVELINTELMINCOMPILERS"/>
      <nonenv name="intel_compilers_ROOT"/>
      <nonenv name="EBDEVELJUBE"/>
      <nonenv name="EBROOTJUBE"/>
      <nonenv name="EBVERSIONJUBE"/>
      <nonenv name="__LMOD_REF_COUNT_JUBE_INCLUDE_PATH"/>
      <nonenv name="JUBE_INCLUDE_PATH"/>
    </environment>
  </workpackage>
  <workpackage id="6">
    <step iteration="0" cycle="0">compile</step>
    <parameterset>
      <parameter name="force_compilation" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="executable_full_name" type="string" separator="," duplicate="none" update_mode="use" mode="text">
        <value>${executable_name}${executable_extension}</value>
        <selection>lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="compile_preparation" type="string" separator="," duplicate="none" mode="text">
        <value>cd MPIRMA/${kernel_folder}</value>
      </parameter>
      <parameter name="compile_flags" type="string" separator=";" duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;parcoach&quot;: &quot;-g -Wl,-rpath=${parcoach_install_folder}/lib64 ${parcoach_install_folder}/lib64/libParcoachCollDynamic_MPI_C.so ${parcoach_install_folder}/lib64/libParcoachRMADynamic_MPI_C.so&quot;,
         &quot;tsan&quot;: &quot;${must_stats_compile_flags} -g&quot;,
         &quot;tsan-opt&quot;: &quot;${must_stats_compile_flags} ${must_isl_compile_flags} -g --optimizations ${must_compile_opt}&quot;,
         &quot;tsan-cover&quot;: &quot;${must_stats_compile_flags} -g --tsan-json ${jube_wp_abspath}/compile_cover/contract_messages.json&quot;,
         &quot;isl&quot;: &quot;${must_stats_compile_flags} ${must_isl_compile_flags}&quot;}.get(&quot;${compile_mode}&quot;, 0)</value>
        <selection> -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="tsan_opt_extension" type="string" separator="," duplicate="none" mode="text">
        <value>.tsan-opt.${__tsan_opt_hash}</value>
        <selection>.tsan-opt.1a8f03679a975c693567ad1ab8b1222e</selection>
      </parameter>
      <parameter name="executable_extension" type="string" separator="," duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;parcoach&quot;: &quot;.pcoach&quot;,
         &quot;tsan&quot;: &quot;.tsan&quot;,
         &quot;tsan-opt&quot;: &quot;${tsan_opt_extension}&quot;,
         &quot;tsan-cover&quot;: &quot;.tsan-cover&quot;,
         &quot;isl&quot;: &quot;.isl&quot;}.get(&quot;${compile_mode}&quot;, 0)</value>
        <selection>.tsan-cover</selection>
      </parameter>
      <parameter name="compile_target" type="string" separator="," duplicate="none" mode="text">
        <value>$executable_name</value>
        <selection>lulesh2.0</selection>
      </parameter>
      <parameter name="benchmark_build_dir" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${jube_benchmark_home}/executables/${__toolchain_module}/${__compiler_module}/${__mpi_module}/&quot; + (&quot;${RMA_target}&quot; if &quot;${RMA_target}&quot;.split() else &quot;Default&quot;)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/executables/gompi/2024a/llvm/19/${mpi_name}/${mpi_version}/${RMA_target}</selection>
      </parameter>
      <parameter name="do_compile" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_compilation} || [ ! -f &quot;${benchmark_build_dir}/${executable_full_name}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="compile_common_env_vars" type="string" separator="!NONE!" duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;:     &quot;MPICC='mpicc ${compile_flags}' MPICXX='mpicxx ${compile_flags}' MPIFC='mpifc ${compile_flags}'&quot;,
         &quot;parcoach&quot;: &quot;MPICC='${PARCOACHCC} --wrap-target mpicc ${compile_flags}' MPICXX='${PARCOACHCXX} --wrap-target mpicxx ${compile_flags}'&quot;,
         &quot;tsan&quot;:     &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;,
         &quot;tsan-opt&quot;: &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;,
         &quot;tsan-cover&quot;: &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;,
         &quot;isl&quot;:      &quot;MPICC=\&quot;${MUSTCC} --wrap-target mpicc ${compile_flags}\&quot; MPICXX=\&quot;${MUSTCXX} --wrap-target mpicxx ${compile_flags}\&quot; MPIFC=\&quot;${MUSTFC} --wrap-target mpif90 ${compile_flags}\&quot;&quot;}.get(&quot;${compile_mode}&quot;, 'invalid-compile-mode')</value>
        <selection>MPICC=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc --wrap-target mpicc  -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json&quot; MPICXX=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx --wrap-target mpicxx  -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json&quot; MPIFC=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort --wrap-target mpif90  -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json&quot;</selection>
      </parameter>
      <parameter name="compile_env_vars" type="string" separator="!NONE!" duplicate="none" update_mode="use" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;CXX='${MUSTCXX}' CFLAGS='${compile_flags}' CXXFLAGS='${compile_flags}'&quot;,
         &quot;tsan-opt&quot;: &quot;CXX='${MUSTCXX}' CFLAGS='${compile_flags}' CXXFLAGS='${compile_flags}'&quot;,
         &quot;tsan-cover&quot;: &quot;CXX='${MUSTCXX}' CFLAGS='${compile_flags}' CXXFLAGS='${compile_flags}'&quot;,
         }.get(&quot;${compile_mode}&quot;, 0)</value>
        <selection>CXX='/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx' CFLAGS=' -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json' CXXFLAGS=' -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json'</selection>
      </parameter>
      <parameter name="compile_export" type="string" separator="!NONE!" duplicate="none" update_mode="use" mode="text">
        <value>for item in ${compile_common_env_vars} ${compile_env_vars}; do export &quot;$item&quot;; done</value>
        <selection>for item in MPICC=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc --wrap-target mpicc  -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json&quot; MPICXX=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx --wrap-target mpicxx  -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json&quot; MPIFC=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort --wrap-target mpif90  -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json&quot; CXX='/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx' CFLAGS=' -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json' CXXFLAGS=' -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json'; do export &quot;$item&quot;; done</selection>
      </parameter>
      <parameter name="time_output_file" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>${jube_wp_abspath}/time.out</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out</selection>
      </parameter>
      <parameter name="time_measure_command" type="string" separator="," duplicate="none" mode="text">
        <value>/usr/bin/time -p -o ${time_output_file}</value>
        <selection>/usr/bin/time -p -o /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out</selection>
      </parameter>
      <parameter name="executable_name" type="string" separator="," duplicate="none" mode="text">
        <value>lulesh2.0</value>
      </parameter>
      <parameter name="must_compile_opt" type="string" separator=";" duplicate="none" mode="python">
        <value>{&quot;tsan-opt&quot;: &quot;ALX1000,CLUSTER&quot;}.get(&quot;${compile_mode}&quot;, &quot;&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="__tsan_opt_hash" type="string" separator=";" duplicate="none" mode="shell">
        <value>echo -n &quot;$must_compile_opt $__must_hash&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>1a8f03679a975c693567ad1ab8b1222e</selection>
      </parameter>
      <parameter name="modulenames_defaults" type="string" separator=";" duplicate="none" mode="text">
        <value>{
            &quot;gcc&quot;: &quot;gcc&quot;,
            &quot;clang&quot;: &quot;clang&quot;,
            &quot;intelmpi&quot;: &quot;intelmpi&quot;,
            &quot;cmake&quot;: &quot;cmake&quot;
        }</value>
      </parameter>
      <parameter name="modulenames_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{
            &quot;gcc&quot;: &quot;GCC&quot;,
            &quot;clang&quot;: &quot;Clang&quot;,
            &quot;Classic-Flang&quot;: &quot;Classic-Flang&quot;,
            &quot;intel&quot;: &quot;intel&quot;,
            &quot;intelmpi&quot;: &quot;iimpi&quot;,
            &quot;gompi&quot;: &quot;gompi&quot;,
            &quot;openmpi&quot; : &quot;openmpi&quot;,
            &quot;mpich&quot; : &quot;mpich&quot;,
            &quot;cmake&quot; : &quot;CMake&quot;
        }</value>
      </parameter>
      <parameter name="modulenames" type="string" separator=";" duplicate="none" mode="python">
        <value>{key:value for (key, value) in list(${modulenames_defaults}.items()) + list(${modulenames_updated}.items())}</value>
        <selection>{'gcc': 'GCC', 'clang': 'Clang', 'intelmpi': 'iimpi', 'cmake': 'CMake', 'Classic-Flang': 'Classic-Flang', 'intel': 'intel', 'gompi': 'gompi', 'openmpi': 'openmpi', 'mpich': 'mpich'}</selection>
      </parameter>
      <parameter name="modules" type="string" separator=";" duplicate="none" mode="python">
        <value>{
              &quot;gcc&quot;:                &quot;{0[gcc]}/11.3.0&quot;.format(${modulenames}),
              &quot;gcc/8.3.0&quot;:          &quot;{0[gcc]}/8.3.0&quot;.format(${modulenames}),
              &quot;gcc/9.3.0&quot;:          &quot;{0[gcc]}/9.3.0&quot;.format(${modulenames}),
              &quot;gcc/9.4.0&quot;:          &quot;{0[gcc]}/9.4.0&quot;.format(${modulenames}),
              &quot;gcc/10.2.0&quot;:         &quot;{0[gcc]}/10.2.0&quot;.format(${modulenames}),
              &quot;gcc/10.3.0&quot;:         &quot;{0[gcc]}/10.3.0&quot;.format(${modulenames}),
              &quot;gcc/11.2.0&quot;:         &quot;{0[gcc]}/11.2.0&quot;.format(${modulenames}),
              &quot;gcc/11.3.0&quot;:         &quot;{0[gcc]}/11.3.0&quot;.format(${modulenames}),
              &quot;clang&quot;:              &quot;{0[clang]}/13.0.1&quot;.format(${modulenames}),
              &quot;clang/13.0.1&quot;:       &quot;{0[clang]}/13.0.1&quot;.format(${modulenames}),
              &quot;clang/15.0.5&quot;:       &quot;{0[clang]}/15.0.5&quot;.format(${modulenames}),
              &quot;clang/16.0.6&quot;:       &quot;{0[clang]}/16.0.6&quot;.format(${modulenames}),
              &quot;Classic-Flang&quot;:      &quot;{0[Classic-Flang]}/16.0.4-c23&quot;.format(${modulenames}),
              &quot;Classic-Flang/16.0.4-c23&quot;:  &quot;{0[Classic-Flang]}/16.0.4-c23&quot;.format(${modulenames}),
              &quot;Classic-Flang/16.0.4-c23-impi&quot;:  &quot;{0[Classic-Flang]}/16.0.4-c23-impi&quot;.format(${modulenames}),
              &quot;intel&quot;       :       &quot;{0[intel]}/2022a&quot;.format(${modulenames}),
              &quot;intel/2019b&quot; :       &quot;{0[intel]}/2019b&quot;.format(${modulenames}),
              &quot;intel/2020a&quot; :       &quot;{0[intel]}/2020a&quot;.format(${modulenames}),
              &quot;intel/2020b&quot; :       &quot;{0[intel]}/2020b&quot;.format(${modulenames}),
              &quot;intel/2021a&quot; :       &quot;{0[intel]}/2021a&quot;.format(${modulenames}),
              &quot;intel/2021b&quot; :       &quot;{0[intel]}/2021b&quot;.format(${modulenames}),
              &quot;intel/2022a&quot; :       &quot;{0[intel]}/2022a&quot;.format(${modulenames}),
              &quot;intel/2022b&quot; :       &quot;{0[intel]}/2022b&quot;.format(${modulenames}),
              &quot;intel/2023a&quot; :       &quot;{0[intel]}/2023a&quot;.format(${modulenames}),
              &quot;gompi/2020a&quot; :       &quot;{0[gompi]}/2020a&quot;.format(${modulenames}),
              &quot;gompi/2020b&quot; :       &quot;{0[gompi]}/2020b&quot;.format(${modulenames}),
              &quot;gompi/2021a&quot; :       &quot;{0[gompi]}/2021a&quot;.format(${modulenames}),
              &quot;gompi/2021b&quot; :       &quot;{0[gompi]}/2021b&quot;.format(${modulenames}),
              &quot;gompi/2022a&quot; :       &quot;{0[gompi]}/2022a&quot;.format(${modulenames}),
              &quot;gompi/2022b&quot; :       &quot;{0[gompi]}/2022b&quot;.format(${modulenames}),
              &quot;gompi/2023a&quot; :       &quot;{0[gompi]}/2023a&quot;.format(${modulenames}),
              &quot;gompi/2024a&quot; :       &quot;{0[gompi]}/2024a&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2022a&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2022b&quot;.format(${modulenames}),
              &quot;intelmpi&quot;:           &quot;{0[intelmpi]}/2023a&quot;.format(${modulenames}),
              &quot;openmpi&quot;:            &quot;{0[openmpi]}/4.1.4&quot;.format(${modulenames}),
              &quot;openmpi/4.0.3&quot;:      &quot;{0[openmpi]}/4.0.3&quot;.format(${modulenames}),
              &quot;openmpi/4.0.5&quot;:      &quot;{0[openmpi]}/4.0.5&quot;.format(${modulenames}),
              &quot;openmpi/4.1.1&quot;:      &quot;{0[openmpi]}/4.1.1&quot;.format(${modulenames}),
              &quot;openmpi/4.1.4&quot;:      &quot;{0[openmpi]}/4.1.4&quot;.format(${modulenames}),
              &quot;openmpi/4.1.5&quot;:      &quot;{0[openmpi]}/4.1.5&quot;.format(${modulenames}),
              &quot;openmpi/4.1.6&quot;:      &quot;{0[openmpi]}/4.1.6&quot;.format(${modulenames}),
              &quot;openmpi/4.1.6-ucx16&quot;:      &quot;{0[openmpi]}/4.1.6-ucx16&quot;.format(${modulenames}),
              &quot;mpich&quot;:              &quot;{0[mpich]}/4.1.2&quot;.format(${modulenames}),
              &quot;mpich/4.1.2&quot;:        &quot;{0[mpich]}/4.1.2&quot;.format(${modulenames}),
              &quot;cmake&quot;:               &quot;{0[cmake]}/3.23.1&quot;.format(${modulenames}),
              &quot;cmake/3.21.1&quot;:        &quot;{0[cmake]}/3.21.1&quot;.format(${modulenames}),
              &quot;cmake/3.22.1&quot;:        &quot;{0[cmake]}/3.22.1&quot;.format(${modulenames}),
              &quot;cmake/3.23.1&quot;:        &quot;{0[cmake]}/3.23.1&quot;.format(${modulenames}),
              &quot;cmake/3.24.3&quot;:        &quot;{0[cmake]}/3.24.3&quot;.format(${modulenames}),
              &quot;cmake/3.26.3&quot;:        &quot;{0[cmake]}/3.26.3&quot;.format(${modulenames}),
              &quot;cmake/3.29.3&quot;:        &quot;{0[cmake]}/3.29.3&quot;.format(${modulenames})    
          }</value>
        <selection>{'gcc': 'GCC/11.3.0', 'gcc/8.3.0': 'GCC/8.3.0', 'gcc/9.3.0': 'GCC/9.3.0', 'gcc/9.4.0': 'GCC/9.4.0', 'gcc/10.2.0': 'GCC/10.2.0', 'gcc/10.3.0': 'GCC/10.3.0', 'gcc/11.2.0': 'GCC/11.2.0', 'gcc/11.3.0': 'GCC/11.3.0', 'clang': 'Clang/13.0.1', 'clang/13.0.1': 'Clang/13.0.1', 'clang/15.0.5': 'Clang/15.0.5', 'clang/16.0.6': 'Clang/16.0.6', 'Classic-Flang': 'Classic-Flang/16.0.4-c23', 'Classic-Flang/16.0.4-c23': 'Classic-Flang/16.0.4-c23', 'Classic-Flang/16.0.4-c23-impi': 'Classic-Flang/16.0.4-c23-impi', 'intel': 'intel/2022a', 'intel/2019b': 'intel/2019b', 'intel/2020a': 'intel/2020a', 'intel/2020b': 'intel/2020b', 'intel/2021a': 'intel/2021a', 'intel/2021b': 'intel/2021b', 'intel/2022a': 'intel/2022a', 'intel/2022b': 'intel/2022b', 'intel/2023a': 'intel/2023a', 'gompi/2020a': 'gompi/2020a', 'gompi/2020b': 'gompi/2020b', 'gompi/2021a': 'gompi/2021a', 'gompi/2021b': 'gompi/2021b', 'gompi/2022a': 'gompi/2022a', 'gompi/2022b': 'gompi/2022b', 'gompi/2023a': 'gompi/2023a', 'gompi/2024a': 'gompi/2024a', 'intelmpi': 'iimpi/2023a', 'openmpi': 'openmpi/4.1.4', 'openmpi/4.0.3': 'openmpi/4.0.3', 'openmpi/4.0.5': 'openmpi/4.0.5', 'openmpi/4.1.1': 'openmpi/4.1.1', 'openmpi/4.1.4': 'openmpi/4.1.4', 'openmpi/4.1.5': 'openmpi/4.1.5', 'openmpi/4.1.6': 'openmpi/4.1.6', 'openmpi/4.1.6-ucx16': 'openmpi/4.1.6-ucx16', 'mpich': 'mpich/4.1.2', 'mpich/4.1.2': 'mpich/4.1.2', 'cmake': 'CMake/3.23.1', 'cmake/3.21.1': 'CMake/3.21.1', 'cmake/3.22.1': 'CMake/3.22.1', 'cmake/3.23.1': 'CMake/3.23.1', 'cmake/3.24.3': 'CMake/3.24.3', 'cmake/3.26.3': 'CMake/3.26.3', 'cmake/3.29.3': 'CMake/3.29.3'}</selection>
      </parameter>
      <parameter name="prerequisite_modules_dict" type="string" separator=";" duplicate="none" mode="python">
        <value>{
            &quot;clang/13.0.1&quot;:       [&quot;GCCcore/.11.3.0&quot;, &quot;GCC/11.3.0&quot;],
            &quot;clang/15.0.5&quot;:       [&quot;GCCcore/.11.3.0&quot;, &quot;GCC/11.3.0&quot;],
            &quot;clang/16.0.6&quot;:       [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;Classic-Flang/16.0.4-c23&quot;:  [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;Classic-Flang/16.0.4-c23-impi&quot;:  [&quot;GCCcore/.12.3.0&quot;, &quot;GCC/12.3.0&quot;],
            &quot;intelmpi/2021.6.0&quot;:  [&quot;intel-compilers/2022.1.0&quot;],
            &quot;openmpi/4.0.3&quot;:      [&quot;GCC/9.3.0&quot;],
            &quot;openmpi/4.0.5&quot;:      [&quot;GCC/10.2.0&quot;],
            &quot;openmpi/4.1.1&quot;:      [&quot;GCC/11.2.0&quot;],
            &quot;openmpi/4.1.4&quot;:      [&quot;GCC/11.3.0&quot;],
            &quot;openmpi/4.1.5&quot;:      [&quot;GCC/12.3.0&quot;],
            &quot;openmpi/4.1.6&quot;:      [&quot;GCC/12.3.0&quot;],
            &quot;openmpi/4.1.6-ucx16&quot;:      [&quot;GCC/12.3.0&quot;],
        }</value>
        <selection>{'clang/13.0.1': ['GCCcore/.11.3.0', 'GCC/11.3.0'], 'clang/15.0.5': ['GCCcore/.11.3.0', 'GCC/11.3.0'], 'clang/16.0.6': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'Classic-Flang/16.0.4-c23': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'Classic-Flang/16.0.4-c23-impi': ['GCCcore/.12.3.0', 'GCC/12.3.0'], 'intelmpi/2021.6.0': ['intel-compilers/2022.1.0'], 'openmpi/4.0.3': ['GCC/9.3.0'], 'openmpi/4.0.5': ['GCC/10.2.0'], 'openmpi/4.1.1': ['GCC/11.2.0'], 'openmpi/4.1.4': ['GCC/11.3.0'], 'openmpi/4.1.5': ['GCC/12.3.0'], 'openmpi/4.1.6': ['GCC/12.3.0'], 'openmpi/4.1.6-ucx16': ['GCC/12.3.0']}</selection>
      </parameter>
      <parameter name="cmake_version" type="string" separator="," duplicate="none" mode="text">
        <value>3.29.3</value>
      </parameter>
      <parameter name="cmake_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;cmake/${cmake_version}&quot;) if $modules.get(&quot;cmake/${cmake_version}&quot;) else $modules.get(&quot;cmake&quot;, &quot;cmake/${cmake_version}&quot;)</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="prerequisite_toolchain_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__toolchain_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_compiler_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__compiler_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_mpi_module" type="string" separator="!NONE!" duplicate="none" mode="python">
        <value>&quot; &quot;.join($prerequisite_modules_dict.get(&quot;$__mpi_module&quot;, &quot; &quot;))</value>
        <selection> </selection>
      </parameter>
      <parameter name="prerequisite_modules" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="toolchain_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${toolchain_name}/${toolchain_version}&quot;, $modules.get(&quot;${toolchain_name}&quot;, &quot;${toolchain_name}&quot; + (&quot;/${toolchain_version}&quot; if &quot;${toolchain_version}&quot; else &quot;&quot;)))</value>
        <selection>gompi/2024a</selection>
      </parameter>
      <parameter name="compiler_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${compiler_name}/${compiler_version}&quot;, $modules.get(&quot;${compiler_name}&quot;, &quot;${compiler_name}&quot; + (&quot;/${compiler_version}&quot; if &quot;${compiler_version}&quot; else &quot;&quot;)))</value>
        <selection>LLVM/19</selection>
      </parameter>
      <parameter name="mpi_module" type="string" separator=";" duplicate="none" mode="python">
        <value>$modules.get(&quot;${mpi_name}/${mpi_version}&quot;, $modules.get(&quot;${mpi_name}&quot;, &quot;${mpi_name}&quot; + (&quot;/${mpi_version}&quot; if &quot;${mpi_version}&quot; else &quot;&quot;)))</value>
        <selection>${mpi_name}/${mpi_version}</selection>
      </parameter>
      <parameter name="required_modules" type="string" separator="," duplicate="none" mode="text">
        <value>${prerequisite_modules} ${toolchain_module} ${mpi_module} ${compiler_module} ${cmake_module} ${must_prerequisite_modules}</value>
        <selection> gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}</selection>
      </parameter>
      <parameter name="use_modules" type="string" separator="," duplicate="none" mode="text">
        <value>/home/rwth1269/modules</value>
      </parameter>
      <parameter name="load_modules" type="string" separator="," duplicate="none" mode="text">
        <value>module use /home/rwth1269/modules/; module purge; for path in ${use_modules}; do module use $path; done; for modulename in ${required_modules}; do module load $modulename; done</value>
        <selection>module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done</selection>
      </parameter>
      <parameter name="__toolchain_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${toolchain_module}&quot;.lower()</value>
        <selection>gompi/2024a</selection>
      </parameter>
      <parameter name="__compiler_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${compiler_module}&quot;.lower()</value>
        <selection>llvm/19</selection>
      </parameter>
      <parameter name="__mpi_module" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${mpi_module}&quot;.lower()</value>
        <selection>${mpi_name}/${mpi_version}</selection>
      </parameter>
      <parameter name="export_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{
              (&quot;clang&quot;, &quot;intelmpi&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;intelmpi&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;clang&quot;, &quot;openmpi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;, &quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;clang&quot;, &quot;intel&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;intel&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;clang&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;],
              (&quot;Classic-Flang&quot;, &quot;mpich&quot;): [&quot;MPICH_CC=clang&quot;, &quot;MPICH_CXX=clang++&quot;],
              (&quot;Classic-Flang&quot;, &quot;openmpi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;OMPI_FC=flang&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;,&quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;Classic-Flang&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;OMPI_FC=flang&quot;, &quot;SLURM_MPI_TYPE=pmi2&quot;, &quot;OMPI_MCA_btl=^ofi,openib,tcp&quot;, &quot;OMPI_MCA_mtl=^ofi&quot;,&quot;UCX_UD_MLX5_TIMEOUT=2m&quot;],
              (&quot;LLVM&quot;, &quot;gompi&quot;): [&quot;OMPI_CC=clang&quot;, &quot;OMPI_CXX=clang++&quot;, &quot;CC=clang&quot;, &quot;CXX=clang++&quot;, &quot;PMIX_MCA_gds=hash&quot;, &quot;OMPI_MCA_memory=^patcher&quot;],
          }</value>
      </parameter>
      <parameter name="compiler_mpi_export" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join($export_dict.get((&quot;${compiler_name}&quot;,&quot;${mpi_name}&quot;), []))</value>
        <selection/>
      </parameter>
      <parameter name="compiler_toolchain_export" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join($export_dict.get((&quot;${compiler_name}&quot;,&quot;${toolchain_name}&quot;), []))</value>
        <selection>OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher</selection>
      </parameter>
      <parameter name="required_exports" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${compiler_mpi_export} ${compiler_toolchain_export} ${openmp_export} ${parcoach_export}</value>
        <selection> OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}</selection>
      </parameter>
      <parameter name="export" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>for item in ${required_exports}; do export &quot;$item&quot;; done</value>
        <selection>for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done</selection>
      </parameter>
      <parameter name="toolchain_name" type="string" separator="," duplicate="none" mode="text">
        <value>gompi</value>
      </parameter>
      <parameter name="toolchain_version" type="string" separator="," duplicate="none" mode="text">
        <value>2024a</value>
      </parameter>
      <parameter name="compiler_name" type="string" separator="," duplicate="none" mode="text">
        <value>LLVM</value>
      </parameter>
      <parameter name="compiler_version" type="string" separator="," duplicate="none" mode="text">
        <value>19</value>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="compile_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,tsan,tsan-cover</value>
        <selection idx="2">tsan-cover</selection>
      </parameter>
    </parameterset>
    <parents>2,3</parents>
    <iteration_siblings>6</iteration_siblings>
    <environment>
      <env name="__LMOD_STACK_OBJCXX">'Zysr'</env>
      <env name="EBVERSIONGMP">'6.3.0'</env>
      <env name="_ModuleTable016_">'b2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL1VDQy8xLjMuMC5sdWEiLApmdWxsTmFtZSA9ICJVQ0MvMS4zLjAiLApsb2FkT3JkZXIgPSAxNSwKcHJvcFQgPSB7fSwKcmVmX2NvdW50ID0gMSwKc3RhY2tEZXB0aCA9IDIsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJVQ0MvMS4zLjAiLAp3ViA9ICIwMDAwMDAwMDEuMDAwMDAwMDAzLip6ZmluYWwiLAp9LApVQ1ggPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUv'</env>
      <env name="_ModuleTable022_">'UEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMFwiKSIsICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9ob21lL3J3dGgxMjY5L21vZHVsZXNcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db3JlXCIpIiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2hvbWUvc3M1NDAyOTQvLm1vZHVsZXNcIikiLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC9tb2R1bGVzXCIpIiwKfSwKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4'</env>
      <env name="MPI_BINDIR">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/bin'</env>
      <env name="EBVERSIONOPENMPI">'5.0.3'</env>
      <env name="OBJCXX">'g++'</env>
      <env name="FLAGS_OFFLOAD_OPENMP">'-fopenmp'</env>
      <env name="EBROOTPMIX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0'</env>
      <env name="EBROOTGMP">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0'</env>
      <env name="_ModuleTable027_">'b2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2xpYnBjaWFjY2Vzcy8wLjE4LjEubHVhIiwKZnVsbE5hbWUgPSAibGlicGNpYWNjZXNzLzAuMTguMSIsCmxvYWRPcmRlciA9IDgsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAzLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAibGlicGNpYWNjZXNzLzAuMTguMSIsCndWID0gIjAwMDAwMDAwMC4wMDAwMDAwMTguMDAwMDAwMDAxLip6ZmluYWwiLAp9LApsaWJyZWFkbGluZSA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBp'</env>
      <env name="__LMOD_STACK_MPICXX">'bXBpY3h4'</env>
      <env name="FLAGS_RPATH">'-Wl,-rpath=/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/lib64'</env>
      <env name="FLAGS_OFFLOAD_OPENACC">'-fopenacc'</env>
      <env name="_ModuleTable032_">'bC9Db21waWxlci9MTFZNLzE5LjEuNyIKLCAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvTVBJL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuMyIKLCAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDLzEzLjMuMCIKLCAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAiCiwgIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkv'</env>
      <env name="PKG_CONFIG_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib/pkgconfig:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib/pkgconfig'</env>
      <env name="__LMOD_STACK_OBJC">'Z2Nj'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="__LMOD_STACK_FLAGS_OFFLOAD_OPENACC">'LWZvcGVuYWNj'</env>
      <env name="_ModuleTable011_">'cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJPcGVuTVBJLzUuMC4zIiwKd1YgPSAiczAwMDAwMDA1LjAwMDAwMDAwMC4wMDAwMDAwMDMuKnpmaW5hbCIsCn0sCk9wZW5TU0wgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvcmUvT3BlblNTTC8zLmx1YSIsCmZ1bGxOYW1lID0gIk9wZW5TU0wvMyIsCmxvYWRPcmRlciA9IDEwLApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIk9wZW5TU0wvMyIsCndWID0gIjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKUE1JeCA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5y'</env>
      <env name="_ModuleTable007_">'MDAwMy4qemZpbmFsIiwKfSwKTExWTSA9IHsKYWN0aW9uQSA9IHsKInByZXBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0xMVk0vMTkuMS43XCIpIgosICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvTExWTS8xOS4xLjdcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9NUEkvR0NDLzEzLjMuMC9PcGVuTVBJLzUuMC4zXCIpIgos'</env>
      <env name="EBROOTPRRTE">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0'</env>
      <env name="MPICC">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc --wrap-target mpicc  -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json'</env>
      <env name="_ModuleTable002_">'SFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0MvMTMuMy4wXCIpIgosICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjBcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db3JlXCIpIiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2hvbWUvcnd0aDEyNjkvbW9kdWxlc1wiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvaG9tZS9zczU0MDI5NC8ubW9kdWxlc1wiKSIsICJh'</env>
      <env name="EBEXTSLISTZ3">'z3-solver-4.13.0.0'</env>
      <env name="__LMOD_REF_COUNT_MODULEPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/LLVM/19.1.7:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCC/13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core:1;/work/ss540294/.local/easybuild/modules/all/MPI/intel/2024.2.0/impi/2021.13.0:8;/work/ss540294/.local/easybuild/modules/all/Compiler/intel/2024.2.0:8;/work/ss540294/.local/easybuild/modules/all/Compiler/LLVM/19.1.7:2;/work/ss540294/.local/easybuild/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:3;/work/ss540294/.local/easybuild/modules/all/Compiler/GCC/13.3.0:3;/work/ss540294/.local/easybuild/modules/all/Compiler/GCCcore/13.3.0:11;/work/ss540294/.local/easybuild/modules/all/Core:11;/home/rwth1269/modules:5;/home/ss540294/.modules:6;/work/ss540294/modules:6'</env>
      <env name="CPP">'cpp'</env>
      <env name="__LMOD_STACK_FLAGS_OPENMP">'LWZvcGVubXA='</env>
      <env name="OMPI_MCA_btl">'^ofi,openib,tcp'</env>
      <env name="_ModuleTable005_">'MDEzLjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKR0NDY29yZSA9IHsKYWN0aW9uQSA9IHsKInByZXBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wXCIpIiwKfSwKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29yZS9HQ0Njb3JlLzEzLjMuMC5sdWEiLApmdWxsTmFtZSA9ICJHQ0Njb3JlLzEzLjMuMCIsCmxvYWRPcmRlciA9IDEsCnByb3BUID0gewp0eXBlXyA9IHsKY29tcGlsZXIgPSAxLAp9LAp9'</env>
      <env name="_ModuleTable021_">'cmRlciA9IDI4LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMSwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImNVUkwvOC43LjEiLAp3ViA9ICIwMDAwMDAwMDguMDAwMDAwMDA3LjAwMDAwMDAwMS4qemZpbmFsIiwKfSwKZ29tcGkgPSB7CmFjdGlvbkEgPSB7CiJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvTVBJL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuM1wiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQy8xMy4zLjBcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxF'</env>
      <env name="_ModuleTable030_">'dGl2ZSIsCnVzZXJOYW1lID0gIm5jdXJzZXMvNi41IiwKd1YgPSAiMDAwMDAwMDA2LjAwMDAwMDAwNS4qemZpbmFsIiwKfSwKbnVtYWN0bCA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvbnVtYWN0bC8yLjAuMTgubHVhIiwKZnVsbE5hbWUgPSAibnVtYWN0bC8yLjAuMTgiLApsb2FkT3JkZXIgPSA1LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIm51bWFjdGwvMi4wLjE4IiwKd1YgPSAiMDAwMDAwMDAyLjAwMDAwMDAwMC4wMDAwMDAwMTguKnpmaW5hbCIsCn0sCnps'</env>
      <env name="__LMOD_REF_COUNT_ACLOCAL_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share/aclocal:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/aclocal:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/aclocal:1'</env>
      <env name="EBROOTOPENMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0'</env>
      <env name="OMPI_MCA_btl_openib_ib_timeout">'24'</env>
      <env name="EBDEVELPRRTE">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-PRRTE-3.0.5-easybuild-devel'</env>
      <env name="OMPI_MCA_btl_openib_allow_ib">'1'</env>
      <env name="EBVERSIONUCX">'1.16.0'</env>
      <env name="EBVERSIONZ3">'4.13.0'</env>
      <env name="EBROOTLIBPCIACCESS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0'</env>
      <env name="EBVERSIONUCC">'1.3.0'</env>
      <env name="MPICXX">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx --wrap-target mpicxx  -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json'</env>
      <env name="EBROOTHWLOC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0'</env>
      <env name="MPIFC">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort --wrap-target mpif90  -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json'</env>
      <env name="EBDEVELGOMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/gompi/2024a/easybuild/Core-gompi-2024a-easybuild-devel'</env>
      <env name="EBVERSIONNUMACTL">'2.0.18'</env>
      <env name="EBROOTLIBXML2">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0'</env>
      <env name="EBVERSIONLIBEVENT">'2.1.12'</env>
      <env name="MANPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share/man:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share/man:/usr/local_host/man:/usr/local_rwth/man:/usr/man:/usr/share/man:/usr/local/man:/usr/local/share/man:/opt/slurm/current/share/man'</env>
      <env name="__LMOD_STACK_FLAGS_FAST_NO_FPOPT">'LU8zIC1tdHVuZT1uYXRpdmU='</env>
      <env name="__LMOD_STACK_FLAGS_ARCH64">'LW02NA=='</env>
      <env name="RWTH_HPC_FAMILY_MPI">'OpenMPI'</env>
      <env name="EBVERSIONPRRTE">'3.0.5'</env>
      <env name="CXX">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx'</env>
      <env name="CXXFLAGS">' -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json'</env>
      <env name="MPI_INCLUDE">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/include'</env>
      <env name="FLAGS_OPENMP">'-fopenmp'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_STACK_FLAGS_AUTOPAR">'false'</env>
      <env name="_ModuleTable008_">'ICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDLzEzLjMuMFwiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wXCIpIgosICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29yZVwiKSIsICJhcHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi9ob21lL3J3dGgxMjY5L21vZHVsZXNcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2hvbWUv'</env>
      <env name="EBDEVELLIBEVENT">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-libevent-2.1.12-easybuild-devel'</env>
      <env name="__LMOD_REF_COUNT_CMAKE_PREFIX_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0:1'</env>
      <env name="EBVERSIONHWLOC">'2.10.0'</env>
      <env name="__LMOD_STACK_FLAGS_PIC">'LWZQSUMgLXNoYXJlZA=='</env>
      <env name="_ModuleTable013_">'ZS8xMy4zLjAvUFJSVEUvMy4wLjUubHVhIiwKZnVsbE5hbWUgPSAiUFJSVEUvMy4wLjUiLApsb2FkT3JkZXIgPSAxNCwKcHJvcFQgPSB7fSwKcmVmX2NvdW50ID0gMSwKc3RhY2tEZXB0aCA9IDIsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJQUlJURS8zLjAuNSIsCndWID0gIjAwMDAwMDAwMy4wMDAwMDAwMDAuMDAwMDAwMDA1Lip6ZmluYWwiLAp9LApQeXRob24gPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL1B5dGhvbi8zLjEyLjMubHVhIiwKZnVsbE5hbWUgPSAiUHl0aG9uLzMuMTIuMyIsCmxvYWRPcmRlciA9'</env>
      <env name="EBDEVELOPENMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/easybuild/Compiler-GCC-13.3.0-OpenMPI-5.0.3-easybuild-devel'</env>
      <env name="EBROOTZ3">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0'</env>
      <env name="__LMOD_REF_COUNT_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/sbin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/bin:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/bin:1;/home/ss540294/.local/lcov-2.3.1/bin:2;/home/ss540294/software/stress/usr/bin:2;/home/ss540294/software/ccache/bin:2;/home/ss540294/.local/bin:2;/home/ss540294/software/mpiP/bin:2;/home/ss540294/software/git/bin:2;/home/ss540294/htop/bin:2;/home/ss540294/nvim-linux-x86_64/bin:2;/rwthfs/rz/cluster/home/ss540294/.vscode-server/cli/servers/Stable-cb0c47c0cfaad0757385834bd89d410c78a856c0/server/bin/remote-cli:1;/usr/local_host/bin:1;/usr/local_host/sbin:1;/usr/local_rwth/bin:1;/usr/local_rwth/sbin:1;/usr/bin:1;/usr/sbin:1;/bin:1;/sbin:1;/opt/singularity/bin:1;/usr/local/bin:1;/usr/local/sbin:1;/opt/slurm/current/sbin:1;/opt/slurm/current/bin:1;/home/ss540294/dotfiles/tools/diff-so-fancy:2;/home/ss540294/dotfiles/zsh/plugins/fzf/bin:1;/home/ss540294/.vscode-server/extensions/ms-python.debugpy-2025.10.0-linux-x64/bundled/scripts/noConfigScripts:1;/home/ss540294/.vscode-server/data/User/globalStorage/github.copilot-chat/debugCommand:1'</env>
      <env name="_ModuleTable018_">'NCwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIlhaLzUuNC41IiwKd1YgPSAiMDAwMDAwMDA1LjAwMDAwMDAwNC4wMDAwMDAwMDUuKnpmaW5hbCIsCn0sClozID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9aMy80LjEzLjAubHVhIiwKZnVsbE5hbWUgPSAiWjMvNC4xMy4wIiwKbG9hZE9yZGVyID0gMjYsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAxLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiWjMvNC4xMy4wIiwKd1YgPSAiMDAwMDAwMDA0LjAwMDAwMDAxMy4qemZpbmFs'</env>
      <env name="_ModuleTable015_">'ICJTUUxpdGUvMy40NS4zIiwKd1YgPSAiMDAwMDAwMDAzLjAwMDAwMDA0NS4wMDAwMDAwMDMuKnpmaW5hbCIsCn0sClRjbCA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvVGNsLzguNi4xNC5sdWEiLApmdWxsTmFtZSA9ICJUY2wvOC42LjE0IiwKbG9hZE9yZGVyID0gMjEsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSA0LApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiVGNsLzguNi4xNCIsCndWID0gIjAwMDAwMDAwOC4wMDAwMDAwMDYuMDAwMDAwMDE0Lip6ZmluYWwiLAp9LApVQ0MgPSB7CmZuID0gIi9jdm1mcy9z'</env>
      <env name="FLAGS_FAST_NO_FPOPT">'-O3 -mtune=native'</env>
      <env name="_ModuleTable_Sz_">'34'</env>
      <env name="__LMOD_REF_COUNT_LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:1;/home/ss540294/bin/lib:2'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="_ModuleTable023_">'L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29yZS9nb21waS8yMDI0YS5sdWEiLApmdWxsTmFtZSA9ICJnb21waS8yMDI0YSIsCmxvYWRPcmRlciA9IDE3LApwcm9wVCA9IHsKdHlwZV8gPSB7CnRvb2xjaGFpbiA9IDEsCn0sCn0sCnN0YWNrRGVwdGggPSAwLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiZ29tcGkvMjAyNGEiLAp3ViA9ICJzMDAwMDIwMjQuKmEuKnpmaW5hbCIsCn0sCmh3bG9jID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9od2xvYy8yLjEwLjAubHVhIiwKZnVs'</env>
      <env name="__LMOD_STACK_F77">'Z2ZvcnRyYW4gLWZuby1zaWduLXplcm8='</env>
      <env name="__LMOD_REF_COUNT_PKG_CONFIG_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib/pkgconfig:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib/pkgconfig:1'</env>
      <env name="EBROOTGCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/3.3.0'</env>
      <env name="__LMOD_STACK_LASTCOMPILER">'R0NDY29yZQ=='</env>
      <env name="FLAGS_FAST">'-O3 -ffast-math -mtune=native'</env>
      <env name="__LMOD_REF_COUNT_CPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages/z3/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include/python3.12:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include/libxml2:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/include:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/include:1'</env>
      <env name="__LMOD_STACK_MPIF77">'bXBpZm9ydA=='</env>
      <env name="PMIX_MCA_psec">'^munge'</env>
      <env name="MPI_LIBDIR">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib'</env>
      <env name="EBROOTNUMACTL">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0'</env>
      <env name="_ModuleTable029_">'Mi4xMi43IiwKbG9hZE9yZGVyID0gNywKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9IDMsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJsaWJ4bWwyLzIuMTIuNyIsCndWID0gIjAwMDAwMDAwMi4wMDAwMDAwMTIuMDAwMDAwMDA3Lip6ZmluYWwiLAp9LApuY3Vyc2VzID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9uY3Vyc2VzLzYuNS5sdWEiLApmdWxsTmFtZSA9ICJuY3Vyc2VzLzYuNSIsCmxvYWRPcmRlciA9IDE4LApwcm9wVCA9IHt9LApyZWZfY291bnQgPSAxLApzdGFja0RlcHRoID0gMSwKc3RhdHVzID0gImFj'</env>
      <env name="OMPI_MCA_mtl">'^psm'</env>
      <env name="CMAKE_PREFIX_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0'</env>
      <env name="MPIF77">'mpifort'</env>
      <env name="_ModuleTable010_">'ewphY3Rpb25BID0gewoicHJlcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvTVBJL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuM1wiKSIsCn0sCmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQy8xMy4zLjAvT3Blbk1QSS81LjAuMy5sdWEiLApmdWxsTmFtZSA9ICJPcGVuTVBJLzUuMC4zIiwKbG9hZE9yZGVyID0gMTYsCnByb3BUID0gewp0eXBlXyA9IHsKbXBpID0gMSwKfSwKfSwKc3RhY2tEZXB0aCA9IDEsCnN0YXR1'</env>
      <env name="OMPI_MCA_hwloc_base_binding_policy">'none'</env>
      <env name="_ModuleTable024_">'bE5hbWUgPSAiaHdsb2MvMi4xMC4wIiwKbG9hZE9yZGVyID0gOSwKcHJvcFQgPSB7fSwKcmVmX2NvdW50ID0gMSwKc3RhY2tEZXB0aCA9IDIsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJod2xvYy8yLjEwLjAiLAp3ViA9ICIwMDAwMDAwMDIuMDAwMDAwMDEwLip6ZmluYWwiLAp9LApsaWJhcmNoaXZlID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9saWJhcmNoaXZlLzMuNy40Lmx1YSIsCmZ1bGxOYW1lID0gImxpYmFyY2hpdmUvMy43LjQiLApsb2FkT3JkZXIgPSAyOSwKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9'</env>
      <env name="EBVERSIONGCC">'13.3.0'</env>
      <env name="__LMOD_STACK_FLAGS_FREE">'LWZmcmVlLWZvcm0='</env>
      <env name="MPITEST">'/opt/MPI/bin/mpitest'</env>
      <env name="EBDEVELGCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCC/13.3.0/easybuild/Core-GCC-13.3.0-easybuild-devel'</env>
      <env name="EBROOTGOMPI">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/gompi/2024a'</env>
      <env name="_ModuleTable003_">'cHBlbmRfcGF0aChcIk1PRFVMRVBBVEhcIixcIi93b3JrL3NzNTQwMjk0L21vZHVsZXNcIikiLAp9LApmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9DTWFrZS8zLjI5LjMubHVhIiwKZnVsbE5hbWUgPSAiQ01ha2UvMy4yOS4zIiwKbG9hZE9yZGVyID0gMzAsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAwLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiQ01ha2UvMy4yOS4zIiwKd1YgPSAiczAwMDAwMDAzLjAwMDAwMDAyOS4wMDAwMDAwMDMuKnpmaW5hbCIsCn0sCkdDQyA9IHsKYWN0aW9uQSA9IHsKInByZXBlbmRfcGF0'</env>
      <env name="__LMOD_STACK_FC">'Z2ZvcnRyYW4='</env>
      <env name="__LMOD_REF_COUNT_XDG_DATA_DIRS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share:1;/usr/local/share:1;/usr/share:1'</env>
      <env name="__LMOD_STACK_CPP">'Y3Bw'</env>
      <env name="EBVERSIONLLVM">'19.1.7'</env>
      <env name="LASTCOMPILER">'GCCcore'</env>
      <env name="R_MPI_ROOT">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0'</env>
      <env name="OMPI_MCA_memory">'^patcher'</env>
      <env name="PYTHONPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/python:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/easybuild/python'</env>
      <env name="__LMOD_REF_COUNT_PYTHONPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/python:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/easybuild/python:1'</env>
      <env name="EBDEVELZ3">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-Z3-4.13.0-easybuild-devel'</env>
      <env name="F77">'gfortran -fno-sign-zero'</env>
      <env name="ACLOCAL_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share/aclocal:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/aclocal:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/aclocal'</env>
      <env name="EBVERSIONGOMPI">'2024a'</env>
      <env name="ASAN_SYMBOLIZER_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/bin/llvm-symbolizer'</env>
      <env name="EBDEVELLIBPCIACCESS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-libpciaccess-0.18.1-easybuild-devel'</env>
      <env name="LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:/home/ss540294/bin/lib'</env>
      <env name="__LMOD_STACK_FLAGS_FAST">'LU8zIC1mZmFzdC1tYXRoIC1tdHVuZT1uYXRpdmU='</env>
      <env name="LASTMPI">'OpenMPI'</env>
      <env name="EBDEVELUCX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-UCX-1.16.0-easybuild-devel'</env>
      <env name="LOADEDMODULES">'GCCcore/13.3.0:zlib/1.3.1:binutils/2.42:GCC/13.3.0:numactl/2.0.18:XZ/5.4.5:libxml2/2.12.7:libpciaccess/0.18.1:hwloc/2.10.0:OpenSSL/3:libevent/2.1.12:UCX/1.16.0:PMIx/5.0.2:PRRTE/3.0.5:UCC/1.3.0:OpenMPI/5.0.3:gompi/2024a:ncurses/6.5:bzip2/1.0.8:libreadline/8.2:Tcl/8.6.14:SQLite/3.45.3:libffi/3.4.5:Python/3.12.3:GMP/6.3.0:Z3/4.13.0:LLVM/19.1.7:cURL/8.7.1:libarchive/3.7.4:CMake/3.29.3'</env>
      <env name="EBDEVELUCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-UCC-1.3.0-easybuild-devel'</env>
      <env name="OMPI_CC">'clang'</env>
      <env name="SHLVL">'4'</env>
      <env name="_ModuleTable012_">'d3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvUE1JeC81LjAuMi5sdWEiLApmdWxsTmFtZSA9ICJQTUl4LzUuMC4yIiwKbG9hZE9yZGVyID0gMTMsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiUE1JeC81LjAuMiIsCndWID0gIjAwMDAwMDAwNS4wMDAwMDAwMDAuMDAwMDAwMDAyLip6ZmluYWwiLAp9LApQUlJURSA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29y'</env>
      <env name="OMPI_MCA_hwloc_base_report_bindings">'0'</env>
      <env name="_ModuleTable006_">'LApzdGFja0RlcHRoID0gMiwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIkdDQ2NvcmUvMTMuMy4wIiwKd1YgPSAiczAwMDAwMDEzLjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKR01QID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9HTVAvNi4zLjAubHVhIiwKZnVsbE5hbWUgPSAiR01QLzYuMy4wIiwKbG9hZE9yZGVyID0gMjUsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiR01QLzYuMy4wIiwKd1YgPSAiMDAwMDAwMDA2LjAwMDAw'</env>
      <env name="_ModuleTable026_">'d1YgPSAiMDAwMDAwMDAyLjAwMDAwMDAwMS4wMDAwMDAwMTIuKnpmaW5hbCIsCn0sCmxpYmZmaSA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvbGliZmZpLzMuNC41Lmx1YSIsCmZ1bGxOYW1lID0gImxpYmZmaS8zLjQuNSIsCmxvYWRPcmRlciA9IDIzLApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImxpYmZmaS8zLjQuNSIsCndWID0gIjAwMDAwMDAwMy4wMDAwMDAwMDQuMDAwMDAwMDA1Lip6ZmluYWwiLAp9LApsaWJwY2lhY2Nlc3MgPSB7CmZuID0gIi9jdm1mcy9z'</env>
      <env name="PMIX_MCA_gds">'hash'</env>
      <env name="EBDEVELNUMACTL">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-numactl-2.0.18-easybuild-devel'</env>
      <env name="_ModuleTable033_">'eDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvcmUiLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9NUEkvaW50ZWwvMjAyNC4yLjAvaW1waS8yMDIxLjEzLjAiCiwgIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxlcy9hbGwvQ29tcGlsZXIvaW50ZWwvMjAyNC4yLjAiLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9MTFZNLzE5LjEuNyIKLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9NUEkvR0NDLzEzLjMuMC9PcGVuTVBJLzUuMC4zIiwgIi93b3JrL3NzNTQwMjk0Ly5sb2NhbC9lYXN5YnVpbGQvbW9kdWxl'</env>
      <env name="__LMOD_STACK_FLAGS_RPATH">'LVdsLC1ycGF0aD0vY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9zb2Z0d2FyZS9HQ0Njb3JlLzEzLjMuMC9saWI2NA=='</env>
      <env name="_ModuleTable017_">'MTMuMy4wL1VDWC8xLjE2LjAubHVhIiwKZnVsbE5hbWUgPSAiVUNYLzEuMTYuMCIsCmxvYWRPcmRlciA9IDEyLApwcm9wVCA9IHt9LApyZWZfY291bnQgPSAxLApzdGFja0RlcHRoID0gMiwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIlVDWC8xLjE2LjAiLAp3ViA9ICIwMDAwMDAwMDEuMDAwMDAwMDE2Lip6ZmluYWwiLAp9LApYWiA9IHsKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvWFovNS40LjUubHVhIiwKZnVsbE5hbWUgPSAiWFovNS40LjUiLApsb2FkT3JkZXIgPSA2LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0g'</env>
      <env name="EBROOTUCX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0'</env>
      <env name="EBDEVELHWLOC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-hwloc-2.10.0-easybuild-devel'</env>
      <env name="_ModuleTable009_">'c3M1NDAyOTQvLm1vZHVsZXNcIikiLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC9tb2R1bGVzXCIpIiwKfSwKZm4gPSAiL2N2bWZzL3NvZnR3YXJlLmhwYy5yd3RoLmRlL0xpbnV4L1JIOS94ODZfNjQvaW50ZWwvc2FwcGhpcmVyYXBpZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvTExWTS8xOS4xLjcubHVhIiwKZnVsbE5hbWUgPSAiTExWTS8xOS4xLjciLApsb2FkT3JkZXIgPSAyNywKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9IDAsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJMTFZNLzE5LjEuNyIsCndWID0gIjAwMDAwMDAxOS4wMDAwMDAwMDEuMDAwMDAwMDA3Lip6ZmluYWwiLAp9LApPcGVuTVBJID0g'</env>
      <env name="EBROOTUCC">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0'</env>
      <env name="__LMOD_REF_COUNT_MANPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share/man:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share/man:1;/usr/local_host/man:1;/usr/local_rwth/man:1;/usr/man:1;/usr/share/man:1;/usr/local/man:1;/usr/local/share/man:1;/opt/slurm/current/share/man:1'</env>
      <env name="EBDEVELGMP">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-GMP-6.3.0-easybuild-devel'</env>
      <env name="_ModuleTable034_">'cy9hbGwvQ29tcGlsZXIvR0NDLzEzLjMuMCIKLCAiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMCIsICIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL0NvcmUiLCAiL2hvbWUvcnd0aDEyNjkvbW9kdWxlcyIsICIvaG9tZS9zczU0MDI5NC8ubW9kdWxlcyIsICIvd29yay9zczU0MDI5NC9tb2R1bGVzIiwKfSwKc3lzdGVtQmFzZU1QQVRIID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvcmUiLAp9Cg=='</env>
      <env name="_ModuleTable031_">'aWIgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL3psaWIvMS4zLjEubHVhIiwKZnVsbE5hbWUgPSAiemxpYi8xLjMuMSIsCmxvYWRPcmRlciA9IDIsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAzLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiemxpYi8xLjMuMSIsCndWID0gIjAwMDAwMDAwMS4wMDAwMDAwMDMuMDAwMDAwMDAxLip6ZmluYWwiLAp9LAp9LAptcGF0aEEgPSB7CiIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2Fs'</env>
      <env name="__LMOD_STACK_FLAGS_OFFLOAD_OPENMP">'LWZvcGVubXA='</env>
      <env name="_ModuleTable001_">'X01vZHVsZVRhYmxlXyA9IHsKTVR2ZXJzaW9uID0gMywKY19yZWJ1aWxkVGltZSA9IGZhbHNlLApjX3Nob3J0VGltZSA9IGZhbHNlLApkZXB0aFQgPSB7fSwKZmFtaWx5ID0gewptcGkgPSAiT3Blbk1QSSIsCn0sCm1UID0gewpDTWFrZSA9IHsKYWN0aW9uQSA9IHsKImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFUSFwiLFwiL3dvcmsvc3M1NDAyOTQvLmxvY2FsL2Vhc3lidWlsZC9tb2R1bGVzL2FsbC9Db21waWxlci9MTFZNLzE5LjEuN1wiKSIKLCAiYXBwZW5kX3BhdGgoXCJNT0RVTEVQQVRIXCIsXCIvd29yay9zczU0MDI5NC8ubG9jYWwvZWFzeWJ1aWxkL21vZHVsZXMvYWxsL01QSS9HQ0MvMTMuMy4wL09wZW5NUEkvNS4wLjNcIikiCiwgImFwcGVuZF9wYXRoKFwiTU9EVUxFUEFU'</env>
      <env name="_ModuleTable025_">'IDEsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJsaWJhcmNoaXZlLzMuNy40IiwKd1YgPSAiMDAwMDAwMDAzLjAwMDAwMDAwNy4wMDAwMDAwMDQuKnpmaW5hbCIsCn0sCmxpYmV2ZW50ID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9saWJldmVudC8yLjEuMTIubHVhIiwKZnVsbE5hbWUgPSAibGliZXZlbnQvMi4xLjEyIiwKbG9hZE9yZGVyID0gMTEsCnByb3BUID0ge30sCnJlZl9jb3VudCA9IDEsCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAibGliZXZlbnQvMi4xLjEyIiwK'</env>
      <env name="LD_LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/lib64:/home/ss540294/opt/lib:/home/ss540294/bin/lib:/home/ss540294/jack/usr/lib64'</env>
      <env name="__LMOD_STACK_FLAGS_RUNTIME_LINKER">'LVdsLC1ycGF0aD0='</env>
      <env name="_ModuleTable014_">'IDI0LApwcm9wVCA9IHt9LApyZWZfY291bnQgPSAxLApzdGFja0RlcHRoID0gMiwKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gIlB5dGhvbi8zLjEyLjMiLAp3ViA9ICIwMDAwMDAwMDMuMDAwMDAwMDEyLjAwMDAwMDAwMy4qemZpbmFsIiwKfSwKU1FMaXRlID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9TUUxpdGUvMy40NS4zLmx1YSIsCmZ1bGxOYW1lID0gIlNRTGl0ZS8zLjQ1LjMiLApsb2FkT3JkZXIgPSAyMiwKcHJvcFQgPSB7fSwKc3RhY2tEZXB0aCA9IDMsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9'</env>
      <env name="_ModuleTable004_">'aChcIk1PRFVMRVBBVEhcIixcIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQy8xMy4zLjBcIikiLAp9LApmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlkcy9tb2R1bGVzL2FsbC9Db3JlL0dDQy8xMy4zLjAubHVhIiwKZnVsbE5hbWUgPSAiR0NDLzEzLjMuMCIsCmxvYWRPcmRlciA9IDQsCnByb3BUID0gewp0eXBlXyA9IHsKdG9vbGNoYWluID0gMSwKfSwKfSwKc3RhY2tEZXB0aCA9IDEsCnN0YXR1cyA9ICJhY3RpdmUiLAp1c2VyTmFtZSA9ICJHQ0MvMTMuMy4wIiwKd1YgPSAiczAwMDAw'</env>
      <env name="LMOD_FAMILY_MPI_VERSION">'5.0.3'</env>
      <env name="_ModuleTable020_">'cy9tb2R1bGVzL2FsbC9Db21waWxlci9HQ0Njb3JlLzEzLjMuMC9iemlwMi8xLjAuOC5sdWEiLApmdWxsTmFtZSA9ICJiemlwMi8xLjAuOCIsCmxvYWRPcmRlciA9IDE5LApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImJ6aXAyLzEuMC44IiwKd1YgPSAiMDAwMDAwMDAxLjAwMDAwMDAwMC4wMDAwMDAwMDguKnpmaW5hbCIsCn0sCmNVUkwgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2NVUkwvOC43LjEubHVhIiwKZnVsbE5hbWUgPSAiY1VSTC84LjcuMSIsCmxvYWRP'</env>
      <env name="LMOD_FAMILY_MPI">'OpenMPI'</env>
      <env name="FC">'gfortran'</env>
      <env name="__LMOD_STACK_CXX">'Zysr'</env>
      <env name="EBVERSIONPMIX">'5.0.2'</env>
      <env name="SLURM_MPI_TYPE">'pmix'</env>
      <env name="__LMOD_STACK_CC">'Z2Nj'</env>
      <env name="OBJC">'gcc'</env>
      <env name="XDG_DATA_DIRS">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/share:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/share:/usr/local/share:/usr/share'</env>
      <env name="__LMOD_STACK_MPIFC">'bXBpZm9ydA=='</env>
      <env name="EBVERSIONLIBXML2">'2.12.7'</env>
      <env name="PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/CMake/3.29.3-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/sbin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/bin:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/bin:/home/ss540294/.local/lcov-2.3.1/bin:/home/ss540294/software/stress/usr/bin:/home/ss540294/software/ccache/bin:/home/ss540294/.local/bin:/home/ss540294/software/mpiP/bin:/home/ss540294/software/git/bin:/home/ss540294/htop/bin:/home/ss540294/nvim-linux-x86_64/bin:/rwthfs/rz/cluster/home/ss540294/.vscode-server/cli/servers/Stable-cb0c47c0cfaad0757385834bd89d410c78a856c0/server/bin/remote-cli:/usr/local_host/bin:/usr/local_host/sbin:/usr/local_rwth/bin:/usr/local_rwth/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/opt/singularity/bin:/usr/local/bin:/usr/local/sbin:/opt/slurm/current/sbin:/opt/slurm/current/bin:/home/ss540294/dotfiles/tools/diff-so-fancy:/home/ss540294/dotfiles/zsh/plugins/fzf/bin:/home/ss540294/.vscode-server/extensions/ms-python.debugpy-2025.10.0-linux-x64/bundled/scripts/noConfigScripts:/home/ss540294/.vscode-server/data/User/globalStorage/github.copilot-chat/debugCommand'</env>
      <env name="EBROOTLIBEVENT">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0'</env>
      <env name="MODULEPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/LLVM/19.1.7:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCC/13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core:/work/ss540294/.local/easybuild/modules/all/MPI/intel/2024.2.0/impi/2021.13.0:/work/ss540294/.local/easybuild/modules/all/Compiler/intel/2024.2.0:/work/ss540294/.local/easybuild/modules/all/Compiler/LLVM/19.1.7:/work/ss540294/.local/easybuild/modules/all/MPI/GCC/13.3.0/OpenMPI/5.0.3:/work/ss540294/.local/easybuild/modules/all/Compiler/GCC/13.3.0:/work/ss540294/.local/easybuild/modules/all/Compiler/GCCcore/13.3.0:/work/ss540294/.local/easybuild/modules/all/Core:/home/rwth1269/modules:/home/ss540294/.modules:/work/ss540294/modules'</env>
      <env name="CC">'clang'</env>
      <env name="CFLAGS">' -g --tsan-json /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000006_compile_tsan-cover/work/compile_cover/contract_messages.json'</env>
      <env name="_LMFILES_">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/GCCcore/13.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/zlib/1.3.1.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/binutils/2.42.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/GCC/13.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/numactl/2.0.18.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/XZ/5.4.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libxml2/2.12.7.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libpciaccess/0.18.1.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/hwloc/2.10.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/OpenSSL/3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libevent/2.1.12.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/UCX/1.16.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/PMIx/5.0.2.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/PRRTE/3.0.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/UCC/1.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCC/13.3.0/OpenMPI/5.0.3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Core/gompi/2024a.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/ncurses/6.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/bzip2/1.0.8.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libreadline/8.2.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/Tcl/8.6.14.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/SQLite/3.45.3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libffi/3.4.5.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/Python/3.12.3.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/GMP/6.3.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/Z3/4.13.0.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/LLVM/19.1.7.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/cURL/8.7.1.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/libarchive/3.7.4.lua:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/modules/all/Compiler/GCCcore/13.3.0/CMake/3.29.3.lua'</env>
      <env name="_ModuleTable028_">'ZHMvbW9kdWxlcy9hbGwvQ29tcGlsZXIvR0NDY29yZS8xMy4zLjAvbGlicmVhZGxpbmUvOC4yLmx1YSIsCmZ1bGxOYW1lID0gImxpYnJlYWRsaW5lLzguMiIsCmxvYWRPcmRlciA9IDIwLApwcm9wVCA9IHt9LApzdGFja0RlcHRoID0gMywKc3RhdHVzID0gImFjdGl2ZSIsCnVzZXJOYW1lID0gImxpYnJlYWRsaW5lLzguMiIsCndWID0gIjAwMDAwMDAwOC4wMDAwMDAwMDIuKnpmaW5hbCIsCn0sCmxpYnhtbDIgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2xpYnhtbDIvMi4xMi43Lmx1YSIsCmZ1bGxOYW1lID0gImxpYnhtbDIv'</env>
      <env name="__LMOD_STACK_MPICC">'bXBpY2M='</env>
      <env name="FLAGS_FREE">'-ffree-form'</env>
      <env name="EBDEVELPMIX">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-PMIx-5.0.2-easybuild-devel'</env>
      <env name="OMPI_CXX">'clang++'</env>
      <env name="__LMOD_STACK_FLAGS_DEBUG">'LWc='</env>
      <env name="__LMOD_STACK_LASTMPI">'T3Blbk1QSQ=='</env>
      <env name="__LMOD_REF_COUNT_LD_LIBRARY_PATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib/x86_64-unknown-linux-gnu:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/lib64:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/lib:1;/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/lib64:1;/home/ss540294/opt/lib:2;/home/ss540294/bin/lib:2;/home/ss540294/jack/usr/lib64:2'</env>
      <env name="EBDEVELLIBXML2">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-libxml2-2.12.7-easybuild-devel'</env>
      <env name="_ModuleTable019_">'IiwKfSwKYmludXRpbHMgPSB7CmZuID0gIi9jdm1mcy9zb2Z0d2FyZS5ocGMucnd0aC5kZS9MaW51eC9SSDkveDg2XzY0L2ludGVsL3NhcHBoaXJlcmFwaWRzL21vZHVsZXMvYWxsL0NvbXBpbGVyL0dDQ2NvcmUvMTMuMy4wL2JpbnV0aWxzLzIuNDIubHVhIiwKZnVsbE5hbWUgPSAiYmludXRpbHMvMi40MiIsCmxvYWRPcmRlciA9IDMsCnByb3BUID0ge30sCnN0YWNrRGVwdGggPSAyLApzdGF0dXMgPSAiYWN0aXZlIiwKdXNlck5hbWUgPSAiYmludXRpbHMvMi40MiIsCndWID0gIjAwMDAwMDAwMi4wMDAwMDAwNDIuKnpmaW5hbCIsCn0sCmJ6aXAyID0gewpmbiA9ICIvY3ZtZnMvc29mdHdhcmUuaHBjLnJ3dGguZGUvTGludXgvUkg5L3g4Nl82NC9pbnRlbC9zYXBwaGlyZXJhcGlk'</env>
      <env name="CPATH">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libarchive/3.7.4-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/cURL/8.7.1-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Z3/4.13.0-GCCcore-13.3.0/lib/python3.12/site-packages/z3/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GMP/6.3.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include/python3.12:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Python/3.12.3-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libffi/3.4.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/SQLite/3.45.3-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/Tcl/8.6.14-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libreadline/8.2-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/bzip2/1.0.8-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/ncurses/6.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenMPI/5.0.3-GCC-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCC/1.3.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PRRTE/3.0.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/PMIx/5.0.2-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/UCX/1.16.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libevent/2.1.12-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/OpenSSL/3/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/hwloc/2.10.0-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libpciaccess/0.18.1-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include/libxml2:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/libxml2/2.12.7-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/XZ/5.4.5-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/numactl/2.0.18-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/binutils/2.42-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/zlib/1.3.1-GCCcore-13.3.0/include:/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/GCCcore/13.3.0/include'</env>
      <env name="EBVERSIONLIBPCIACCESS">'0.18.1'</env>
      <env name="EBROOTLLVM">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0'</env>
      <env name="RWTH_HPC_FAMILY_MPI_VERSION">'5.0.3'</env>
      <env name="EBDEVELLLVM">'/cvmfs/software.hpc.rwth.de/Linux/RH9/x86_64/intel/sapphirerapids/software/LLVM/19.1.7-GCCcore-13.3.0/easybuild/Compiler-GCCcore-13.3.0-LLVM-19.1.7-easybuild-devel'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
      <nonenv name="EBROOTIMKL"/>
      <nonenv name="TBBROOT"/>
      <nonenv name="FLAGS_intel_compilers_DEBUG"/>
      <nonenv name="ONEAPI_ROOT"/>
      <nonenv name="I_MPI_FABRICS"/>
      <nonenv name="FLAGS_intel_compilers_FAST_NO_FPOPT"/>
      <nonenv name="EBDEVELHTOP"/>
      <nonenv name="FPGA_VARS_DIR"/>
      <nonenv name="I_MPI_CC"/>
      <nonenv name="I_MPI_ROOT"/>
      <nonenv name="EBVERSIONIMPI"/>
      <nonenv name="MPI_NAME"/>
      <nonenv name="I_MPI_JOB_SIGNAL_PROPAGATION"/>
      <nonenv name="FI_PROVIDER_PATH"/>
      <nonenv name="DIAGUTIL_PATH"/>
      <nonenv name="FLAGS_intel_compilers_OPENMP"/>
      <nonenv name="EBROOTIMPI"/>
      <nonenv name="EBDEVELIMPI"/>
      <nonenv name="EBROOTINTELMINCOMPILERS"/>
      <nonenv name="intel_compilers_FC"/>
      <nonenv name="EBDEVELIMKL"/>
      <nonenv name="EBROOTIMKLMINFFTW"/>
      <nonenv name="FLEXIBLAS_LIBRARY_PATH"/>
      <nonenv name="FLAGS_intel_compilers_RUNTIME_LINKER"/>
      <nonenv name="EBVERSIONINTEL"/>
      <nonenv name="GDB_INFO"/>
      <nonenv name="EBVERSIONINTELMINCOMPILERS"/>
      <nonenv name="FLAGS_intel_compilers_ARCH64"/>
      <nonenv name="__LMOD_REF_COUNT_INFOPATH"/>
      <nonenv name="EBVERSIONIMKLMINFFTW"/>
      <nonenv name="EBVERSIONIMKL"/>
      <nonenv name="FLAGS_intel_compilers_PIC"/>
      <nonenv name="EBDEVELIMKLMINFFTW"/>
      <nonenv name="__LMOD_REF_COUNT_DIAGUTIL_PATH"/>
      <nonenv name="FLAGS_intel_compilers_FAST"/>
      <nonenv name="__LMOD_REF_COUNT_NLSPATH"/>
      <nonenv name="CMPLR_ROOT"/>
      <nonenv name="INTELARCH"/>
      <nonenv name="INFOPATH"/>
      <nonenv name="I_MPI_CXX"/>
      <nonenv name="intel_compilers_CXX"/>
      <nonenv name="__LMOD_REF_COUNT_FI_PROVIDER_PATH"/>
      <nonenv name="intel_compilers_CC"/>
      <nonenv name="MKL_EXAMPLES"/>
      <nonenv name="FLAGS_AUTOPAR"/>
      <nonenv name="intel_compilers_F77"/>
      <nonenv name="I_MPI_PIN"/>
      <nonenv name="OCL_ICD_FILENAMES"/>
      <nonenv name="EBROOTHTOP"/>
      <nonenv name="FLAGS_intel_compilers_RPATH"/>
      <nonenv name="CLASSPATH"/>
      <nonenv name="INTELFPGAOCLSDKROOT"/>
      <nonenv name="EBDEVELINTEL"/>
      <nonenv name="MKLROOT"/>
      <nonenv name="NLSPATH"/>
      <nonenv name="EBVERSIONHTOP"/>
      <nonenv name="EBROOTINTEL"/>
      <nonenv name="INTEL_PYTHONHOME"/>
      <nonenv name="FLAGS_intel_compilers_AUTOPAR"/>
      <nonenv name="FLAGS_intel_compilers_FREE"/>
      <nonenv name="__LMOD_REF_COUNT_FLEXIBLAS_LIBRARY_PATH"/>
      <nonenv name="EBDEVELINTELMINCOMPILERS"/>
      <nonenv name="intel_compilers_ROOT"/>
      <nonenv name="EBDEVELJUBE"/>
      <nonenv name="EBROOTJUBE"/>
      <nonenv name="EBVERSIONJUBE"/>
      <nonenv name="__LMOD_REF_COUNT_JUBE_INCLUDE_PATH"/>
      <nonenv name="JUBE_INCLUDE_PATH"/>
    </environment>
  </workpackage>
  <workpackage id="7">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000007_execute_base_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_7</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>27</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>9,7,8</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="8">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000008_execute_base_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_8</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>27</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>9,7,8</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="9">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000009_execute_base_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_9</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>27</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>9,7,8</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="10">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000010_execute_base_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_10</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>64</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>10,12,11</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="11">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000011_execute_base_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_11</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>64</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>10,12,11</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="12">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000012_execute_base_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_12</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>64</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>10,12,11</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="13">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000013_execute_base_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_13</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>125</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>14,13,15</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="14">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000014_execute_base_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_14</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>125</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>14,13,15</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="15">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000015_execute_base_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_15</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>125</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>14,13,15</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="16">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000016_execute_base_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000016_execute_base_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_16</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>28</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>18,16,17</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="17">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000017_execute_base_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000017_execute_base_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_17</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>28</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>18,16,17</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="18">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000018_execute_base_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000018_execute_base_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_18</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>28</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>18,16,17</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="19">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000019_execute_base_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000019_execute_base_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_19</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>65</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>21,19,20</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="20">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000020_execute_base_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000020_execute_base_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_20</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>65</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>21,19,20</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="21">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000021_execute_base_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000021_execute_base_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_21</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>65</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>21,19,20</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="22">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000022_execute_base_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000022_execute_base_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_22</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>126</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>23,24,22</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="23">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000023_execute_base_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000023_execute_base_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_23</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>126</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>23,24,22</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="24">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000024_execute_base_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000024_execute_base_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_24</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>126</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>4</parents>
    <iteration_siblings>23,24,22</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="25">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000025_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000025_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000025_execute_tsan-cover_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_25</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>27</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>26,25,27</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="26">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000026_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000026_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000026_execute_tsan-cover_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_26</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>27</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>26,25,27</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="27">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000027_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000027_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000027_execute_tsan-cover_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_27</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>27</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>26,25,27</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="28">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000028_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000028_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000028_execute_tsan-cover_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_28</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>64</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>28,30,29</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="29">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000029_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000029_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000029_execute_tsan-cover_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_29</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>64</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>28,30,29</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="30">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000030_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000030_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000030_execute_tsan-cover_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_30</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>64</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>28,30,29</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="31">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000031_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000031_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000031_execute_tsan-cover_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_31</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>125</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>31,32,33</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="32">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000032_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000032_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000032_execute_tsan-cover_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_32</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>125</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>31,32,33</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="33">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000033_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000033_execute_tsan-cover_base/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000033_execute_tsan-cover_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_33</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>125</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>31,32,33</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="34">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000034_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000034_execute_tsan-cover_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000034_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000034_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000034_execute_tsan-cover_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_34</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>28</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>34,36,35</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="35">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000035_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000035_execute_tsan-cover_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000035_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000035_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000035_execute_tsan-cover_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_35</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>28</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>34,36,35</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="36">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000036_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000036_execute_tsan-cover_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000036_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000036_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000036_execute_tsan-cover_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_36</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>28</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>34,36,35</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="37">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000037_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000037_execute_tsan-cover_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000037_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000037_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000037_execute_tsan-cover_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_37</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>65</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>39,38,37</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="38">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000038_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000038_execute_tsan-cover_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000038_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000038_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000038_execute_tsan-cover_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_38</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>65</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>39,38,37</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="39">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000039_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000039_execute_tsan-cover_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000039_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000039_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000039_execute_tsan-cover_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_39</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>65</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>39,38,37</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="40">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000040_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000040_execute_tsan-cover_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000040_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000040_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000040_execute_tsan-cover_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_40</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>126</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>40,41,42</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="41">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000041_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000041_execute_tsan-cover_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000041_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000041_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000041_execute_tsan-cover_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_41</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>126</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>40,41,42</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="42">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000042_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000042_execute_tsan-cover_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>--must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000042_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json</selection>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml --must:detection-json-file /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000042_execute_tsan-cover_must/work/compile/compile_cover/contract_messages.json --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000042_execute_tsan-cover_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_42</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>126</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan-cover</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>6</parents>
    <iteration_siblings>40,41,42</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="43">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000043_execute_tsan_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_43</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>27</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>45,43,44</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="44">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000044_execute_tsan_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_44</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>27</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>45,43,44</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="45">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000045_execute_tsan_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_45</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>27</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>45,43,44</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="46">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000046_execute_tsan_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_46</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>64</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>48,47,46</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="47">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000047_execute_tsan_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_47</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>64</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>48,47,46</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="48">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000048_execute_tsan_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_48</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>64</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>48,47,46</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="49">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000049_execute_tsan_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_49</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>125</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>51,49,50</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="50">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000050_execute_tsan_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_50</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>125</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>51,49,50</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="51">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection/>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>srun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="0">base</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000051_execute_tsan_base/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_51</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>125</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>51,49,50</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="52">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000052_execute_tsan_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000052_execute_tsan_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_52</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>28</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>54,52,53</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="53">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000053_execute_tsan_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000053_execute_tsan_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_53</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>28</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>54,52,53</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="54">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000054_execute_tsan_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>27000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>27</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000054_execute_tsan_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_54</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>1</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>28</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="0">27</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (27) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>54,52,53</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="55">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000055_execute_tsan_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000055_execute_tsan_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_55</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>65</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>55,56,57</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="56">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000056_execute_tsan_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000056_execute_tsan_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_56</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>65</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>55,56,57</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="57">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000057_execute_tsan_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>64000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>64</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000057_execute_tsan_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_57</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>65</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="1">64</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (64) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>55,56,57</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="58">
    <step iteration="0" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000058_execute_tsan_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000058_execute_tsan_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_58</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>126</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>58,59,60</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="59">
    <step iteration="1" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000059_execute_tsan_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000059_execute_tsan_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_59</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>126</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>58,59,60</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
  <workpackage id="60">
    <step iteration="2" cycle="0">execute</step>
    <parameterset>
      <parameter name="ignorelist" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;${measurement_mode}&quot; == &quot;must&quot; and &quot;${compile_mode}&quot; == &quot;parcoach&quot;</value>
        <selection>False</selection>
      </parameter>
      <parameter name="size" type="string" separator="," duplicate="none" mode="text">
        <value>20</value>
      </parameter>
      <parameter name="submit" type="string" separator="," duplicate="none" mode="text">
        <value>sbatch</value>
      </parameter>
      <parameter name="submit_script" type="string" separator="," duplicate="none" mode="text">
        <value>submit.job</value>
      </parameter>
      <parameter name="done_file" type="string" separator="," duplicate="none" mode="text">
        <value>ready</value>
      </parameter>
      <parameter name="error_file" type="string" separator="," duplicate="none" mode="text">
        <value>error</value>
      </parameter>
      <parameter name="starter" type="string" separator="," duplicate="none" mode="text">
        <value>srun</value>
      </parameter>
      <parameter name="args_starter" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;&quot;,
          &quot;must&quot;: &quot;${must_arguments} --&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000060_execute_tsan_must/work/must_temp --</selection>
      </parameter>
      <parameter name="shared_folder" type="string" separator="," duplicate="none" mode="text">
        <value>shared</value>
      </parameter>
      <parameter name="shared_job_info" type="string" separator="," duplicate="none" mode="text">
        <value>${shared_folder}/jobid</value>
        <selection>shared/jobid</selection>
      </parameter>
      <parameter name="chainjob_script" type="string" separator="," duplicate="none" mode="text">
        <value>./chainJobs.sh</value>
      </parameter>
      <parameter name="chainjob_needs_submit" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="launcher" type="string" separator="," duplicate="none" mode="python">
        <value>{ &quot;base&quot;: &quot;srun&quot;,
          &quot;must&quot;: &quot;${MUSTRUN}&quot;}.get(&quot;${measurement_mode}&quot;, 0)</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="measurement_mode" type="string" separator="," duplicate="none" mode="text">
        <value>base,must</value>
        <selection idx="1">must</selection>
      </parameter>
      <parameter name="tool_threads_per_task" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="must_tool_processes" type="int" separator="," duplicate="none" mode="text">
        <value>${level2_size}</value>
        <selection>1</selection>
      </parameter>
      <parameter name="must_layout_file" type="string" separator="," duplicate="replace" mode="text">
        <value>must_layout_mpitsan.xml.in</value>
      </parameter>
      <parameter name="level0_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_app</value>
      </parameter>
      <parameter name="level0_size" type="int" separator="," duplicate="none" mode="python">
        <value>1000*${application_tasks}</value>
        <selection>125000</selection>
      </parameter>
      <parameter name="level1_size" type="int" separator="," duplicate="none" mode="text">
        <value>${application_tasks}</value>
        <selection>125</selection>
      </parameter>
      <parameter name="level1_place" type="string" separator="," duplicate="none" mode="text">
        <value>thread_place</value>
      </parameter>
      <parameter name="level2_size" type="int" separator="," duplicate="replace" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="level2_place" type="string" separator="," duplicate="none" mode="text">
        <value>mpi_place</value>
      </parameter>
      <parameter name="MUST_DISABLE_TSAN_ONREPORT" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>1</value>
      </parameter>
      <parameter name="must_verbose" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_layout" type="string" separator="," duplicate="none" mode="text">
        <value>--must:layout $PWD/layout.xml</value>
      </parameter>
      <parameter name="must_rma_mode_tsan_opt" type="string" separator="," duplicate="none" mode="text">
        <value>shadow</value>
      </parameter>
      <parameter name="must_rma_mode" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;shadow&quot;,
         &quot;tsan&quot;: &quot;shadow&quot;,
         &quot;tsan-opt&quot;: &quot;${must_rma_mode_tsan_opt}&quot;,
         &quot;isl&quot;: &quot;isl&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection>shadow</selection>
      </parameter>
      <parameter name="must_additional_arguments" type="string" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: &quot;&quot;,
         &quot;tsan&quot;: &quot;&quot;,
         &quot;tsan-opt&quot;: &quot;&quot;,
         &quot;tsan-cover&quot;: &quot;--must:detection-json-file ${jube_wp_abspath}/compile/compile_cover/contract_messages.json&quot;}.get(&quot;${compile_mode}&quot;, &quot;shadow&quot;)</value>
        <selection/>
      </parameter>
      <parameter name="must_arguments" type="string" separator="," duplicate="none" mode="text">
        <value>${must_verbose} --must:output stdout --must:mpiexec ${mpirun} ${must_layout} ${must_additional_arguments} --must:no-user-cache --must:temp ${jube_wp_abspath}/must_temp</value>
        <selection> --must:output stdout --must:mpiexec srun --must:layout $PWD/layout.xml  --must:no-user-cache --must:temp /rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000060_execute_tsan_must/work/must_temp</selection>
      </parameter>
      <parameter name="jobname" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_name}_${jube_step_name}_${jube_wp_id}</value>
        <selection>LULESH_execute_60</selection>
      </parameter>
      <parameter name="nodes" type="string" separator="," duplicate="none" mode="python">
        <value>__import__(&quot;math&quot;).ceil($tasks/$taskspernode)</value>
        <selection>3</selection>
      </parameter>
      <parameter name="taskspernode" type="int" separator="," duplicate="none" mode="text">
        <value>48</value>
      </parameter>
      <parameter name="threadspertask" type="int" separator="," duplicate="none" mode="python">
        <value>{&quot;base&quot;: ${threads} + ${tool_threads_per_task},
         &quot;must&quot;: ${threads} + ${tool_threads_per_task}}.get(&quot;${measurement_mode}&quot;, &quot;1&quot;)</value>
        <selection>2</selection>
      </parameter>
      <parameter name="tasks" type="int" separator="," duplicate="none" mode="python">
        <value>${application_tasks} + (${must_tool_processes} if &quot;${measurement_mode}&quot; == &quot;must&quot; else 0)</value>
        <selection>126</selection>
      </parameter>
      <parameter name="OMP_NUM_THREADS" type="int" separator="," duplicate="none" mode="text" export="true">
        <value>$threads</value>
        <selection>1</selection>
      </parameter>
      <parameter name="queue" type="string" separator="," duplicate="none" mode="text">
        <value>c23ms</value>
      </parameter>
      <parameter name="account" type="string" separator="," duplicate="none" mode="text">
        <value>rwth1269</value>
      </parameter>
      <parameter name="account_slurm" type="string" separator="," duplicate="none" mode="python">
        <value>&quot;#SBATCH --account=$account&quot; if &quot;$account&quot; else &quot;&quot;</value>
        <selection>#SBATCH --account=rwth1269</selection>
      </parameter>
      <parameter name="gres" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="executable" type="string" separator="," duplicate="none" mode="text">
        <value>compile/${executable_full_name}</value>
        <selection>compile/lulesh2.0.tsan</selection>
      </parameter>
      <parameter name="args_exec" type="string" separator="," duplicate="none" mode="text">
        <value>-s $size</value>
        <selection>-s 20</selection>
      </parameter>
      <parameter name="mail" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="env" type="string" separator=";" duplicate="none" mode="text">
        <value>$jube_wp_envstr</value>
        <selection>export MUST_DISABLE_TSAN_ONREPORT=&quot;1&quot;
export OMP_NUM_THREADS=&quot;1&quot;
export time_output_file=&quot;/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out&quot;
export TSAN_OPTIONS=&quot;$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0&quot;
</selection>
      </parameter>
      <parameter name="notification" type="string" separator="," duplicate="none" mode="text">
        <value>NONE</value>
      </parameter>
      <parameter name="outlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.out</value>
      </parameter>
      <parameter name="errlogfile" type="string" separator="," duplicate="none" mode="text">
        <value>job.err</value>
      </parameter>
      <parameter name="timelimit" type="string" separator="," duplicate="none" mode="text">
        <value>01:00:00</value>
      </parameter>
      <parameter name="preprocess" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          ${load_modules};
          ${export};</value>
        <selection>echo &quot;nodelist=$SLURM_JOB_NODELIST&quot;     
          SOURCE_DIR=compile/copy_source;
          LAYOUT_DIR=$PWD;
          COMPILE_DIR=compile;
          module use /home/rwth1269/modules/; module purge; for path in /home/rwth1269/modules; do module use $path; done; for modulename in  gompi/2024a ${mpi_name}/${mpi_version} LLVM/19 CMake/3.29.3 ${must_prerequisite_modules}; do module load $modulename; done;
          for item in  OMPI_CC=clang OMPI_CXX=clang++ CC=clang CXX=clang++ PMIX_MCA_gds=hash OMPI_MCA_memory=^patcher ${openmp_export} ${parcoach_export}; do export &quot;$item&quot;; done;</selection>
      </parameter>
      <parameter name="postprocess" type="string" separator="," duplicate="none" mode="text">
        <value>printf &quot;EXECUTION VERIFICATION CHECK: &quot;;if grep -q &quot;\[MUST-REPORT\] Error.*race&quot; job.out || grep -q &quot;^srun: error:&quot; job.err; then echo &quot;FAILURE&quot;; else echo &quot;SUCCESS&quot;; fi</value>
      </parameter>
      <parameter name="measurement" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="additional_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>${benchmark_job_config}
${basic_job_config}
${perftool_job_config}</value>
        <selection>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid
#SBATCH --ntasks-per-node=48
${perftool_job_config}</selection>
      </parameter>
      <parameter name="application_tasks" type="int" separator="," duplicate="none" mode="text">
        <value>27,64,125</value>
        <selection idx="2">125</selection>
      </parameter>
      <parameter name="threads" type="int" separator="," duplicate="none" mode="text">
        <value>1</value>
      </parameter>
      <parameter name="TSAN_OPTIONS" type="string" separator="," duplicate="none" mode="text" export="true">
        <value>$$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</value>
        <selection>$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0</selection>
      </parameter>
      <parameter name="basic_job_config" type="string" separator="," duplicate="none" mode="text">
        <value>#SBATCH --ntasks-per-node=${taskspernode}</value>
        <selection>#SBATCH --ntasks-per-node=48</selection>
      </parameter>
      <parameter name="benchmark_job_config" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>#SBATCH --exclusive
#SBATCH --switches=1
#SBATCH --hwctr=likwid</value>
      </parameter>
      <parameter name="platform_name" type="string" separator="," duplicate="none" mode="text">
        <value>CLAIX-23</value>
      </parameter>
      <parameter name="cores_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>96</value>
      </parameter>
      <parameter name="GB_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>256</value>
      </parameter>
      <parameter name="MB_LLC_size" type="int" separator="," duplicate="none" mode="text">
        <value>210</value>
      </parameter>
      <parameter name="LLC_cache_line_size" type="int" separator="," duplicate="none" mode="text">
        <value>64</value>
      </parameter>
      <parameter name="sockets_per_node" type="int" separator="," duplicate="none" mode="text">
        <value>2</value>
      </parameter>
      <parameter name="NUMA_regions" type="int" separator="," duplicate="none" mode="text">
        <value>4</value>
      </parameter>
      <parameter name="ERROR_tasks_msg" type="string" separator="!NONE!" duplicate="none" mode="text">
        <value>tasks ($application_tasks) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</value>
        <selection>tasks (125) need to be cubic (N^3), e.g., 1, 8, 27, 64, etc.</selection>
      </parameter>
      <parameter name="ERROR_tasks" type="string" separator="," duplicate="none" mode="python">
        <value>print(
        '\n[\033[91m\033[1m'+'ERROR'+'\033[0m'+'] in step \033[1m${jube_step_name} (${jube_wp_id})\033[0m:\n'+
        '        $ERROR_tasks_msg'
        ) or 'ERR' if round($application_tasks**(1/3))**3 != $application_tasks else 'OK'</value>
        <selection>OK</selection>
      </parameter>
      <parameter name="must_commit" type="string" separator="," duplicate="none" mode="text">
        <value>e3310e89b365042624bfcb99f3891569796af9c4</value>
      </parameter>
      <parameter name="build_must" type="string" separator="," duplicate="none" mode="shell">
        <value>if ${force_must_build} || [ ! -f &quot;${MUSTRUN}&quot; ]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>0
</selection>
      </parameter>
      <parameter name="must_prerequisite_modules" type="string" separator=";" duplicate="none" mode="python">
        <value>&quot; &quot;.join(${prerequisite_modules_dict}.get(&quot;${cmake_module}&quot;, []) + [&quot;${cmake_module}&quot;])</value>
        <selection>CMake/3.29.3</selection>
      </parameter>
      <parameter name="must_root" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../dep/MUST/${__must_hash}</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="must_build_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/build</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/build</selection>
      </parameter>
      <parameter name="must_install_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${must_root}/install</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install</selection>
      </parameter>
      <parameter name="must_repo_folder" type="string" separator="," duplicate="none" mode="text">
        <value>${jube_benchmark_home}/../../MUST</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../MUST</selection>
      </parameter>
      <parameter name="mustbin_path" type="string" separator="," duplicate="none" mode="text">
        <value>${must_install_folder}/bin</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin</selection>
      </parameter>
      <parameter name="must_stats_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="must_isl_compile_flags" type="string" separator="," duplicate="none" mode="text">
        <value/>
      </parameter>
      <parameter name="MUSTCC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cc</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cc</selection>
      </parameter>
      <parameter name="MUSTCXX" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-cxx</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-cxx</selection>
      </parameter>
      <parameter name="MUSTFC" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/must-tsan-fort</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/must-tsan-fort</selection>
      </parameter>
      <parameter name="MUSTRUN" type="string" separator="," duplicate="none" mode="text">
        <value>${mustbin_path}/mustrun</value>
        <selection>/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/../../dep/MUST/459c14f6a5f98473cda82f9dadbd1370/install/bin/mustrun</selection>
      </parameter>
      <parameter name="must_available" type="int" separator="," duplicate="none" mode="shell">
        <value>if [[ -f &quot;${MUSTRUN}&quot; ]]; then echo &quot;1&quot;; else echo &quot;0&quot;; fi</value>
        <selection>1
</selection>
      </parameter>
      <parameter name="force_must_build" type="string" separator="," duplicate="none" mode="text">
        <value>false</value>
      </parameter>
      <parameter name="__must_hash" type="string" separator="," duplicate="none" mode="shell">
        <value>echo -n &quot;${__must_commit} ${must_git_branch} ${__toolchain_module} ${__compiler_module} ${__mpi_module}&quot; | md5sum | cut -f 1 -d &quot; &quot; | tr -d '\n'</value>
        <selection>459c14f6a5f98473cda82f9dadbd1370</selection>
      </parameter>
      <parameter name="mpirun_dict_default" type="string" separator=";" duplicate="none" mode="text">
        <value>{
          
        }</value>
      </parameter>
      <parameter name="mpirun_dict_updated" type="string" separator=";" duplicate="none" mode="text">
        <value>{}</value>
      </parameter>
      <parameter name="mpirun_dict" type="string" separator=";" duplicate="none" mode="text">
        <value>{key:value for (key, value) in list(${mpirun_dict_default}.items()) + list(${mpirun_dict_updated}.items())}</value>
        <selection>{key:value for (key, value) in list({
          
        }.items()) + list({}.items())}</selection>
      </parameter>
      <parameter name="mpirun" type="string" separator=";" duplicate="none" mode="python">
        <value>$mpirun_dict.get(&quot;${mpi_name}&quot;, &quot;${starter}&quot;)</value>
        <selection>srun</selection>
      </parameter>
    </parameterset>
    <parents>5</parents>
    <iteration_siblings>58,59,60</iteration_siblings>
    <environment>
      <env name="TSAN_OPTIONS">'$TSAN_OPTIONS ignore_noninstrumented_modules=1 exitcode=0 log_path=stdout detect_deadlocks=0'</env>
      <env name="FPATH">'/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8/functions:/opt/lmod/8.7.47/init/ksh_funcs:/opt/lmod/8.7.47/init/ksh_funcs'</env>
      <env name="time_output_file">'/rwthfs/rz/cluster/home/ss540294/static-dynamic-interop/benchmarks/LULESH/LULESH.benchmarks/000001/000003_compile_cover/work/time.out'</env>
      <env name="__LMOD_SET_KSH_FPATH">'1'</env>
      <env name="SHLVL">'4'</env>
      <env name="MUST_DISABLE_TSAN_ONREPORT">'1'</env>
      <env name="BASH_FUNC_ml%%">'() {  eval &quot;$($LMOD_DIR/ml_cmd &quot;$@&quot;)&quot;\n}'</env>
      <env name="BASH_FUNC_module%%">'() {  if [ -z &quot;${LMOD_SH_DBG_ON+x}&quot; ]; then\n case &quot;$-&quot; in\n *v*x*)\n __lmod_sh_dbg=\'vx\'\n ;;\n *v*)\n __lmod_sh_dbg=\'v\'\n ;;\n *x*)\n __lmod_sh_dbg=\'x\'\n ;;\n esac;\n fi;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n set +$__lmod_sh_dbg;\n echo &quot;Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod\'s output&quot; 1&gt;&amp;2;\n fi;\n eval &quot;$($LMOD_CMD shell &quot;$@&quot;)&quot; &amp;&amp; eval &quot;$(${LMOD_SETTARG_CMD:-:} -s sh)&quot;;\n __lmod_my_status=$?;\n if [ -n &quot;${__lmod_sh_dbg:-}&quot; ]; then\n echo &quot;Shell debugging restarted&quot; 1&gt;&amp;2;\n set -$__lmod_sh_dbg;\n fi;\n unset __lmod_sh_dbg;\n return $__lmod_my_status\n}'</env>
    </environment>
  </workpackage>
</workpackages>
